(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    621191,      12897]
NotebookOptionsPosition[    600881,      12573]
NotebookOutlinePosition[    601423,      12592]
CellTagsIndexPosition[    601380,      12589]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Differential Equations for Cosmological Correlators", "Title",
 CellChangeTimes->{{3.9065593669073973`*^9, 3.90655937705898*^9}},
 FontSize->36,ExpressionUUID->"b78a374b-eb1b-41cf-9d61-8de124bf5707"],

Cell[TextData[StyleBox["Nima Arkani-Hamed, Daniel Baumann, Aaron Hillman, \
Austin Joyce, Hayden Lee, and Guilherme Pimentel",
 Background->None]], "Subtitle",
 CellChangeTimes->{{3.906560426899794*^9, 3.906560473149275*^9}, {
  3.9065605202270937`*^9, 3.906560528058564*^9}, {3.9065639625140247`*^9, 
  3.906564059354323*^9}, {3.906564223106827*^9, 3.9065642984398203`*^9}, {
  3.906564527839459*^9, 3.9065645321210737`*^9}, {3.906564692634097*^9, 
  3.906564692904009*^9}},
 FontSize->16,ExpressionUUID->"1292d6b1-8c4c-4cbe-9471-9a952df4bdc8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "kinematic-flow.wl"}]}], "Input",
 CellChangeTimes->{{3.906559381802326*^9, 3.9065593845138493`*^9}, {
   3.9065594210344887`*^9, 3.90655942230198*^9}, {3.906563757769245*^9, 
   3.906563768856645*^9}, 3.909540724704936*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"4d2088c1-a9d9-4c01-9d2a-dd1568eff458"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"simplexBoundary", "[", 
     RowBox[{"AngleBracket", "[", 
      RowBox[{"1", ",", "2", ",", "3"}], "]"}], "]"}], " ", 
    RowBox[{"Out", ":", " ", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], "-", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}], "+", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"simplexBoundary", "[", 
     RowBox[{"a_Plus", "|", "a_List", "|", "a_Times"}], "]"}], ":=", 
    RowBox[{"simplexBoundary", "/@", "a"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simplexBoundary", "[", 
     RowBox[{"a_", "?", "NumberQ"}], "]"}], ":=", "a"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simplexBoundary", "[", "a_AngleBracket", "]"}], ":=", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"i", "+", "1"}]], " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", "i", "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.919056990856174*^9, 3.919056998460397*^9}, {
  3.919057034178466*^9, 3.919057265148864*^9}, {3.919057334809423*^9, 
  3.919057484219903*^9}, {3.919057517169846*^9, 3.919057596973709*^9}, {
  3.919060290443305*^9, 3.919060300173357*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"74e43459-c939-44bc-b8b5-10ac5c6435b1"],

Cell[CellGroupData[{

Cell["2-site chain", "Section",
 CellChangeTimes->{{3.894596908581861*^9, 
  3.8945969134806547`*^9}},ExpressionUUID->"7f7450c7-ec94-420c-9129-\
a4f05660e373"],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.891017698707427*^9, 
  3.891017701237521*^9}},ExpressionUUID->"cbcb5a31-a2e3-4f45-b036-\
d04313868401"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsite", "=", "2"}], ";"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"890e176f-26a6-4ae7-8bf4-34ae7716bcba"],

Cell["Projective planes:", "Text",
 CellChangeTimes->{{3.9065602889360113`*^9, 
  3.9065602951195803`*^9}},ExpressionUUID->"2235ab6f-b50f-450f-9f18-\
74ee8dfeeab5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{"X1", "+", "Y"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"X2", "+", "Y"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      RowBox[{"X1", "+", "X2"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "4", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "5", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "0", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"P", "[", "i", "]"}], ".", "X"}]}], "\[IndentingNewLine]", 
 RowBox[{"planes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"L", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.858966167498118*^9, 3.858966204306138*^9}, {
   3.858966286452335*^9, 3.858966423679759*^9}, {3.8589672699135637`*^9, 
   3.858967291430299*^9}, {3.859024698662223*^9, 3.859024706665041*^9}, {
   3.8800424711758947`*^9, 3.88004247133749*^9}, {3.880042526531197*^9, 
   3.8800425400027027`*^9}, {3.890778183806094*^9, 3.890778188707159*^9}, {
   3.890785217901369*^9, 3.890785218087378*^9}, {3.890794356298483*^9, 
   3.890794367076178*^9}, {3.890952764638605*^9, 3.890952776045463*^9}, {
   3.89101770413725*^9, 3.891017704471491*^9}, {3.891017781161976*^9, 
   3.891017817486459*^9}, {3.891017882156727*^9, 3.89101788381826*^9}, {
   3.8910247226342573`*^9, 3.891024722703154*^9}, {3.8910255188644867`*^9, 
   3.8910255221226187`*^9}, {3.891025789582006*^9, 3.891025796148831*^9}, {
   3.891025938215438*^9, 3.8910259443098583`*^9}, {3.891026197299086*^9, 
   3.891026214715406*^9}, 3.891026283067265*^9, 3.891026624569003*^9, {
   3.894596930685602*^9, 3.894596982369191*^9}, {3.894597013162731*^9, 
   3.8945970343244667`*^9}, {3.894624629291276*^9, 3.894624630114456*^9}, {
   3.9065603001536417`*^9, 3.906560300656013*^9}, {3.918611639098716*^9, 
   3.918611681885867*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f96f4e5a-c750-4c63-895a-a8e92ee0769f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "+", "X1", "+", "Y"}], ",", 
   RowBox[{"x2", "+", "X2", "+", "Y"}], ",", 
   RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2"}], ",", "x1", ",", "x2"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.891024722890018*^9, 3.891024785922962*^9, 3.891024872435172*^9, {
   3.8910249628714333`*^9, 3.891024981286975*^9}, 3.8910255238761663`*^9, 
   3.89102579646181*^9, 3.891025944589417*^9, 3.8910260808678923`*^9, {
   3.8910261959983673`*^9, 3.891026198253989*^9}, {3.891026236764872*^9, 
   3.89102628337206*^9}, {3.8910263678834953`*^9, 3.8910263937145348`*^9}, 
   3.891026455363199*^9, 3.891026616690303*^9, {3.891026770615123*^9, 
   3.891026771944641*^9}, 3.891026865625926*^9, 3.891027800079446*^9, {
   3.891028326027172*^9, 3.891028345100575*^9}, 3.891039429305999*^9, 
   3.891040664060376*^9, 3.891040787348671*^9, 3.891040960816307*^9, 
   3.891045097158977*^9, 3.891045790071301*^9, 3.891046785706766*^9, 
   3.891048081162519*^9, {3.89104816223945*^9, 3.891048189664321*^9}, 
   3.8910917630747223`*^9, 3.8934836497334023`*^9, 3.893486611750134*^9, {
   3.8945970272042017`*^9, 3.8945970349105263`*^9}, 3.8946246331472807`*^9, 
   3.896190721884733*^9, 3.896197004410544*^9, 3.896233670495263*^9, 
   3.896913398569066*^9, 3.90500367388087*^9, 3.905004171628344*^9, 
   3.9050042854280777`*^9, 3.905269992576338*^9, {3.905270052167911*^9, 
   3.9052701095218887`*^9}, {3.90527023224314*^9, 3.905270256806897*^9}, 
   3.9065596652162533`*^9, 3.906560301208597*^9, 3.90656312018508*^9, 
   3.906563771835947*^9, 3.9065653226354017`*^9, {3.906566259994359*^9, 
   3.9065662890978737`*^9}, {3.906566386227277*^9, 3.90656646366087*^9}, 
   3.9065664985863953`*^9, 3.909268253218627*^9, 3.9097860549774437`*^9, 
   3.9097862281370707`*^9, 3.909787112933625*^9, 3.910994495925562*^9, 
   3.9109945537634087`*^9, 3.9186112530486603`*^9, {3.918611653401791*^9, 
   3.918611682908311*^9}, 3.919055646335978*^9, 3.919055705770976*^9, {
   3.919139854614127*^9, 3.919139880667889*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"801ceb73-5bee-43e6-a488-e3a2909217ee"]
}, Open  ]],

Cell["Generate letters:", "Text",
 CellChangeTimes->{{3.906560303591837*^9, 
  3.906560311802553*^9}},ExpressionUUID->"033ebfaf-31af-4c76-ab2a-\
96cb0903f3ab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"planes", "[", 
     RowBox[{"[", 
      RowBox[{";;", "3"}], "]"}], "]"}], "/.", 
    RowBox[{"x1", "->", "0"}]}], "/.", 
   RowBox[{"x2", "->", "0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ysub", "=", 
   RowBox[{
    RowBox[{"Subsets", "[", 
     RowBox[{
      RowBox[{"{", "Y", "}"}], ",", "2"}], "]"}], "/.", 
    RowBox[{"Y", "->", 
     RowBox[{"(", 
      RowBox[{"Y", "->", 
       RowBox[{"-", "Y"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"letters", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"%%", "/.", 
        RowBox[{"Ysub", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "Ysub"}]}], "}"}]}], "]"}], "//", "Flatten"}],
     "//", "DeleteDuplicates"}], "//", "Sort"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "}"}]}], "]"}], "&"}], "[", 
      RowBox[{
       RowBox[{"-", "letters"}], ",", "letters"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "letters"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logs", "=", 
   RowBox[{"Log", "/@", "letters"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.906560359613809*^9, 3.9065603608427896`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f6ab3584-0915-4c87-a212-177007f0ef75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"X1", "+", "X2"}], ",", 
   RowBox[{"X1", "-", "Y"}], ",", 
   RowBox[{"X2", "-", "Y"}], ",", 
   RowBox[{"X1", "+", "Y"}], ",", 
   RowBox[{"X2", "+", "Y"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.906560306306931*^9, 3.9065603614094048`*^9, 3.9065631201881723`*^9, 
   3.906563771838868*^9, 3.906565322642932*^9, {3.9065662600416937`*^9, 
   3.9065662891003647`*^9}, {3.906566386234404*^9, 3.906566463668535*^9}, 
   3.906566498588718*^9, 3.909268253222438*^9, 3.909786054986062*^9, 
   3.909786228140295*^9, 3.9097871129359007`*^9, 3.9109944959289*^9, 
   3.9109945538043633`*^9, 3.918611253064035*^9, 3.9190556463685427`*^9, {
   3.9191398546448717`*^9, 3.919139880698566*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"27e1a33a-64d3-40ba-abca-2acd8c6f94b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basis functions", "Subsection",
 CellChangeTimes->{{3.893483656257525*^9, 3.8934836583564453`*^9}, {
  3.9065638768347597`*^9, 3.9065638792857933`*^9}, {3.910994575185568*^9, 
  3.910994575672914*^9}},ExpressionUUID->"c8584851-8ea1-432c-ade7-\
e9e30270c5d1"],

Cell[CellGroupData[{

Cell["Function tree", "Subsubsection",
 CellChangeTimes->{{3.906563854760992*^9, 3.90656388365107*^9}, 
   3.906564160726037*^9, {3.906564767600128*^9, 3.9065647773226233`*^9}, {
   3.910998107769013*^9, 
   3.910998108472127*^9}},ExpressionUUID->"391b7521-0f68-4c76-bc34-\
69e45e2e3c57"],

Cell["Function labels:", "Text",
 CellChangeTimes->{{3.906564170946968*^9, 
  3.906564176237755*^9}},ExpressionUUID->"30b4ef61-ccea-410b-abcf-\
0af810ea12da"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"list", "=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "3"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], "//", 
   "DeleteDuplicates"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"list", "//", "Sort"}], ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Table", "[", 
     RowBox[{"_", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "i"}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.906560807545713*^9, 3.906560808407572*^9}, {
  3.906563862485155*^9, 3.906563862625963*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"3e03a8c7-8ec3-4d42-acbf-66ec762b2a72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.906560808643388*^9, 3.9065631202450523`*^9, 3.906563771903084*^9, 
   3.906563863019043*^9, 3.906565322645612*^9, {3.906566260045001*^9, 
   3.906566289102521*^9}, {3.906566386236899*^9, 3.906566463680375*^9}, 
   3.9065664986105623`*^9, 3.9092682532253027`*^9, 3.9097860549884987`*^9, 
   3.909786228143044*^9, 3.909787112938078*^9, 3.910994495931518*^9, 
   3.9109945538067207`*^9, 3.9186112576800423`*^9, 3.919055646406294*^9, {
   3.919139854684092*^9, 3.919139880732709*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"712c517f-eb25-47a6-b970-5675453dd4e8"]
}, Open  ]],

Cell["\<\
Tree structure and the number of functions in each twist layer:\
\>", "Text",
 CellChangeTimes->{{3.906564183176949*^9, 
  3.90656419254634*^9}},ExpressionUUID->"087f09a7-f701-40a8-8e91-\
9c7fb437bc3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funcTree", "@", "list"}]], "Input",
 CellChangeTimes->{{3.906560814120639*^9, 3.90656081560297*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"fe73fc92-e5b6-462f-8ef7-7ffe7ab0f340"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{}, {1}, {2}, {1, 2}}, {
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 2, 3, 4, 4}, {{2}, {3}, {4}, {4}}}, Pattern}], Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexShapeFunction -> {"Name"}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 2.}, {0., 1.}, {1., 1.}, {0., 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{1, 2}, 0.04522292993630572], 
         ArrowBox[{1, 3}, 0.04522292993630572], 
         ArrowBox[{2, 4}, 0.04522292993630572], 
         ArrowBox[{3, 4}, 0.04522292993630572]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         InsetBox[
          PaneBox[
           RowBox[{"{", "}"}],
           Alignment->Center,
           ImageMargins->2], 1,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", "1", "}"}],
           Alignment->Center,
           ImageMargins->2], 2,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", "2", "}"}],
           Alignment->Center,
           ImageMargins->2], 3,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}],
           Alignment->Center,
           ImageMargins->2], 4,
          BaseStyle->"Graphics"]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{
  3.906560815848196*^9, 3.9065631206156197`*^9, 3.9065637721354227`*^9, 
   3.9065653229501047`*^9, {3.906566260254148*^9, 3.9065662891331778`*^9}, {
   3.906566386534871*^9, 3.906566463686743*^9}, 3.906566498621814*^9, 
   3.9092682544727716`*^9, 3.9097860552055187`*^9, 3.909786228157992*^9, 
   3.909787112954399*^9, 3.910994496991685*^9, 3.910994554092293*^9, 
   3.918611258151388*^9, 3.919055648682703*^9, {3.9191398552012672`*^9, 
   3.9191398814055347`*^9}},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"50bca968-5084-4e46-8a8a-c088322af549"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"# twists\"\>", "0", "1", "2"},
    {"\<\"# functions\"\>", "1", "2", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.906560815849999*^9, 3.906563120617474*^9, 3.906563772138019*^9, 
   3.9065653229505367`*^9, {3.906566260254575*^9, 3.9065662891335173`*^9}, {
   3.9065663865352077`*^9, 3.9065664636870832`*^9}, 3.906566498622178*^9, 
   3.909268254473261*^9, 3.9097860552073603`*^9, 3.909786228158228*^9, 
   3.9097871129546623`*^9, 3.910994496992062*^9, 3.9109945540925922`*^9, 
   3.9186112581532707`*^9, 3.919055648685112*^9, {3.919139855203208*^9, 
   3.91913988140812*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"4db7f0c0-ee2b-4924-acd4-b0b6fed38a0c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Twist replacements", "Subsubsection",
 CellChangeTimes->{{3.9065638399729223`*^9, 3.906563842846744*^9}, 
   3.906568212942895*^9},ExpressionUUID->"de5f8129-1e28-4033-88e7-\
06d696744e97"],

Cell["Replacement operation at each vertex:", "Text",
 CellChangeTimes->{{3.906564320924774*^9, 
  3.906564335095252*^9}},ExpressionUUID->"be6221b7-9e35-462a-80cf-\
e7c04f5b31e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rr", "[", "1", "]"}], "[", "f_", "]"}], ":=", 
  RowBox[{
   RowBox[{"replace", "[", 
    RowBox[{"1", ",", "4"}], "]"}], "@", "f"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rr", "[", "2", "]"}], "[", "f_", "]"}], ":=", 
  RowBox[{
   RowBox[{"replace", "[", 
    RowBox[{"2", ",", "5"}], "]"}], "@", "f"}]}]}], "Input",
 CellChangeTimes->{{3.893483957559414*^9, 3.893483982191189*^9}, {
  3.8945974368519087`*^9, 3.894597484467732*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"4152b70c-ced0-44cb-9276-980730ead6a9"],

Cell["Wavefunction:", "Text",
 CellChangeTimes->{{3.906563793342596*^9, 
  3.906563794485133*^9}},ExpressionUUID->"25e03673-27c8-491b-a29d-\
22c300fc8b78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], "+", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], "+", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"3", ",", "1"}], "\[RightAngleBracket]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.891018015982572*^9, 3.891018019083859*^9}, {
   3.8910181362546988`*^9, 3.8910181844729424`*^9}, {3.8910182169184837`*^9, 
   3.8910182170648823`*^9}, {3.8945972803924026`*^9, 3.89459728775247*^9}, 
   3.906563785665431*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[26]:=",ExpressionUUID->"9f78cec4-a6cd-413b-be91-e455fcdda3c9"],

Cell["Generate basis functions:", "Text",
 CellChangeTimes->{{3.9065637897298326`*^9, 3.906563816131905*^9}, {
  3.9109981124463873`*^9, 
  3.910998112856288*^9}},ExpressionUUID->"6da4caaa-6db9-4a88-ab6f-\
2b2285d4653e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["f", 
    RowBox[{"{", "}"}]], "==", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["F", 
      RowBox[{"{", "}"}]], "=", "\[Psi]"}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{
        RowBox[{"nn", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}]], "==", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["F", 
         RowBox[{
          RowBox[{"nn", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]], "=", 
        RowBox[{"\[Psi]", "//", 
         RowBox[{"rr", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"nn", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"nn", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], "//", "Column"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", 
      RowBox[{
       RowBox[{"nn", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "j", "]"}], "]"}]], "==", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["F", 
        RowBox[{
         RowBox[{"nn", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}]], "=", 
       RowBox[{
        RowBox[{"\[Psi]", "//", 
         RowBox[{"rr", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"nn", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "//", 
        RowBox[{"rr", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"nn", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "@", 
       RowBox[{"nn", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{{3.893484024648986*^9, 3.893484033280217*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"5e1d7a13-7e07-49d7-919e-7cc4577f4361"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["f", 
   RowBox[{"{", "}"}]], "\[Equal]", 
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], "+", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], "+", 
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"3", ",", "1"}], "\[RightAngleBracket]"}]}]}]], "Output",
 CellChangeTimes->{{3.8934840131826553`*^9, 3.893484033526101*^9}, 
   3.8934845409956408`*^9, 3.893486622390987*^9, 3.894597539330743*^9, {
   3.8946246585544357`*^9, 3.89462468733919*^9}, 3.896190723386726*^9, 
   3.896233690677579*^9, 3.8969134039049253`*^9, 3.9050036761415577`*^9, 
   3.9050041717016582`*^9, 3.9050042855075274`*^9, 3.905269995412562*^9, {
   3.9052700522499123`*^9, 3.9052701096014643`*^9}, {3.905270232326008*^9, 
   3.905270256879842*^9}, 3.9065596665753393`*^9, 3.906560949755803*^9, 
   3.906563120634004*^9, 3.906563772169364*^9, 3.9065653230305643`*^9, {
   3.906566260270919*^9, 3.906566289146069*^9}, {3.906566386602036*^9, 
   3.906566463700131*^9}, 3.906566498635791*^9, 3.9092682546640368`*^9, 
   3.909786055217464*^9, 3.909786228174137*^9, 3.909787112970851*^9, 
   3.910994497102337*^9, 3.9109945541023417`*^9, 3.918611258195743*^9, {
   3.918611383037484*^9, 3.918611386835167*^9}, 3.919055648924652*^9, {
   3.919139855254077*^9, 3.919139881443803*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"ec77c701-9711-4d3d-9e46-85790af8bc78"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "1", "}"}]], "\[Equal]", 
      RowBox[{
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"2", ",", "4"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "4"}], "\[RightAngleBracket]"}]}]}]},
    {
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "2", "}"}]], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}]}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "5"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "5"}], "\[RightAngleBracket]"}]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.8934840131826553`*^9, 3.893484033526101*^9}, 
   3.8934845409956408`*^9, 3.893486622390987*^9, 3.894597539330743*^9, {
   3.8946246585544357`*^9, 3.89462468733919*^9}, 3.896190723386726*^9, 
   3.896233690677579*^9, 3.8969134039049253`*^9, 3.9050036761415577`*^9, 
   3.9050041717016582`*^9, 3.9050042855075274`*^9, 3.905269995412562*^9, {
   3.9052700522499123`*^9, 3.9052701096014643`*^9}, {3.905270232326008*^9, 
   3.905270256879842*^9}, 3.9065596665753393`*^9, 3.906560949755803*^9, 
   3.906563120634004*^9, 3.906563772169364*^9, 3.9065653230305643`*^9, {
   3.906566260270919*^9, 3.906566289146069*^9}, {3.906566386602036*^9, 
   3.906566463700131*^9}, 3.906566498635791*^9, 3.9092682546640368`*^9, 
   3.909786055217464*^9, 3.909786228174137*^9, 3.909787112970851*^9, 
   3.910994497102337*^9, 3.9109945541023417`*^9, 3.918611258195743*^9, {
   3.918611383037484*^9, 3.918611386835167*^9}, 3.919055648924652*^9, {
   3.919139855254077*^9, 3.919139881457165*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"10557a3e-dca7-4ea4-a068-a5fc2d5fce09"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]], "\[Equal]", 
      RowBox[{
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "4"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "5"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"4", ",", "5"}], "\[RightAngleBracket]"}]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.8934840131826553`*^9, 3.893484033526101*^9}, 
   3.8934845409956408`*^9, 3.893486622390987*^9, 3.894597539330743*^9, {
   3.8946246585544357`*^9, 3.89462468733919*^9}, 3.896190723386726*^9, 
   3.896233690677579*^9, 3.8969134039049253`*^9, 3.9050036761415577`*^9, 
   3.9050041717016582`*^9, 3.9050042855075274`*^9, 3.905269995412562*^9, {
   3.9052700522499123`*^9, 3.9052701096014643`*^9}, {3.905270232326008*^9, 
   3.905270256879842*^9}, 3.9065596665753393`*^9, 3.906560949755803*^9, 
   3.906563120634004*^9, 3.906563772169364*^9, 3.9065653230305643`*^9, {
   3.906566260270919*^9, 3.906566289146069*^9}, {3.906566386602036*^9, 
   3.906566463700131*^9}, 3.906566498635791*^9, 3.9092682546640368`*^9, 
   3.909786055217464*^9, 3.909786228174137*^9, 3.909787112970851*^9, 
   3.910994497102337*^9, 3.9109945541023417`*^9, 3.918611258195743*^9, {
   3.918611383037484*^9, 3.918611386835167*^9}, 3.919055648924652*^9, {
   3.919139855254077*^9, 3.9191398814603024`*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"e9a633da-8aaf-4bc4-aed7-eed0a82f734e"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["f", 
    RowBox[{"{", "_", "}"}]], " ", "Eplicit", " ", "form"}], 
  TraditionalForm]],ExpressionUUID->"8f9379ac-847c-4b66-a899-8c9895285010"]], \
"Subsection",
 CellChangeTimes->{{3.918576134888845*^9, 
  3.9185761444972687`*^9}},ExpressionUUID->"29d52697-9a80-41da-858f-\
34a1328e0343"],

Cell["he list of all functions f graded by weight is given by", "Text",
 CellChangeTimes->{{3.9185765464853497`*^9, 3.918576572573044*^9}, {
  3.91857668805445*^9, 
  3.9185766928792477`*^9}},ExpressionUUID->"e8ce7204-b085-4549-8d17-\
e703ed7d8e3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"allf", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", 
      RowBox[{"{", "}"}]], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         RowBox[{"nn", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}]], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         RowBox[{"nn", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}]], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.918576552663023*^9, 3.918576628318695*^9}, {
  3.918576676743866*^9, 3.918576735899748*^9}, {3.918611273293055*^9, 
  3.918611273645706*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"30bffaff-d7b3-40e5-b80b-72b937cc92cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["f", 
    RowBox[{"{", "}"}]], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", 
      RowBox[{"{", "1", "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", "2", "}"}]]}], "}"}], ",", 
   RowBox[{"{", 
    SubscriptBox["f", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.918576736140956*^9, {3.9186112616664886`*^9, 3.918611273991703*^9}, 
   3.918611390616886*^9, 3.9190556489678707`*^9, {3.919139855287221*^9, 
   3.9191398814790363`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"779b60e3-3977-4204-9761-1ce77d214917"]
}, Open  ]],

Cell["The expression for all f are given by", "Text",
 CellChangeTimes->{{3.9185764028264217`*^9, 
  3.918576416646823*^9}},ExpressionUUID->"495be4b5-98e1-44c8-bbcc-\
0fdeb704c9b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"evalfRule", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{"{", "}"}]], "->", "\[Psi]"}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{
         SubscriptBox["f", 
          RowBox[{
           RowBox[{"nn", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]], ",", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["F", 
            RowBox[{
             RowBox[{"nn", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}]], "=", 
           RowBox[{"\[Psi]", "//", 
            RowBox[{"rr", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nn", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ")"}]}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{
         SubscriptBox["f", 
          RowBox[{
           RowBox[{"nn", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]], ",", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["F", 
            RowBox[{
             RowBox[{"nn", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}]], "=", 
           RowBox[{
            RowBox[{"\[Psi]", "//", 
             RowBox[{"rr", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"nn", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "//", 
            RowBox[{"rr", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nn", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ")"}]}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.918576423763475*^9, 3.918576538378697*^9}, {
  3.918577024203959*^9, 3.9185770375707808`*^9}, {3.918611288912512*^9, 
  3.9186113309587517`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"7902f8b7-db81-4dc7-937e-5993530dad4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"{", "}"}]], "\[Rule]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightAngleBracket]"}], "+", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], "+", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"3", ",", "1"}], "\[RightAngleBracket]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"{", "1", "}"}]], "\[Rule]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "3"}], "\[RightAngleBracket]"}], "-", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"2", ",", "4"}], "\[RightAngleBracket]"}], "+", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"3", ",", "4"}], "\[RightAngleBracket]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"{", "2", "}"}]], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3"}], "\[RightAngleBracket]"}]}], "+", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"1", ",", "5"}], "\[RightAngleBracket]"}], "-", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"3", ",", "5"}], "\[RightAngleBracket]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]], "\[Rule]", 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"3", ",", "4"}], "\[RightAngleBracket]"}], "-", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"3", ",", "5"}], "\[RightAngleBracket]"}], "+", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"4", ",", "5"}], "\[RightAngleBracket]"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.918611331343032*^9, 3.9186113925374813`*^9, 3.919055649043509*^9, {
   3.919139855330258*^9, 3.9191398814985733`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"384430bd-e16f-40b6-8073-5986349d47f8"]
}, Open  ]],

Cell[TextData[{
 "Each bracket represent the canonical form of a simplex. Which in standard \
coordinates id given by the function ",
 StyleBox["simplex",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.918576753788813*^9, 
  3.918576790188595*^9}},ExpressionUUID->"b961333c-ac52-4943-bef4-\
9c4d03cef19c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "simplex", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simplex", "[", "I__", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Det", "[", 
    RowBox[{"P", "/@", 
     RowBox[{"{", 
      RowBox[{"I", ",", "0"}], "}"}]}], "]"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"L", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"{", "I", "}"}]}], "}"}]}], "]"}], " ", 
     RowBox[{"L", "[", "0", "]"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.9185761480658083`*^9, 3.918576184500575*^9}, {
  3.918576251146511*^9, 3.918576269472024*^9}, {3.9185768222905293`*^9, 
  3.918576852967259*^9}, {3.918576940803419*^9, 3.91857697687085*^9}, {
  3.918611665348633*^9, 3.918611735916263*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"128d144a-958a-449f-a256-d65b64296eae"],

Cell["For example", "Text",
 CellChangeTimes->{{3.918576954039319*^9, 
  3.9185769557098103`*^9}},ExpressionUUID->"f0201269-962a-4945-a866-\
e4abc3e5e3e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simplex", "[", 
  RowBox[{"1", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.918576956635151*^9, 3.9185769601418123`*^9}, {
  3.91861173015691*^9, 3.918611730336289*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"9373d21b-9698-4b5f-b419-489b4a1d21c4"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x1", "+", "X1", "+", "Y"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x2", "+", "X2", "+", "Y"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.9185769604101686`*^9, 3.918576978901017*^9}, 
   3.918611346694384*^9, 3.91861139710603*^9, {3.918611674082417*^9, 
   3.918611738173484*^9}, 3.919055649137459*^9, {3.919139855372138*^9, 
   3.9191398815288153`*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"caee8f7b-fbba-4f6b-9b33-cecd19f102de"]
}, Open  ]],

Cell["Therefore we can evaluate f using", "Text",
 CellChangeTimes->{{3.918576884320888*^9, 
  3.918576897058226*^9}},ExpressionUUID->"b47117cb-ba62-4318-ad5a-\
9d14bb058175"],

Cell[BoxData[
 RowBox[{
  RowBox[{"evalf", "[", "exp_", "]"}], ":=", 
  RowBox[{
   RowBox[{"exp", "/.", " ", "evalfRule"}], "/.", " ", 
   RowBox[{"AngleBracket", "->", " ", "simplex"}]}]}]], "Input",
 CellChangeTimes->{{3.918576898082509*^9, 3.9185769330323067`*^9}, {
  3.918576984661972*^9, 3.918576984824286*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"3ea9d14b-58cd-4716-a62c-5c6d95fd5fab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"evalf", "[", 
  SubscriptBox["f", 
   RowBox[{"{", "}"}]], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Factor"}]}], "Input",
 CellChangeTimes->{{3.9185769877611723`*^9, 3.9185770015167017`*^9}, {
  3.9186113594898653`*^9, 3.9186113612632227`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"dcdccc53-43dc-4071-a705-95429c560d5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x1", "+", "X1", "+", "Y"}], ")"}]}]]}], "-", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x2", "+", "X2", "+", "Y"}], ")"}]}]], "+", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x1", "+", "X1", "+", "Y"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x2", "+", "X2", "+", "Y"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.9185770022750397`*^9, 3.918577042695847*^9, {3.918611352588182*^9, 
   3.918611361492154*^9}, 3.9186114147638273`*^9, 3.918611741798141*^9, 
   3.9190556491804743`*^9, {3.9191398554014273`*^9, 3.919139881637389*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"30882f6d-afbf-4533-aed6-59b6c9f2f736"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "Y"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x1", "+", "X1", "+", "Y"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x2", "+", "X2", "+", "Y"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.9185770022750397`*^9, 3.918577042695847*^9, {3.918611352588182*^9, 
   3.918611361492154*^9}, 3.9186114147638273`*^9, 3.918611741798141*^9, 
   3.9190556491804743`*^9, {3.9191398554014273`*^9, 3.9191398816398973`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"2d1cae61-60d4-48ef-b173-5bfd8b4e41f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differential equations", "Subsection",
 CellChangeTimes->{{3.896913365659911*^9, 3.8969133664460373`*^9}, {
  3.906563209105784*^9, 
  3.906563211243841*^9}},ExpressionUUID->"3b634764-f383-43d8-8dc4-\
f27f0349ea23"],

Cell[BoxData[{
 RowBox[{"solveCoeff", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fsub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "}"}]], "->", "\"\<\[Psi]\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "1", "}"}]], "->", "\"\<F\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "2", "}"}]], "->", 
      "\"\<\!\(\*OverscriptBox[\(F\), \(~\)]\)\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]], "->", "\"\<Z\>\""}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.90656303235634*^9, 3.906563056307406*^9}, {
  3.906564435834671*^9, 3.9065644362786417`*^9}, {3.9065645805554867`*^9, 
  3.9065645806569366`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"dbef8c0c-b3f4-4029-b5b1-9544c7cab512"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dfeq", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eqlvl", "[", "l", "]"}], "[", 
       RowBox[{"[", "m", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"nn", "[", 
          RowBox[{"[", "l", "]"}], "]"}]}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dfeq", "/.", "fsub"}], "//", "Column"}]}], "Input",
 CellChangeTimes->{{3.909268850944661*^9, 3.9092689082886143`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"4a028c51-4242-4160-b17c-639ae75b7fc3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{"d", "[", "\<\"\[Psi]\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"F\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "-", "Y"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"F\"\>"}], "+", "\<\"\[Psi]\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "-", "\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>"}], 
          "+", "\<\"\[Psi]\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{"d", "[", "\<\"F\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2"}]]}], "+", 
       RowBox[{"\<\"F\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"F\"\>", "-", "\<\"Z\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "-", "Y"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", 
          "-", "\<\"Z\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{"d", "[", "\<\"Z\"\>", "]"}], "\[Equal]", 
      RowBox[{"2", " ", "\<\"Z\"\>", " ", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2"}]]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.9092688789885893`*^9, 3.9092689087254667`*^9}, 
   3.909786055262329*^9, 3.9097862281892*^9, 3.909787112985183*^9, 
   3.910994497141541*^9, 3.910994554141409*^9, 3.919055649387788*^9, {
   3.919139855469081*^9, 3.919139881713747*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"db75c33c-75c8-44d9-8bec-952c1687c3a8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["A matrix", "Subsection",
 CellChangeTimes->{{3.906561448254573*^9, 3.90656144881246*^9}, {
  3.906561633282823*^9, 
  3.906561635913178*^9}},ExpressionUUID->"e3d0f411-4b65-434a-b724-\
b609c8708f79"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nsite", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flist", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         RowBox[{"nn", "[", 
          RowBox[{"[", "l", "]"}], "]"}], "[", 
         RowBox[{"[", "m", "]"}], "]"}]], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", 
         RowBox[{"nsite", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "l", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.904291899239594*^9, 3.904291900175728*^9}, {
   3.9050037844377327`*^9, 3.905003793120101*^9}, {3.905004012892078*^9, 
   3.9050040308759727`*^9}, 3.905004136265205*^9, {3.905004181958345*^9, 
   3.905004220022098*^9}, 3.905004270208178*^9, {3.906561431697302*^9, 
   3.9065614586806*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1448e7ed-360c-40b0-b8b2-a93d5fb4a442"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eqlvl", "[", "i", "]"}], "[", 
        RowBox[{"[", "m", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"nsite", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"eqlvl", "[", "i", "]"}]}]}], "}"}]}], "]"}], ",", "1"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Amtx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "flist"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       SuperscriptBox["4", 
        RowBox[{"nsite", "-", "1"}]]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.905003833008774*^9, 3.9050038718871393`*^9}, {
   3.9050040220472183`*^9, 3.905004025577086*^9}, {3.905004116493823*^9, 
   3.905004155472126*^9}, 3.905004222540668*^9, {3.905004255549251*^9, 
   3.905004258941999*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"5e7b6d15-2cbb-41ef-92cf-b4ac7e9c2884"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Amtx", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.906561413560671*^9, 3.906561414261554*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"45920ad0-17d9-4910-9553-97f3de289b45"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "-", "Y"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y"}]]}], "0"},
     {"0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y"}]]}], "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y"}]]}]},
     {"0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "-", "Y"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y"}]]}]},
     {"0", "0", "0", 
      RowBox[{"2", " ", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2"}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.905270023915971*^9, 3.905270109734646*^9}, {
   3.9052702324635572`*^9, 3.90527025698587*^9}, 3.906559666728648*^9, {
   3.906561414822132*^9, 3.9065614614816837`*^9}, 3.9065631206889887`*^9, 
   3.906563772216906*^9, 3.906565323091508*^9, {3.906566260304837*^9, 
   3.906566289178789*^9}, {3.906566386654917*^9, 3.906566463730062*^9}, 
   3.90656649866759*^9, 3.909268254825128*^9, 3.909786055271879*^9, 
   3.909786228203607*^9, 3.909787112990213*^9, 3.910994497151183*^9, 
   3.910994554149797*^9, 3.919055649524008*^9, {3.9191398555874863`*^9, 
   3.919139881745569*^9}},
 CellLabel->
  "Out[46]//MatrixForm=",ExpressionUUID->"5362f04b-9da4-489b-8ba3-\
5bfe9c02380b"]
}, Open  ]],

Cell["Check flatness:", "Text",
 CellChangeTimes->{{3.9065616055909357`*^9, 
  3.9065616265415173`*^9}},ExpressionUUID->"94541ef6-0478-49be-b759-\
5462e08a5dbe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Amtx", "/.", 
    RowBox[{
     SubscriptBox["dL", "a_"], ":>", 
     RowBox[{"Dt", "@", 
      RowBox[{"Log", "[", "a", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"{", 
    RowBox[{"X1", ",", "X2", ",", "Y"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DeleteDuplicates", "@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"A", ",", 
          RowBox[{"Dt", "[", 
           RowBox[{"vars", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ".", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"A", ",", 
          RowBox[{"Dt", "[", 
           RowBox[{"vars", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"A", ",", 
          RowBox[{"Dt", "[", 
           RowBox[{"vars", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}], ".", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"A", ",", 
          RowBox[{"Dt", "[", 
           RowBox[{"vars", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}]}], "//", 
      "Simplify"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "vars"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "@", "vars"}]}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.906563156738124*^9, 3.906563183399865*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"2ffd1205-9fd6-47db-8d45-d638f3467604"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{{3.906563170270688*^9, 3.906563183914638*^9}, 
   3.906563772229122*^9, 3.906565323101242*^9, {3.9065662603186493`*^9, 
   3.906566289187767*^9}, {3.9065663866650877`*^9, 3.906566463735095*^9}, 
   3.9065664986727552`*^9, 3.9092682548361673`*^9, 3.9097860552840147`*^9, 
   3.909786228208941*^9, 3.909787113000441*^9, 3.91099449716142*^9, 
   3.9109945541586246`*^9, 3.919055649602182*^9, {3.919139855638609*^9, 
   3.919139881772459*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"19b97fb3-485d-46d9-bfcb-593fabef589d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["d", "2"], "=", "0"}], 
  TraditionalForm]],ExpressionUUID->"db558651-ab75-4ed3-b656-6cf4e1d65021"]], \
"Subsection",
 CellChangeTimes->{{3.896191997952063*^9, 3.8961920021022*^9}, 
   3.896204903882482*^9},ExpressionUUID->"a1e27523-f08b-4e1c-ba2e-\
76780da8707f"],

Cell["Generate 3-letter relations:", "Text",
 CellChangeTimes->{{3.909268304092073*^9, 
  3.9092683094050903`*^9}},ExpressionUUID->"78076a22-5ef0-4271-a5f6-\
0177368e627b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DeleteDuplicates", "@", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    SubscriptBox["dL", 
                    RowBox[{"letters", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]], "\[Wedge]", 
                    SubscriptBox["dL", 
                    RowBox[{"letters", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]]}], "+", 
                    RowBox[{
                    SubscriptBox["dL", 
                    RowBox[{"letters", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]], "\[Wedge]", 
                    SubscriptBox["dL", 
                    RowBox[{"letters", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]]}], "-", 
                    RowBox[{
                    SubscriptBox["dL", 
                    RowBox[{"letters", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]], "\[Wedge]", 
                    SubscriptBox["dL", 
                    RowBox[{"letters", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]]}]}], "/.", 
                   RowBox[{
                    SubscriptBox["dL", "x_"], ":>", 
                    RowBox[{"Dt", "@", 
                    RowBox[{"Log", "@", "x"}]}]}]}], "/.", 
                  RowBox[{"Dt", "->", "dL"}]}], "/.", 
                 RowBox[{"Dt", "->", "dL"}]}], "/.", 
                RowBox[{
                 RowBox[{"dL", "[", "a_", "]"}], ":>", 
                 SubscriptBox["dL", "a"]}]}], "//", "dLsimp"}], ")"}], "===", 
             "0"}], "\[And]", 
            RowBox[{"i", "=!=", "j"}], "\[And]", 
            RowBox[{"i", "=!=", "k"}], "\[And]", 
            RowBox[{"j", "=!=", "k"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", "0"}], "]"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "@", "letters"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "@", "letters"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "@", "letters"}]}], "}"}]}], "]"}], ",", "2"}], 
      "]"}], ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reltab", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["dL", 
         RowBox[{"letters", "[", 
          RowBox[{"[", "#1", "]"}], "]"}]], "\[Wedge]", 
        SubscriptBox["dL", 
         RowBox[{"letters", "[", 
          RowBox[{"[", "#3", "]"}], "]"}]]}], "+", 
       RowBox[{
        SubscriptBox["dL", 
         RowBox[{"letters", "[", 
          RowBox[{"[", "#2", "]"}], "]"}]], "\[Wedge]", 
        SubscriptBox["dL", 
         RowBox[{"letters", "[", 
          RowBox[{"[", "#1", "]"}], "]"}]]}], "-", 
       RowBox[{
        SubscriptBox["dL", 
         RowBox[{"letters", "[", 
          RowBox[{"[", "#2", "]"}], "]"}]], "\[Wedge]", 
        SubscriptBox["dL", 
         RowBox[{"letters", "[", 
          RowBox[{"[", "#3", "]"}], "]"}]]}]}], "&"}], "@@@", "%"}], "//", 
    "dLsimp"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896200878876768*^9, 3.896200995670882*^9}, {
   3.896201115329508*^9, 3.896201130834425*^9}, {3.896201218145196*^9, 
   3.896201254569583*^9}, {3.896201386717285*^9, 3.896201401718503*^9}, {
   3.896201705085856*^9, 3.896201738149898*^9}, {3.8962017975621347`*^9, 
   3.896201813564982*^9}, {3.8962018461669903`*^9, 3.896201859175349*^9}, 
   3.896201909136682*^9, {3.896202190024123*^9, 3.896202196747652*^9}, {
   3.896202400605111*^9, 3.896202410320497*^9}, {3.896202526619987*^9, 
   3.896202528200025*^9}, {3.896202559103271*^9, 3.896202583693272*^9}, {
   3.8962027417041273`*^9, 3.896202752370966*^9}, 3.89620279593904*^9, 
   3.8962028502861347`*^9, {3.896202902580043*^9, 3.896202905349772*^9}, {
   3.896203520299128*^9, 3.896203579203546*^9}, {3.896203652431855*^9, 
   3.8962036973489637`*^9}, {3.896203790896206*^9, 3.8962037975432*^9}, {
   3.896203831062471*^9, 3.896203833453175*^9}, 3.89620389026049*^9, {
   3.896204146046261*^9, 3.896204257358077*^9}, {3.896204525586306*^9, 
   3.896204549851679*^9}, {3.896204596570838*^9, 3.896204607362891*^9}, {
   3.896204665406876*^9, 3.8962046810677757`*^9}, {3.896204724194367*^9, 
   3.896204725996147*^9}, {3.89620475897729*^9, 3.896204759837791*^9}, {
   3.909268329409647*^9, 3.909268331160379*^9}, 3.909268573506274*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"b757a75d-7e39-43c3-a632-d613b4fef752"],

Cell["Independent relations:", "Text",
 CellChangeTimes->{{3.896205236860721*^9, 3.896205238777342*^9}, {
  3.9092684247568407`*^9, 
  3.909268425392618*^9}},ExpressionUUID->"b191f63f-7a00-472b-8438-\
41098ce44ee4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dLrel", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"reltab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "===", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"reltab", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"reltab", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "reltab"}]}], "}"}]}], "]"}], "//", 
   "DeleteDuplicates"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dLsub", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "->", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"%", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"%", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "%"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dLsub", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"dLrel", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "->", 
      RowBox[{
       SubscriptBox["R", "i"], "-", 
       RowBox[{
        RowBox[{"dLrel", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"dLrel", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "dLrel"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.8962002511293983`*^9, 3.8962003185667753`*^9}, {
   3.896200791879653*^9, 3.896200793989645*^9}, {3.89620141380678*^9, 
   3.896201420390379*^9}, 3.8962015842716208`*^9, {3.89620269835181*^9, 
   3.8962026996667833`*^9}, {3.896202773842804*^9, 3.896202789522406*^9}, {
   3.896202960695013*^9, 3.89620302731758*^9}, {3.896203135011321*^9, 
   3.8962031413898087`*^9}, 3.896203804313056*^9, 3.896203908721472*^9, {
   3.8962040789354343`*^9, 3.896204084398285*^9}, 3.896204707021947*^9, {
   3.8962047531924543`*^9, 3.896204753308976*^9}, 3.896205260092772*^9, {
   3.8962175949351807`*^9, 3.89621761580739*^9}, {3.909268383756082*^9, 
   3.9092683859224157`*^9}, 3.9092686063417397`*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"e63a62e0-de86-4edf-93a0-11e7ed6c1d8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["dL", 
      RowBox[{"X1", "+", "X2"}]], "\[Wedge]", 
     SubscriptBox["dL", 
      RowBox[{"X1", "-", "Y"}]]}], "-", 
    RowBox[{
     SubscriptBox["dL", 
      RowBox[{"X1", "+", "X2"}]], "\[Wedge]", 
     SubscriptBox["dL", 
      RowBox[{"X2", "+", "Y"}]]}], "+", 
    RowBox[{
     SubscriptBox["dL", 
      RowBox[{"X1", "-", "Y"}]], "\[Wedge]", 
     SubscriptBox["dL", 
      RowBox[{"X2", "+", "Y"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["dL", 
      RowBox[{"X1", "+", "X2"}]], "\[Wedge]", 
     SubscriptBox["dL", 
      RowBox[{"X2", "-", "Y"}]]}], "-", 
    RowBox[{
     SubscriptBox["dL", 
      RowBox[{"X1", "+", "X2"}]], "\[Wedge]", 
     SubscriptBox["dL", 
      RowBox[{"X1", "+", "Y"}]]}], "+", 
    RowBox[{
     SubscriptBox["dL", 
      RowBox[{"X2", "-", "Y"}]], "\[Wedge]", 
     SubscriptBox["dL", 
      RowBox[{"X1", "+", "Y"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896200251374465*^9, {3.89620029354781*^9, 3.896200318882703*^9}, 
   3.896200794282926*^9, {3.896201409216544*^9, 3.896201420729764*^9}, {
   3.896201567819278*^9, 3.8962015845653353`*^9}, 3.896201676543063*^9, 
   3.8962017240218897`*^9, 3.896201940072949*^9, 3.896202421677474*^9, 
   3.8962026319114733`*^9, {3.896202685962031*^9, 3.8962026999127607`*^9}, {
   3.89620275561938*^9, 3.8962028017574997`*^9}, 3.89620285375375*^9, 
   3.896202916284135*^9, {3.8962029738181*^9, 3.896203027488236*^9}, 
   3.896203142154983*^9, 3.896203534582852*^9, 3.896203588925021*^9, 
   3.896203701359139*^9, 3.896203804649931*^9, 3.896203838297188*^9, {
   3.896203897101758*^9, 3.8962039089870253`*^9}, {3.896204079363682*^9, 
   3.8962040847838917`*^9}, 3.8962042712905197`*^9, 3.896204558039291*^9, {
   3.8962046019360247`*^9, 3.896204610769889*^9}, {3.896204707197523*^9, 
   3.896204764074873*^9}, 3.896205260391341*^9, 3.896209652091652*^9, 
   3.896210444571609*^9, {3.8962104786018047`*^9, 3.896210484668771*^9}, 
   3.8962108939186573`*^9, 3.896211003468128*^9, 3.896217507584488*^9, {
   3.896217605136279*^9, 3.896217615954479*^9}, 3.896233702589381*^9, 
   3.896913404016588*^9, 3.905003676274508*^9, 3.905003740932942*^9, 
   3.905004171771141*^9, 3.905004285582797*^9, 3.9052699955403347`*^9, {
   3.905270052326213*^9, 3.905270109690608*^9}, {3.905270232407284*^9, 
   3.905270256946793*^9}, 3.9092649342800407`*^9, 3.9092667785537653`*^9, 
   3.909268296801003*^9, 3.909268334271658*^9, 3.909268386469232*^9, 
   3.909268608068501*^9, 3.909786055331791*^9, 3.9097862282539663`*^9, 
   3.909787113042582*^9, 3.9109944972116756`*^9, 3.910994554204391*^9, 
   3.919055649761726*^9, {3.9191398557369337`*^9, 3.919139881862605*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"93b8b317-f302-428f-b20f-4748cc5a32a2"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.896200251374465*^9, {3.89620029354781*^9, 3.896200318882703*^9}, 
   3.896200794282926*^9, {3.896201409216544*^9, 3.896201420729764*^9}, {
   3.896201567819278*^9, 3.8962015845653353`*^9}, 3.896201676543063*^9, 
   3.8962017240218897`*^9, 3.896201940072949*^9, 3.896202421677474*^9, 
   3.8962026319114733`*^9, {3.896202685962031*^9, 3.8962026999127607`*^9}, {
   3.89620275561938*^9, 3.8962028017574997`*^9}, 3.89620285375375*^9, 
   3.896202916284135*^9, {3.8962029738181*^9, 3.896203027488236*^9}, 
   3.896203142154983*^9, 3.896203534582852*^9, 3.896203588925021*^9, 
   3.896203701359139*^9, 3.896203804649931*^9, 3.896203838297188*^9, {
   3.896203897101758*^9, 3.8962039089870253`*^9}, {3.896204079363682*^9, 
   3.8962040847838917`*^9}, 3.8962042712905197`*^9, 3.896204558039291*^9, {
   3.8962046019360247`*^9, 3.896204610769889*^9}, {3.896204707197523*^9, 
   3.896204764074873*^9}, 3.896205260391341*^9, 3.896209652091652*^9, 
   3.896210444571609*^9, {3.8962104786018047`*^9, 3.896210484668771*^9}, 
   3.8962108939186573`*^9, 3.896211003468128*^9, 3.896217507584488*^9, {
   3.896217605136279*^9, 3.896217615954479*^9}, 3.896233702589381*^9, 
   3.896913404016588*^9, 3.905003676274508*^9, 3.905003740932942*^9, 
   3.905004171771141*^9, 3.905004285582797*^9, 3.9052699955403347`*^9, {
   3.905270052326213*^9, 3.905270109690608*^9}, {3.905270232407284*^9, 
   3.905270256946793*^9}, 3.9092649342800407`*^9, 3.9092667785537653`*^9, 
   3.909268296801003*^9, 3.909268334271658*^9, 3.909268386469232*^9, 
   3.909268608068501*^9, 3.909786055331791*^9, 3.9097862282539663`*^9, 
   3.909787113042582*^9, 3.9109944972116756`*^9, 3.910994554204391*^9, 
   3.919055649761726*^9, {3.9191398557369337`*^9, 3.91913988186407*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"18485ba3-dbdf-4654-b942-443ccbe1fd49"]
}, Open  ]],

Cell[TextData[{
 "Taking ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["d", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7bb01667-082c-47dd-886f-5160a413c88c"],
 ":"
}], "Text",
 CellChangeTimes->{{3.909268801053568*^9, 
  3.909268815743663*^9}},ExpressionUUID->"e4b24a7c-7eba-4fd2-9b3d-\
f902394991b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dfsub", "=", 
   RowBox[{"dfeq", "/.", 
    RowBox[{
     RowBox[{"a_", "==", "b_"}], ":>", 
     RowBox[{"a", "->", "b"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddeq", "=", 
   RowBox[{
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"d", "[", 
        SubscriptBox["f", 
         RowBox[{
          RowBox[{"nn", "[", 
           RowBox[{"[", "l", "]"}], "]"}], "[", 
          RowBox[{"[", "m", "]"}], "]"}]], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "l", "]"}], "]"}]}]}], "}"}]}], "]"}]}], "/.", 
    RowBox[{
     RowBox[{"d", "[", "f_", "]"}], ":>", 
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "f", "]"}], "==", 
      RowBox[{"dd", "[", "f", "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8969134532803926`*^9, 3.8969134817941628`*^9}, {
   3.909264949171617*^9, 3.909264949248336*^9}, {3.909265111919114*^9, 
   3.909265131185789*^9}, {3.909265290903359*^9, 3.909265291634861*^9}, {
   3.909265369220039*^9, 3.909265369502838*^9}, 3.909265439956259*^9, 
   3.909268284583028*^9, {3.909268404107223*^9, 3.909268404336402*^9}, {
   3.909268752538142*^9, 3.909268787387886*^9}, {3.9092688854413853`*^9, 
   3.9092688910808153`*^9}, 3.910994517283688*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"7d199948-2f69-4aed-92d6-628ce86e40b1"],

Cell["Substituting three-letter relations:", "Text",
 CellChangeTimes->{{3.896204986768929*^9, 3.896204993841345*^9}, {
  3.896205058505052*^9, 3.8962050591540956`*^9}, {3.896205090628489*^9, 
  3.896205091329484*^9}, {3.8962053105657663`*^9, 3.896205311226162*^9}, {
  3.909268431723091*^9, 3.909268455604525*^9}, {3.909268819328106*^9, 
  3.909268822525887*^9}},ExpressionUUID->"b9021069-d4f8-4f36-bd74-\
3ac7e7956cbc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ddeq", "/.", "dLsub"}], "/.", "fsub"}], "//", "Simplify"}], "//",
   "Column"}]], "Input",
 CellChangeTimes->{{3.8962049808385973`*^9, 3.896204981837256*^9}, 
   3.8962050722775784`*^9, {3.896211027592043*^9, 3.896211029254698*^9}, {
   3.8969134737681093`*^9, 3.896913474078085*^9}, {3.896913521506606*^9, 
   3.896913540935178*^9}, {3.90926737970186*^9, 3.909267393867229*^9}, 
   3.90926861042544*^9, 3.909268653818988*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"36909dde-6986-4403-9532-94a1143bdfb1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "\<\"\[Psi]\"\>", "]"}], "\[Equal]", 
      RowBox[{"\<\"Z\"\>", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["R", "1"], "+", 
         SubscriptBox["R", "2"]}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "\<\"F\"\>", "]"}], "\[Equal]", 
      RowBox[{"\<\"Z\"\>", " ", 
       SubscriptBox["R", "1"]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{"\<\"Z\"\>", " ", 
       SubscriptBox["R", "2"]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "\<\"Z\"\>", "]"}], "\[Equal]", "0"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.8962049820198517`*^9, {3.896205059893553*^9, 3.896205092932783*^9}, 
   3.896205312443021*^9, 3.8962096521970463`*^9, 3.8962104555092688`*^9, 
   3.896210894006268*^9, {3.896211003555757*^9, 3.896211029435384*^9}, 
   3.8962111702554617`*^9, 3.896217507724997*^9, 3.896233702874847*^9, 
   3.8969134041710167`*^9, {3.896913474305744*^9, 3.896913486796208*^9}, {
   3.896913521704405*^9, 3.8969135411754713`*^9}, 3.905003676322988*^9, 
   3.905003740944457*^9, 3.9050041717942877`*^9, 3.9050042856082487`*^9, 
   3.905269995573113*^9, {3.905270052349846*^9, 3.905270109724807*^9}, {
   3.905270232435461*^9, 3.905270256967609*^9}, {3.9092649342995033`*^9, 
   3.9092649527789183`*^9}, 3.909265114935502*^9, 3.9092652937500343`*^9, {
   3.9092654187148027`*^9, 3.909265443538121*^9}, 3.90926677857603*^9, {
   3.909267360471636*^9, 3.9092673941405973`*^9}, 3.909268290416306*^9, {
   3.90926839652201*^9, 3.9092684145443897`*^9}, 3.9092686107202463`*^9, 
   3.909268653994672*^9, 3.909268785172737*^9, 3.909268898316125*^9, 
   3.909786055378652*^9, 3.909786228277025*^9, 3.909787113069138*^9, {
   3.9109944973004837`*^9, 3.910994518801997*^9}, 3.91099455421211*^9, 
   3.919055649798849*^9, {3.9191398557726917`*^9, 3.919139881889027*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"ab0a043e-4e65-49ee-8067-5d6be59b7cdc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symbol", "Subsection",
 CellChangeTimes->{{3.905885889127222*^9, 3.905885899669959*^9}, 
   3.9095072995480127`*^9, 
   3.909541818508711*^9},ExpressionUUID->"472be9a9-c177-4600-a911-\
42d8a00d6336"],

Cell["A matrix in the dS limit:", "Text",
 CellChangeTimes->{{3.909541776822009*^9, 
  3.9095417864891787`*^9}},ExpressionUUID->"9bf1b276-04de-4cd1-aec4-\
7a102700d74b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"flist2", "=", 
   RowBox[{"flist", "/.", 
    RowBox[{
     SubscriptBox["f", "a_"], ":>", 
     RowBox[{
      SuperscriptBox["\[Epsilon]", 
       RowBox[{"-", 
        RowBox[{"Length", "@", "a"}]}]], 
      SubscriptBox["f", "a"]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", 
      FractionBox[
       RowBox[{"Amtx", ".", "flist2"}], 
       RowBox[{"flist2", "/.", 
        RowBox[{
         SubscriptBox["f", "__"], "->", "1"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], "//", 
   "Normal"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Amtxeps0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "flist"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       SuperscriptBox["4", 
        RowBox[{"nsite", "-", "1"}]]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Amtxeps0", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.905003875862096*^9, 3.905003934439176*^9}, {
   3.905004028898918*^9, 3.905004043880624*^9}, {3.905004151604141*^9, 
   3.905004160963085*^9}, {3.9050042308008213`*^9, 3.9050042689740753`*^9}, 
   3.909786079715764*^9, {3.909787141266691*^9, 3.9097871429786882`*^9}, {
   3.910105271171412*^9, 3.9101052716567173`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"9f4ec3f7-45aa-4497-8c6e-37c06c1a7428"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "-", "Y"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y"}]]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y"}]]}]},
     {"0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y"}]]}]},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9097871432814093`*^9, 3.9109944973142023`*^9, 3.910994554225966*^9, 
   3.919055649837099*^9, {3.919139855801399*^9, 3.919139881909362*^9}},
 CellLabel->
  "Out[62]//MatrixForm=",ExpressionUUID->"c164122a-3bc7-44c9-9fa3-\
413eb706af95"]
}, Open  ]],

Cell["Symbol from differential equations:", "Text",
 CellChangeTimes->{{3.909541794121478*^9, 
  3.909541800896603*^9}},ExpressionUUID->"7fdbe502-93ab-4b01-b1e2-\
a892d23746fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sym3", "=", 
   RowBox[{"S", "/@", "flist"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Amtxeps0", ".", "flist"}], "/.", 
     RowBox[{
      SubscriptBox["dL", "a_"], ":>", 
      RowBox[{"dLog", "[", "a", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{
      RowBox[{"dLog", "[", "a_", "]"}], "-", 
      RowBox[{"dLog", "[", "b_", "]"}]}], ":>", 
     RowBox[{"dLog", "[", 
      RowBox[{"a", "/", "b"}], "]"}]}]}], "/.", 
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]], ":>", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A3eq", "=", 
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{
      RowBox[{
       SubscriptBox["f", "a_"], 
       RowBox[{"dLog", "[", "x_", "]"}]}], ":>", 
      RowBox[{
       RowBox[{"S", "[", 
        SubscriptBox["f", "a"], "]"}], "\[CircleTimes]", "x"}]}]}], "/.", " ", 
    RowBox[{
     RowBox[{"dLog", "[", "x_", "]"}], ":>", "x"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Symrule", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sym3", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", 
      RowBox[{"%", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.905885999577129*^9, 3.905886053730645*^9}, {
   3.905886105416738*^9, 3.905886126274975*^9}, {3.909507849198357*^9, 
   3.909507856505982*^9}, 3.909516462610209*^9, {3.909786091483697*^9, 
   3.909786098028549*^9}, {3.909786214058198*^9, 3.9097862249477377`*^9}, 
   3.909786453171426*^9, 3.9097865098082857`*^9, 3.909787093387615*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"2e931894-255e-4f2d-b1b3-52ae7eb95501"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sdiff", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"A3eq", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "//.", "Symrule"}], "//", 
   "TensorSimp"}]}]], "Input",
 CellChangeTimes->{{3.905886038637837*^9, 3.905886080482541*^9}, {
  3.905886112345737*^9, 3.9058861326367493`*^9}, {3.909507867761402*^9, 
  3.909507910850814*^9}, {3.909516467460025*^9, 3.909516471483156*^9}, {
  3.909541743524955*^9, 3.909541744054613*^9}, {3.909786142434511*^9, 
  3.909786142583894*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"5710833f-769e-495a-b505-d611d8367aff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"X1", "+", "X2"}], 
    RowBox[{"X1", "+", "Y"}]], "\[CircleTimes]", 
   FractionBox[
    RowBox[{"X2", "-", "Y"}], 
    RowBox[{"X2", "+", "Y"}]]}], "+", 
  RowBox[{
   FractionBox[
    RowBox[{"X1", "+", "X2"}], 
    RowBox[{"X2", "+", "Y"}]], "\[CircleTimes]", 
   FractionBox[
    RowBox[{"X1", "-", "Y"}], 
    RowBox[{"X1", "+", "Y"}]]}]}]], "Output",
 CellChangeTimes->{{3.905886039274074*^9, 3.9058861330488*^9}, 
   3.905886213936308*^9, 3.9095058652615957`*^9, 3.909507303997395*^9, {
   3.909507865747232*^9, 3.909507911092058*^9}, 3.909508673167213*^9, {
   3.9095088537814302`*^9, 3.909508883699882*^9}, 3.909509164321583*^9, {
   3.909516460943915*^9, 3.9095164717142677`*^9}, 3.909531565555089*^9, 
   3.909539924301042*^9, 3.9095408886103497`*^9, {3.909541721269147*^9, 
   3.90954174423764*^9}, 3.909786101134431*^9, 3.909786143113021*^9, {
   3.909786214874012*^9, 3.909786228305963*^9}, 3.909787113087637*^9, 
   3.9109944973190603`*^9, 3.9109945542343807`*^9, 3.9190556498689203`*^9, {
   3.919139855835458*^9, 3.919139881934168*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"6b434c5e-9c89-439c-be86-e70c5da324bb"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2-site chain \[Epsilon] = 0", "Section",
 CellChangeTimes->{{3.9190568658974743`*^9, 
  3.9190568876957283`*^9}},ExpressionUUID->"4475ec26-3232-47dc-a502-\
08633c458b73"],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.891017698707427*^9, 
  3.891017701237521*^9}},ExpressionUUID->"6bf76658-d716-4be9-ad44-\
06351ab4d375"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsite", "=", "2"}], ";"}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"a72c6f40-e52d-48ad-a4c0-ddf437eb5500"],

Cell["Projective planes:", "Text",
 CellChangeTimes->{{3.9065602889360113`*^9, 
  3.9065602951195803`*^9}},ExpressionUUID->"c3c2af8d-ad48-4401-8625-\
2fdc91255d9c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{"X1", "+", "Y"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"X2", "+", "Y"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      RowBox[{"X1", "+", "X2"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "4", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "5", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "0", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"P", "[", "i", "]"}], ".", "X"}]}], "\[IndentingNewLine]", 
 RowBox[{"planes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"L", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.858966167498118*^9, 3.858966204306138*^9}, {
   3.858966286452335*^9, 3.858966423679759*^9}, {3.8589672699135637`*^9, 
   3.858967291430299*^9}, {3.859024698662223*^9, 3.859024706665041*^9}, {
   3.8800424711758947`*^9, 3.88004247133749*^9}, {3.880042526531197*^9, 
   3.8800425400027027`*^9}, {3.890778183806094*^9, 3.890778188707159*^9}, {
   3.890785217901369*^9, 3.890785218087378*^9}, {3.890794356298483*^9, 
   3.890794367076178*^9}, {3.890952764638605*^9, 3.890952776045463*^9}, {
   3.89101770413725*^9, 3.891017704471491*^9}, {3.891017781161976*^9, 
   3.891017817486459*^9}, {3.891017882156727*^9, 3.89101788381826*^9}, {
   3.8910247226342573`*^9, 3.891024722703154*^9}, {3.8910255188644867`*^9, 
   3.8910255221226187`*^9}, {3.891025789582006*^9, 3.891025796148831*^9}, {
   3.891025938215438*^9, 3.8910259443098583`*^9}, {3.891026197299086*^9, 
   3.891026214715406*^9}, 3.891026283067265*^9, 3.891026624569003*^9, {
   3.894596930685602*^9, 3.894596982369191*^9}, {3.894597013162731*^9, 
   3.8945970343244667`*^9}, {3.894624629291276*^9, 3.894624630114456*^9}, {
   3.9065603001536417`*^9, 3.906560300656013*^9}, {3.918611639098716*^9, 
   3.918611681885867*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"b59489a8-df7c-4219-b02b-dd4895995e77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "+", "X1", "+", "Y"}], ",", 
   RowBox[{"x2", "+", "X2", "+", "Y"}], ",", 
   RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2"}], ",", "x1", ",", "x2"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.891024722890018*^9, 3.891024785922962*^9, 3.891024872435172*^9, {
   3.8910249628714333`*^9, 3.891024981286975*^9}, 3.8910255238761663`*^9, 
   3.89102579646181*^9, 3.891025944589417*^9, 3.8910260808678923`*^9, {
   3.8910261959983673`*^9, 3.891026198253989*^9}, {3.891026236764872*^9, 
   3.89102628337206*^9}, {3.8910263678834953`*^9, 3.8910263937145348`*^9}, 
   3.891026455363199*^9, 3.891026616690303*^9, {3.891026770615123*^9, 
   3.891026771944641*^9}, 3.891026865625926*^9, 3.891027800079446*^9, {
   3.891028326027172*^9, 3.891028345100575*^9}, 3.891039429305999*^9, 
   3.891040664060376*^9, 3.891040787348671*^9, 3.891040960816307*^9, 
   3.891045097158977*^9, 3.891045790071301*^9, 3.891046785706766*^9, 
   3.891048081162519*^9, {3.89104816223945*^9, 3.891048189664321*^9}, 
   3.8910917630747223`*^9, 3.8934836497334023`*^9, 3.893486611750134*^9, {
   3.8945970272042017`*^9, 3.8945970349105263`*^9}, 3.8946246331472807`*^9, 
   3.896190721884733*^9, 3.896197004410544*^9, 3.896233670495263*^9, 
   3.896913398569066*^9, 3.90500367388087*^9, 3.905004171628344*^9, 
   3.9050042854280777`*^9, 3.905269992576338*^9, {3.905270052167911*^9, 
   3.9052701095218887`*^9}, {3.90527023224314*^9, 3.905270256806897*^9}, 
   3.9065596652162533`*^9, 3.906560301208597*^9, 3.90656312018508*^9, 
   3.906563771835947*^9, 3.9065653226354017`*^9, {3.906566259994359*^9, 
   3.9065662890978737`*^9}, {3.906566386227277*^9, 3.90656646366087*^9}, 
   3.9065664985863953`*^9, 3.909268253218627*^9, 3.9097860549774437`*^9, 
   3.9097862281370707`*^9, 3.909787112933625*^9, 3.910994495925562*^9, 
   3.9109945537634087`*^9, 3.9186112530486603`*^9, {3.918611653401791*^9, 
   3.918611682908311*^9}, 3.919055646335978*^9, 3.919055705770976*^9, {
   3.919139855867796*^9, 3.91913988195892*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"8727ce42-65b4-474c-9030-9059d48003c5"]
}, Open  ]],

Cell["Generate letters:", "Text",
 CellChangeTimes->{{3.906560303591837*^9, 
  3.906560311802553*^9}},ExpressionUUID->"f32a5788-8090-42a7-a518-\
9c5975acce9e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"planes", "[", 
     RowBox[{"[", 
      RowBox[{";;", "3"}], "]"}], "]"}], "/.", 
    RowBox[{"x1", "->", "0"}]}], "/.", 
   RowBox[{"x2", "->", "0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ysub", "=", 
   RowBox[{
    RowBox[{"Subsets", "[", 
     RowBox[{
      RowBox[{"{", "Y", "}"}], ",", "2"}], "]"}], "/.", 
    RowBox[{"Y", "->", 
     RowBox[{"(", 
      RowBox[{"Y", "->", 
       RowBox[{"-", "Y"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"letters", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"%%", "/.", 
        RowBox[{"Ysub", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "Ysub"}]}], "}"}]}], "]"}], "//", "Flatten"}],
     "//", "DeleteDuplicates"}], "//", "Sort"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "}"}]}], "]"}], "&"}], "[", 
      RowBox[{
       RowBox[{"-", "letters"}], ",", "letters"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "letters"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logs", "=", 
   RowBox[{"Log", "/@", "letters"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.906560359613809*^9, 3.9065603608427896`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"07a9d6e7-770e-41da-9298-0b37880b994f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"X1", "+", "X2"}], ",", 
   RowBox[{"X1", "-", "Y"}], ",", 
   RowBox[{"X2", "-", "Y"}], ",", 
   RowBox[{"X1", "+", "Y"}], ",", 
   RowBox[{"X2", "+", "Y"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.906560306306931*^9, 3.9065603614094048`*^9, 3.9065631201881723`*^9, 
   3.906563771838868*^9, 3.906565322642932*^9, {3.9065662600416937`*^9, 
   3.9065662891003647`*^9}, {3.906566386234404*^9, 3.906566463668535*^9}, 
   3.906566498588718*^9, 3.909268253222438*^9, 3.909786054986062*^9, 
   3.909786228140295*^9, 3.9097871129359007`*^9, 3.9109944959289*^9, 
   3.9109945538043633`*^9, 3.918611253064035*^9, 3.9190556463685427`*^9, {
   3.9191398558955517`*^9, 3.919139881976926*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"f5a9785d-2eb2-4637-96a2-26411c0e2de6"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3-site chain", "Section",
 CellChangeTimes->{{3.894596908581861*^9, 3.8945969134806547`*^9}, {
  3.9065654833767633`*^9, 
  3.90656548394762*^9}},ExpressionUUID->"f8188e4c-3dca-4a03-843d-\
3c6abd335ca0"],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.891017698707427*^9, 
  3.891017701237521*^9}},ExpressionUUID->"0f47aeb6-1217-49b4-87f3-\
96b64a0b541d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsite", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{3.906565546760046*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"8ce2dba1-ac5d-4644-8918-7a87b4d2b138"],

Cell["Projective planes:", "Text",
 CellChangeTimes->{{3.9065602889360113`*^9, 
  3.9065602951195803`*^9}},ExpressionUUID->"19b3652b-4add-484e-924e-\
fc1153f25757"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", 
     RowBox[{"X1", "+", "Y12"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", 
     RowBox[{"X2", "+", "Y12", "+", "Y23"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", 
     RowBox[{"X3", "+", "Y23"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "4", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", 
     RowBox[{"X1", "+", "X2", "+", "X3"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "5", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", 
     RowBox[{"X1", "+", "X2", "+", "Y23"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", "6", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "1", ",", 
      RowBox[{"X2", "+", "X3", "+", "Y12"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "7", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "8", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "9", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "10", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"P", "[", "i", "]"}], ".", "X"}]}], "\[IndentingNewLine]", 
 RowBox[{"planes", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"L", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "9"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.858966167498118*^9, 3.858966204306138*^9}, {
   3.858966286452335*^9, 3.858966423679759*^9}, {3.8589672699135637`*^9, 
   3.858967291430299*^9}, {3.859024698662223*^9, 3.859024706665041*^9}, {
   3.8800424711758947`*^9, 3.88004247133749*^9}, {3.880042526531197*^9, 
   3.8800425400027027`*^9}, {3.890778183806094*^9, 3.890778188707159*^9}, {
   3.890785217901369*^9, 3.890785218087378*^9}, {3.890794356298483*^9, 
   3.890794367076178*^9}, {3.890952764638605*^9, 3.890952776045463*^9}, {
   3.89101770413725*^9, 3.891017704471491*^9}, {3.891017781161976*^9, 
   3.891017817486459*^9}, {3.891017882156727*^9, 3.89101788381826*^9}, {
   3.8910247226342573`*^9, 3.891024722703154*^9}, {3.8910255188644867`*^9, 
   3.8910255221226187`*^9}, {3.891025789582006*^9, 3.891025796148831*^9}, {
   3.891025938215438*^9, 3.8910259443098583`*^9}, {3.891026197299086*^9, 
   3.891026214715406*^9}, 3.891026283067265*^9, 3.891026624569003*^9, {
   3.894596930685602*^9, 3.894596982369191*^9}, {3.894597013162731*^9, 
   3.8945970343244667`*^9}, {3.894624629291276*^9, 3.894624630114456*^9}, {
   3.9065603001536417`*^9, 3.906560300656013*^9}, {3.906565561537054*^9, 
   3.906565574262048*^9}, {3.918611819020362*^9, 3.918611831578445*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"e201c221-daf3-4934-9f78-7fbbbd7a23cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "+", "X1", "+", "Y12"}], ",", 
   RowBox[{"x2", "+", "X2", "+", "Y12", "+", "Y23"}], ",", 
   RowBox[{"x3", "+", "X3", "+", "Y23"}], ",", 
   RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], ",", 
   RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], ",", 
   RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], ",", "x1", 
   ",", "x2", ",", "x3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.891024722890018*^9, 3.891024785922962*^9, 3.891024872435172*^9, {
   3.8910249628714333`*^9, 3.891024981286975*^9}, 3.8910255238761663`*^9, 
   3.89102579646181*^9, 3.891025944589417*^9, 3.8910260808678923`*^9, {
   3.8910261959983673`*^9, 3.891026198253989*^9}, {3.891026236764872*^9, 
   3.89102628337206*^9}, {3.8910263678834953`*^9, 3.8910263937145348`*^9}, 
   3.891026455363199*^9, 3.891026616690303*^9, {3.891026770615123*^9, 
   3.891026771944641*^9}, 3.891026865625926*^9, 3.891027800079446*^9, {
   3.891028326027172*^9, 3.891028345100575*^9}, 3.891039429305999*^9, 
   3.891040664060376*^9, 3.891040787348671*^9, 3.891040960816307*^9, 
   3.891045097158977*^9, 3.891045790071301*^9, 3.891046785706766*^9, 
   3.891048081162519*^9, {3.89104816223945*^9, 3.891048189664321*^9}, 
   3.8910917630747223`*^9, 3.8934836497334023`*^9, 3.893486611750134*^9, {
   3.8945970272042017`*^9, 3.8945970349105263`*^9}, 3.8946246331472807`*^9, 
   3.896190721884733*^9, 3.896197004410544*^9, 3.896233670495263*^9, 
   3.896913398569066*^9, 3.90500367388087*^9, 3.905004171628344*^9, 
   3.9050042854280777`*^9, 3.905269992576338*^9, {3.905270052167911*^9, 
   3.9052701095218887`*^9}, {3.90527023224314*^9, 3.905270256806897*^9}, 
   3.9065596652162533`*^9, 3.906560301208597*^9, 3.90656312018508*^9, 
   3.906563771835947*^9, 3.9065653226354017`*^9, 3.906565723446694*^9, 
   3.906565882043827*^9, {3.906566098265087*^9, 3.906566107421625*^9}, {
   3.906566226969555*^9, 3.906566247477562*^9}, 3.906566365107006*^9, 
   3.906566399487014*^9, {3.906566430666151*^9, 3.906566495893815*^9}, 
   3.906568147170924*^9, 3.908978585633246*^9, {3.909540986775086*^9, 
   3.909541000687727*^9}, 3.910994589611495*^9, 3.910994636126391*^9, 
   3.918572796295723*^9, 3.918611998643798*^9, {3.919139855928876*^9, 
   3.919139882001274*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"172f80f0-3d4c-40bd-991a-5263e3226310"]
}, Open  ]],

Cell["Generate letters:", "Text",
 CellChangeTimes->{{3.906560303591837*^9, 
  3.906560311802553*^9}},ExpressionUUID->"a294d02b-3728-4c50-9dd6-\
c96e73bb6c1d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"planes", "[", 
      RowBox[{"[", 
       RowBox[{";;", "6"}], "]"}], "]"}], "/.", 
     RowBox[{"x1", "->", "0"}]}], "/.", 
    RowBox[{"x2", "->", "0"}]}], "/.", 
   RowBox[{"x3", "->", "0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ysub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Y12", ",", "Y23"}], "}"}], ",", "2"}], "]"}], "/.", 
     RowBox[{"Y12", "->", 
      RowBox[{"(", 
       RowBox[{"Y12", "->", 
        RowBox[{"-", "Y12"}]}], ")"}]}]}], "/.", 
    RowBox[{"Y23", "->", 
     RowBox[{"(", 
      RowBox[{"Y23", "->", 
       RowBox[{"-", "Y23"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"letters", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"%%", "/.", 
        RowBox[{"Ysub", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "Ysub"}]}], "}"}]}], "]"}], "//", "Flatten"}],
     "//", "DeleteDuplicates"}], "//", "Sort"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "}"}]}], "]"}], "&"}], "[", 
      RowBox[{
       RowBox[{"-", "letters"}], ",", "letters"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "letters"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.906565679509358*^9, 3.906565701960153*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"4f466e70-0054-4acf-933b-ecd60bd6385d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"X1", "+", "X2", "+", "X3"}], ",", 
   RowBox[{"X1", "-", "Y12"}], ",", 
   RowBox[{"X2", "+", "X3", "-", "Y12"}], ",", 
   RowBox[{"X1", "+", "Y12"}], ",", 
   RowBox[{"X2", "+", "X3", "+", "Y12"}], ",", 
   RowBox[{"X1", "+", "X2", "-", "Y23"}], ",", 
   RowBox[{"X3", "-", "Y23"}], ",", 
   RowBox[{"X2", "-", "Y12", "-", "Y23"}], ",", 
   RowBox[{"X2", "+", "Y12", "-", "Y23"}], ",", 
   RowBox[{"X1", "+", "X2", "+", "Y23"}], ",", 
   RowBox[{"X3", "+", "Y23"}], ",", 
   RowBox[{"X2", "-", "Y12", "+", "Y23"}], ",", 
   RowBox[{"X2", "+", "Y12", "+", "Y23"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.906565725226289*^9, 3.906565882046505*^9, {3.906566098267888*^9, 
   3.906566107430682*^9}, {3.906566226990532*^9, 3.906566247480192*^9}, 
   3.906566365116068*^9, 3.906566399493183*^9, {3.906566430678896*^9, 
   3.906566495896776*^9}, 3.9065681471745253`*^9, 3.908978585637635*^9, {
   3.909540986778123*^9, 3.909541000690069*^9}, 3.9109945896201763`*^9, 
   3.910994636128511*^9, 3.918572796325486*^9, 3.918611998661983*^9, {
   3.9191398559564734`*^9, 3.91913988201994*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"34b814da-eb4a-4632-8578-59553bf61eaa"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Basis functions", "Subsection",
 CellChangeTimes->{{3.893483656257525*^9, 3.8934836583564453`*^9}, {
  3.9065638768347597`*^9, 3.9065638792857933`*^9}, {3.910994581956955*^9, 
  3.910994582461959*^9}},ExpressionUUID->"67478b20-f404-4ea6-ad8d-\
cb55f710bdce"],

Cell[CellGroupData[{

Cell["Function tree", "Subsubsection",
 CellChangeTimes->{{3.906563854760992*^9, 3.90656388365107*^9}, 
   3.906564160726037*^9, {3.906564767600128*^9, 3.9065647773226233`*^9}, {
   3.910998133884815*^9, 
   3.910998135521802*^9}},ExpressionUUID->"14203a4b-8ade-4bbd-a97d-\
b547ca74c951"],

Cell["Function labels:", "Text",
 CellChangeTimes->{{3.906564170946968*^9, 
  3.906564176237755*^9}},ExpressionUUID->"c0c5e260-cc1d-45b6-9cfc-\
45cf019df568"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      SubscriptBox["2", "i"], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"list", "=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"%", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "3"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "%"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], "//",
    "DeleteDuplicates"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"list", "//", "Sort"}], ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Table", "[", 
     RowBox[{"_", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "i"}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.906565768237056*^9, 3.906565786135775*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"b01be6a3-5f53-40a4-aa97-b5e2ec418dc5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    SubscriptBox["2", "1"], "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["2", "1"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["2", "1"], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["2", "1"], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    SubscriptBox["2", "2"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["2", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["2", "2"], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["2", "2"], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    SubscriptBox["2", "3"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["2", "3"], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["2", "3"], ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.906565772164392*^9, 3.9065657864328547`*^9}, 
   3.906565882049159*^9, 3.906566011635355*^9, {3.906566098305147*^9, 
   3.906566107433558*^9}, {3.906566226993368*^9, 3.906566247483008*^9}, 
   3.906566365119224*^9, 3.9065663995090237`*^9, {3.9065664306854973`*^9, 
   3.906566495902727*^9}, 3.906568147193811*^9, 3.9089785856394997`*^9, {
   3.909540986787067*^9, 3.909541000692296*^9}, 3.910994589623011*^9, 
   3.91099463613048*^9, 3.918572796360236*^9, 3.918612002617729*^9, {
   3.9191398559889717`*^9, 3.919139882045143*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"cfeccb27-7d2a-439c-bd9f-7b0777ae8357"]
}, Open  ]],

Cell["\<\
Tree structure and the number of functions in each twist layer:\
\>", "Text",
 CellChangeTimes->{{3.906564183176949*^9, 
  3.90656419254634*^9}},ExpressionUUID->"85b3d322-9b30-4337-b58a-\
3f71480dc317"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funcTree", "@", "list"}]], "Input",
 CellChangeTimes->{{3.906560814120639*^9, 3.90656081560297*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"14012c8c-fe0c-4611-a1ff-a7bea21bc961"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{}, {1}, {
        Subscript[2, 1]}, {3}, {1, 
        Subscript[2, 1]}, {1, 3}, {
        Subscript[2, 1], 3}, {1, 
        Subscript[2, 1], 3}, {
        Subscript[2, 2]}, {1, 
        Subscript[2, 2]}, {
        Subscript[2, 2], 3}, {1, 
        Subscript[2, 2], 3}, {
        Subscript[2, 3]}, {1, 
        Subscript[2, 3]}, {
        Subscript[2, 3], 3}, {1, 
        Subscript[2, 3], 3}}, {
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 5, 9, 11, 15, 16, 19, 20, 20, 22, 23, 24, 24, 26, 27, 28, 
          28}, {{2}, {3}, {4}, {9}, {13}, {5}, {6}, {10}, {14}, {5}, {7}, {
          6}, {7}, {11}, {15}, {8}, {8}, {12}, {16}, {8}, {10}, {11}, {12}, {
          12}, {14}, {15}, {16}, {16}}}, Pattern}], Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexShapeFunction -> {"Name"}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 3.}, {-1., 2.}, {-2., 2.}, {0., 2.}, {-3., 
       1.}, {-1., 1.}, {-2., 1.}, {-2., 0.}, {1., 2.}, {0., 1.}, {1., 1.}, {
       0., 0.}, {2., 2.}, {2., 1.}, {3., 1.}, {2., 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{1, 2}, 0.09695431472081217], 
         ArrowBox[{1, 3}, 0.09695431472081217], 
         ArrowBox[{1, 4}, 0.09695431472081217], 
         ArrowBox[{1, 9}, 0.09695431472081217], 
         ArrowBox[{1, 13}, 0.09695431472081217], 
         ArrowBox[{2, 5}, 0.09695431472081217], 
         ArrowBox[{2, 6}, 0.09695431472081217], 
         ArrowBox[{2, 10}, 0.09695431472081217], 
         ArrowBox[{2, 14}, 0.09695431472081217], 
         ArrowBox[{3, 5}, 0.09695431472081217], 
         ArrowBox[{3, 7}, 0.09695431472081217], 
         ArrowBox[{4, 6}, 0.09695431472081217], 
         ArrowBox[{4, 7}, 0.09695431472081217], 
         ArrowBox[{4, 11}, 0.09695431472081217], 
         ArrowBox[{4, 15}, 0.09695431472081217], 
         ArrowBox[{5, 8}, 0.09695431472081217], 
         ArrowBox[{6, 8}, 0.09695431472081217], 
         ArrowBox[{6, 12}, 0.09695431472081217], 
         ArrowBox[{6, 16}, 0.09695431472081217], 
         ArrowBox[{7, 8}, 0.09695431472081217], 
         ArrowBox[{9, 10}, 0.09695431472081217], 
         ArrowBox[{9, 11}, 0.09695431472081217], 
         ArrowBox[{10, 12}, 0.09695431472081217], 
         ArrowBox[{11, 12}, 0.09695431472081217], 
         ArrowBox[{13, 14}, 0.09695431472081217], 
         ArrowBox[{13, 15}, 0.09695431472081217], 
         ArrowBox[{14, 16}, 0.09695431472081217], 
         ArrowBox[{15, 16}, 0.09695431472081217]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         InsetBox[
          PaneBox[
           RowBox[{"{", "}"}],
           Alignment->Center,
           ImageMargins->2], 1,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", "1", "}"}],
           Alignment->Center,
           ImageMargins->2], 2,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            SubscriptBox["2", "1"], "}"}],
           Alignment->Center,
           ImageMargins->2], 3,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", "3", "}"}],
           Alignment->Center,
           ImageMargins->2], 4,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{"1", ",", 
             SubscriptBox["2", "1"]}], "}"}],
           Alignment->Center,
           ImageMargins->2], 5,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}],
           Alignment->Center,
           ImageMargins->2], 6,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["2", "1"], ",", "3"}], "}"}],
           Alignment->Center,
           ImageMargins->2], 7,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{"1", ",", 
             SubscriptBox["2", "1"], ",", "3"}], "}"}],
           Alignment->Center,
           ImageMargins->2], 8,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            SubscriptBox["2", "2"], "}"}],
           Alignment->Center,
           ImageMargins->2], 9,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{"1", ",", 
             SubscriptBox["2", "2"]}], "}"}],
           Alignment->Center,
           ImageMargins->2], 10,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["2", "2"], ",", "3"}], "}"}],
           Alignment->Center,
           ImageMargins->2], 11,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{"1", ",", 
             SubscriptBox["2", "2"], ",", "3"}], "}"}],
           Alignment->Center,
           ImageMargins->2], 12,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            SubscriptBox["2", "3"], "}"}],
           Alignment->Center,
           ImageMargins->2], 13,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{"1", ",", 
             SubscriptBox["2", "3"]}], "}"}],
           Alignment->Center,
           ImageMargins->2], 14,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["2", "3"], ",", "3"}], "}"}],
           Alignment->Center,
           ImageMargins->2], 15,
          BaseStyle->"Graphics"], InsetBox[
          PaneBox[
           RowBox[{"{", 
            RowBox[{"1", ",", 
             SubscriptBox["2", "3"], ",", "3"}], "}"}],
           Alignment->Center,
           ImageMargins->2], 16,
          BaseStyle->"Graphics"]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{
  3.906560815848196*^9, 3.9065631206156197`*^9, 3.9065637721354227`*^9, 
   3.9065653229501047`*^9, 3.906565789144362*^9, 3.906565882074003*^9, {
   3.906566098628169*^9, 3.906566107735773*^9}, {3.906566227028777*^9, 
   3.9065662475146103`*^9}, 3.906566365419835*^9, 3.906566399544916*^9, {
   3.906566430709186*^9, 3.906566495925349*^9}, 3.906568147220379*^9, 
   3.908978586518697*^9, {3.909540987114963*^9, 3.909541000718471*^9}, 
   3.910994589916342*^9, 3.910994636147744*^9, 3.918572801825218*^9, 
   3.91861200266133*^9, {3.9191398560296803`*^9, 3.919139882079298*^9}},
 CellLabel->
  "During evaluation of \
In[104]:=",ExpressionUUID->"f5768565-7913-46ed-a9bf-d0a2c56a5ead"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"# twists\"\>", "0", "1", "2", "3"},
    {"\<\"# functions\"\>", "1", "5", "7", "3"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.906560815849999*^9, 3.906563120617474*^9, 3.906563772138019*^9, 
   3.9065653229505367`*^9, 3.906565789147469*^9, 3.906565882077273*^9, {
   3.906566098631065*^9, 3.9065661077387323`*^9}, {3.906566227031584*^9, 
   3.9065662475174637`*^9}, 3.9065663654228897`*^9, 3.9065663995476837`*^9, {
   3.9065664307120457`*^9, 3.906566495928141*^9}, 3.906568147223523*^9, 
   3.90897858652064*^9, {3.909540987115273*^9, 3.909541000718728*^9}, 
   3.91099458991663*^9, 3.910994636147973*^9, 3.9185728018390627`*^9, 
   3.91861200266293*^9, {3.9191398560313997`*^9, 3.9191398820809727`*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"2860428b-0187-4af8-908c-85ad9379698d"]
}, Open  ]],

Cell[TextData[{
 "Here is the interpretation with tubing. You can see the notation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["i", "j"], TraditionalForm]],ExpressionUUID->
  "1f3d0fa7-43aa-4d29-a563-9f7ba545062d"],
 " appearing on the first arrows of the graph."
}], "Text",
 CellChangeTimes->{{3.918575951650985*^9, 
  3.9185760117985697`*^9}},ExpressionUUID->"e928b812-48af-40cc-9887-\
535ebe367cd6"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
nu+5c95fOwQBKo+glpfGmKdOle51bErbIDochVnJkBBBwX1tdEh0qvN7YvSx
trm4YfE0uAm3mLIoNTmREhOTKCVVTwaTfPPCWM1dNjeI1bfv6emR7XVBG+zX
pIqLi0WHAiALlvs609jO/1cV1hxKjGC5LTYn1/kdjTkJ4fwcPDg6nUSVAPPn
83DRRjoO8OfPAmMiABDPTMm68/c7hsSQ3uOO10BxYdGUKkNHvXTpUt7O++u9
FdnZ2fz49u/fLzoUAJ9n2bhRyntVT/lQXCA93UQtlcrvJyeRIvi1iXBKyHH+
FPv1i5AYfb+xk4nS43Ski0mglPQsytKnU3Lfv9l9kWHRSWSQIQVmr8PL1qEC
/1NaWso/39WrA2gNCQAZsTm5wXxOV6yL82szpehs8750yeKqffn7ebhoIxkH
+PtngTERAAhlTaeYEFvuKzgqhTwfDhkoLtL7+dks78/awJSUlGGf29DQQHq9
nj766CP+v+zfatmwYQN95zvf4esLDzZp0iS6/PLLqbLS+Tj47Nmz/BhZfyYX
dh0+LS2N5s6dq3r/wb4rjz322JCfsxrXf/zjH2nmzJmqxsOOn70P7P0oKkLd
eX/WkZdHeWMu5nkv0yOPig6H6MQKoszJRM1Krd1tofSYENu1ifAEcp76so+d
gkkn1fqykiE+kqKSjUPmEZhSovgcseDIJPJ22m5ycjJ98MEH1NXV5fZ5ov5G
vWm3leCL7faCBQvo/fffp87OTlnjQbsNfs+aRbGhtvPrUFcFQqRz8HBKELRM
CPvb9vQ8/MSJE/x5bGP3RatJS+eeIx2PeDoOYHOph/sstNavjfQ7ocSYCADA
YwNqfbkqFGMdOg+b9de6JPK2tAyr4ejJvd/Lly+nX/3qV/TrX/+afvazn0mb
Wm1n0Pn36N/+7d8G9Desn7E/xvobV1ifwI6T9Wveeu+99/j+fvvb39Kf//xn
Cg4OpiuuuEKVNentxzr4HMR+7mF/7MCBA4rHwr4zkZGR9B//8R900UUX0X/9
13/xfb/zzjuK7xvEKL3/AZ73Mvb9rVmLNHIf1vYXiRZdrUwOzJJK0cG2v6mw
OBc3pEtjp373oFtSKCpURwl6k5N7aHIoIZw9P4SivVirhNW4Z23amjVrXD5H
9N+ot+22nHy13WZ13NjnfPr0aVliEf2dAFCLNSv2/Pl1CMW4uqnCfg4usNZX
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
zHa/zEVjqCM3V3Q4ABAgJqadkMZQm09Ujuo1AjV3337ypDTGKXsi1rsXG01N
sPUPEq0di/sfBykvL6dvvvmG9u7dS1u3bqX09HQhm16vp/3799OJvrFwfb36
tcnb2tro1KlT9PXXX9OuXbuEvQ+bNm2iPXv20JEjR6igoED198EftXR0kW5m
Jm+3r5m2m2paAqOu4qh0WW3tJGtPV91FZG1WdHeVCW/xPqHghhsV3Q8AAIAv
Mk+d6rhGlLZBdDgAEEBYham75mTzMdSYSXoqrj074tew5+5zAyh339vVRSXR
0fy486+6ms6VlcvzwiOpCZY12fZYZt//Wi3y7N9HVVRU8DzXJ598QpMnT9bk
tmDBAp4DYjkpJR08eJCWLVsm/HhdbdOmTaM0tgZegLQVSjEU10vXLZ5KOSw6
HO3KfM/RjrJ5tgrq7GuH7OfzdZ8nK7ovAAAAX2PZuFHqJ6unfCg6HAAIQKcq
LXRBwjY+hnoweWQ1pAI1d1/11luOWsb6ncrsZLiaYN+udvz80DxlYtC4hoYG
PrfInleZOXMmn2d0/PhxKioqIrPZTE1NTUK2SrbmaX4+bezr59esWUPvv/8+
j3Fq39/Mvn37ZH8v2DHPmTNHei+++OILys7OptOnT/O5cGVlZULeBzbnrbS0
lE6ePEk7d+6kefPmSTGuXLmSTCaT7O9FoFiSXSLlvz7OyBcdjvacTnO0kUeU
z0XV9LU//B6Oiy+hbktgX48AAADoryMvj/LGXMz7SdMjj4oOBwAC2Noj5dIY
avJmN3Wm+gnU3H3D8uXScdd++qnyO+Q1wSY4uR/yZcd/L4ok+jZV+Vg0hOVS
7PmkJUuW8DyTlnV2dvL7D1l+zj4PrLa2VpbXXbt2rZRPYvc3trRo+z7Yb7/9
dkDMSuQCA8WEtTlS273j22rR4WhHndHRPm57UfHd9XR0SPf+s2tCAAAA4FB6
/wO8jzRefgVZi4tFhwMAAW7SplPSGGr90TNunzswd/+IShGK13bkqJT3Kn/u
OXV37qwm2NIb++W/riaqOaluTIKwWl4sZ8JyX+xeR1/CclUZGRk8/sTERK9y
djU1NZScnMxfi+WSGhsbZYxUeWxu3uzZs3n8bL4ejFxndw/d/ule3m5HvJ9B
5Q3K3lPrM76MdbSRzRWK767hiy+kvoHVwAQAAACbqkmTpD6yeYtvnbcDgP8a
+/kBPob649vbKbfKdU3g0gfO5+4jLidrUWDk7nva2qjojjtsdYyv/yt1mc1i
AmE1wb76F9GyW4bOBUvvG++Zc+Tfp9VCZos26mkfOHCA50rY/X1nzrjP0WoZ
q/1uz9+N5jja29ul+wfZXC9f1draSsuXL+fHsXnzZtHh+KTj5U3SdYtHFxlE
hyPegVmONrFQr8oui269lfcNFRNeU2V/AAAAo9Vbkk0teercI9C4Zo2U96qZ
MVOVfQIAeKKwppXC393Bx1D/mOe8LvDA3P0WlSMUh41p7MfdmpkpJgjzCaLs
6URf/HVo3su+ZbxO1CLHPAcrGdMTKSYynMJ10RQbG026qDhKNdkey0nSUXis
OuNKO1YfneVIWE17ix/U02H3bdrzeGfPjmydiVWrVvHfzRT1XZSZvT4/q1EG
I7fSUCblv6ZuC+B1BIr0jrbwgDrn2Jb0TVLf0HbkiCr7BAAAGLFzldS2bAIV
XRpOBe+dUHx37Tk5Uv9Y9uSTiu8PAGCk0o9XSmOotzYOvIeucU1qv9z9DEER
qq9+0WLH+l3z56sfgKWc6Ggy0Zp7XOe8+m/ZiUTdXszTshopJSacgoMjKF7f
b36bOZViohIoPSWaQoOCKSpFvfwTu1dwRt93juVHWO10f2G/f5OtfegpVh+L
/Q6ro+8vWI2ypKQkflxs3U4YOdZe29tu1o4HnJa+Y16qs7WBXz6h2m5LH4qx
ndc/EavaPgEAADzRm5NK1QkTqHzcnVR4czSV3HyZ7R6W95RdI7q377y9+J57
+L7yr4mkzjM4twMAbWLzBuxjKDafgGnPORGQufuz+w9Ix33mpZfUD6D7HNGJ
FUSZk4kOzSU6usC25W+xbUU7iSqP2raGItv4j2093aPbn9VIyVGhFBQURjHp
Q+/rNCVF9j0W1LdFUJKKS/R99dVXfjsvKCUlhR+bJ2setrW18bUiWc38rq4u
FaJTj9Fo5O9Dampgrdsgp3vm7eft9oXv7uDzeAPK9hcd+f+6PFV2ebavPXKs
+avuPFgAAIDh9Fae6OurDlNHST319v277b3rVcl9VU6c6OgfMzIU3RcAgLce
WWSQ8l/flNRR8T3/6Je79906SyPR3dhIhTffwo+78Ja/UXdTk+iQFGYlQ0IE
BQcFUUh0KjmtaKaPpRCW+wqLp8GVhawmA6WnJlNSYiIlpaSSPsdMclQJYzWh
WF0sNi/IHxUXF/Ocz4oVK4Z9rr5vfM2eazD4Z10n+72chYWFokPxSaxOI6vX
yNrtsZ8fFB2Oetj1AHve6/R61XZ75p/jef9QfNfdqu0TAABgtNTIfTWkLJPy
XrWzZyu2HwAAubD1wti6YWwMdcvEtXTywjEBl7s/M/5Fqe0+ezAAxpE5iRTB
53SFU4KLkvnGxAg+7yskRt8vr2Wi1Lgoio5PJn2OicwWMxmzkig6NJhCIuMo
3cv5YadOnRrxfYEiFBQU0OOPP+70sS+//JLnrVyx53yGW6tx1qxZ9PHHH3sV
pxrCwsJc1vBn74Urhw8fRt17L7F1eu3XLdj6vX6v/IAj75X5nmq77cjNlfqH
xlWrVdsvAADAaCmd+2o7dFjqG8vj4hTZBwCAEnZ8Wy2NoZ5+eHJA5e7r5n0m
td31S5aIDkcFFkqPCbHdzxieQM5TX2ZK0QX3PSeYdP1qfbF8WKgukQyDyn9Z
9bEU2vd6wRGJZPQish07dvB8yHD17Wtqaig2NpYuu+wy+vWvf0233347v59Q
DSzvZbsXNIg++uijAY+tX7+e//y73/2uy/yXPedz6NAhl/tg90Sy52zxYI0J
tnYiO372Plx66aX0xBNPUFVV1cgOapTs7wP7HAbnv+69917+mKscIcNye3Ll
90R+J0SavPm01HavPVIuOhzlWJuJVt9ty3utvY+oq0O1XVe9+65t/HDdX4h6
e1XbLwAAwGgpmfvqaW2lotujbK9/w43UVVsr+z4AAJTS1jceT4iOl8ZQS/aX
iA5JFa179kh5r4rXXhcdjjosqRQdbMtZhMW5uJ/Omk4xIbZaX4lSMstMybrz
vxc/6PfMyaTjeZBIr2qDLVq0iBYvXuz2OQcPHqRf/epXdNttt9GNN97I5x2F
hobyfBPLtyiN5XLsOZ/++S973su+jR8/3unvNzU18bzWypUrXe5j165d/Dms
LpY748aNox/84Ad05ZVX0uWXX06//OUv+Xvzox/9SPF1IVmui+WZnOW/7Hkv
tv3kJz9x+Rost+dp/TN3RH8nRHsw+SBvt//w1jY6VdksOhxl7H7LMeerUr01
Frtqahz3c8ydq9p+AQAAvKFk7qsi/lWpb2zdu1f21wcAUEr/3P1Dz82W8l+G
kgbRoSmqs7qaCv5i6xeK7/w79bS3iw5JFVZ7Ha+gEIrRu6jSZYjj87iCwuIG
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
mY05lGM0ktFo4jWmTCb230Z+P5pJ4PC4u+9zXL58Oc+VpKSkUFVVlbhgRonN
1WI5K3YMGRkZo34dVh+MvcZo82dakJ6ezuOfM2cO1dRobN5RgDAU10vXLZ5a
Ovp1n2TT1dfArB1ry3utuquvOWoWFkrjmjXS+X7HqVPC4gAAABDBsnGj1A9W
T/lQdDgAACOiZO7+VKWFLvj/7N15WFRXmj9wZ3rmN8zuzPP0jP/MPOllekjM
QtKdqFnJojHGJCQmEbOJmcSYNnZsNS1kcUmiElciRjGK4A5KFFFkiQKiIC4I
IgrIVrLv+1Kyvb86p6hTgBTrvffU8v08z31ioOre997Sc+9565z3eIbzPtSb
fomK7nu0Sry8xHk3REbKDgdG6fjx4zxn8s0331BcXBzPiVk7NtbLVKtLqbUM
Wb0w07xJlhPMy8tTIFL1Xb58mY8PZHHv3buXmpqsK1fuaPzP5on81/ooyfNo
Y5ebx3wVnJMaSu7Lr/B7RsHHH0uNAwAAQGutGRmUMf5efh/UvfW27HAAAIZF
i9x98KUC0YdaGXZdlWMMV/WeveK8KzahVrG9YGOdNmzYwPMnK1eupGPHjvF1
IFtbW2WHJpSVlfE8z8GDB0XOi63RyOYsKoXV/zLNBTXt/9y5c3wcVWennHXx
+mJzGfPz8/k4ty1btohYT58+LTs06LYoOFW03RHXJNW1uh5izntdGvr6D2po
MPxdNd03GuPjpcYCAACgtfzX3+D3wMwHHyR9bq7scAAAhqx37v4tVY+17Fi6
6EMdvlyo6rEG03zpsui/FMydKzUWUB7L7bBxXxs3bhT5FLatWrWKz6NjNaRk
bCyer7/+uldM7OdpaWmqXQs25ss0H7Tnxuriy7oOP/zwg5jfadpWr17Nx+3V
1SlfDw5Grq2jk57fdIa32y4ro6mgulnbACozzXmv8E+0PXY/bs2Zw+8b+W/O
lB0KAACApkqWLRP9p/rjJ2SHAwAwLPlvdOfuXR4kfY76ufsZ2xJ4H+q3n5+k
GyVy6rV0NjdTzgvT+HnffPwJai9TaMFBsEoFBQV8LcgDBw7Qjz/+yMeEsbyL
jI3N5/P396dDhw5RYmIiX9NRK82Gv/cpKSn0008/8Zpovr6+0q4Dm4+5bds2
Pq/xxIkTdrMupb1KKagV31u8vcPSwq4qOephzHsFPEVUX6Ttsftovpwsnvnr
jh6VGgsAAICWeta6LF+7TnY4AADD0jt3f1yTY2aXN5LzVxG8D/XKFjk1W4oW
LTbPWYmNlRIDAIAt2Zd0S+S/VoVrtI55wnrzmK9s+fUYixcv4feN7Gefkx0K
AACAZlpSU0XfiY1/BgCwJTUHg3rk7tdqeuzQlGLRh/I6ot5cr/5U7dgpzrty
61ZNjy0bG7MAAMrYe17H5wJeLayVHYpmWHttartZO66qnEhz3itB/vfLt/Pz
xb2jaqe/7HAAAAA00dXWRrkvv8zvf1kTJlJbodwx2AAAw9GSelV67p6NGzD1
odh4Ai00nUsQ5134yQJNjmkNmi9cIN2771Gem5vsUADsxiOrTvH2a8nhq7JD
0dTLW87x8777qwg+jlcVDcVEAa7GvNfR2eocY5jKVq8R9QHYvHkAAABHULx0
qeg/sfVeAABshTF3/0qP3L28mvNv7UgS+S9WT0ZNHTU1lP3Ms2K+SketfY/V
aK+qopr9+3nOS9b4PgB75ns6W7RfRbUtssPRDKvTyOo1svOesS1RnYOc/MQ8
5qsyQ51jDENnQwNl3He/sR39Du0oAAA4hurA3aIfUfH997LDAQAYluKlnlaT
u2frhbF1w1gf6nmfeL6emFoK538izrspUaX+mhVor6ig6j17Sff2O+J8TVtt
SIjs8ADsRm1zG/3GK5y3X94R8vMzWmLr9Jryfmz9XkVd3m7Oe10/rOy+R6hq
+3bRjrYVFMgOBwAAQHXNFy6Ke1/BvHmywwEAGBZrzN1HXCsVfahFh1JVOUbl
lh/MdVr87bNOS3tpKf9882e9dUfOy7S1XLkiO0wAu7L8WDpvu8Yvj6TWtg7Z
4WhqRdh10XYHX1IoH1SQYM57xS5XZp8KyHZ9mrehbN4HAACAvetsbKSc56fy
e9/NJ5/i360DANiK5os9cvcfWVfufn1UluhD+Z/LU3TfjTEx4ryLFi9RdN/W
oK24mKp37aL8mTMt5rz4fevRR6mjtk52uAB2hdW7MrVdO+KVbbtswZt+ifzc
f+UZTunF9aPbmd7w/gMvGfNewa8RtbcqE+QosfGy4vuDVHW+nwEAALAmRQv/
LO59jWfOyA4HAGDIbCF3PyfgouhDJuVVK7LPttJSuvnY4/y8c6e9SJ0t9leT
p+HnU1Tp69trK125kjLG38vrmpnuW6zWGQAo75MDV3i79dTaWNmhaC63oonG
L4vk5z9989nR7eyUl3nMV/ElZQJUQN6MGcbvjD74UHYoAAAAqqva/qPoP1T6
+ckOBwBgWGwhd1/eoKcJ3eumua6LpUZ9+6j3yfoqpvNuTk5WIErbkO8+i58z
y3+Zzr9k2TLZYQHYJZarN+Xtj15xvHW/w1KLxfkvDRnhmpdp+815r5RdygY4
Co0xseb6mKdPyw4HAABAVU1nz5rny/zpU9nhAAAMiy3l7mMyy0Ufav7+0eWq
yjdsFOdds2+fQhFav9KvvzbXNvtxB2X94WH+5+rAQNmhAdgt9x/P83brta0J
skORwvtkhmi79yTqhvfmsjRz3itykToBjlDBh3N5+5n36muyQwEAAFAVWyPe
VN8yZ/IU6qgfZS0DAAAN2WLu3jcmW/ShtsbmjGgf9RER5vFOn3+hcITWq/bw
YXHeZavX8J+Zxr41xsdLjg7AfoWnlYh2K/5mpexwpHh35wVxDZJ1NUN7U1cX
UcgsY95rz2SiZuuZj99y9ap5jdxD1rHeJAAAgFoKP/6jeb5MUpLscAAAhsyW
c/cf70sWfagzWcPrC93W6Size6wT/66+s1OlKK1La3o63XC+m5+37t33xM+r
/Hfxn92+dUtidAD2b/LGM7zNmrvnsuxQpCiqbaGHvo7m14BdiyGtexm/2jzm
Ky9G/SCHodjTS9TIBAAAsGcVm31F3qs6IEB2OAAAw2LLufu6ljZ6cm0M70NN
WnOaqhr1Q34vy/vw83a+m+eDHEJnJ8/zsfNmeT+W/zPR37zJ5z0CgLp2J+pE
zv56ie1816CkqOtl4hosDEoZ+MWZYea8V9JmbQIcoraiInOtgG3WXSsAAABg
NBpOnRL3vOLP/iI7HACAYanw7ZG73xUgO5wRScipEn2oD3YPbc2vsjVrHHKO
SskXX4jzrj8Zccfvi/5sXTV0AOwRm773YPe4J68jabLDkWbTz1mi7d4Rn9v/
i2rziHZOMua9wqxv/cTydeuM64Xcex911NXJDgcAAEAVbcXFlDXpUX7Py53+
EnXphz7eAABANnvK3bN+k6kPxfpTA6kLDRXnXbrya40ilI/V8TedN6vv3x82
9gsA1Lcx2pz3YWvXOir2fYXpOiTmVN35grC5xrwXy3/V5Gkf4AA6W1sp86Hf
G+smrlolOxwAAADV3Hr//0Q/oiVlkPHaAABWxB5z92zejKkPFX29rN/X6LOy
KOO++/l557vP0jhCeVqSk8X9itW0BwC5Khr0or3aED1wvt6eVTbq+Xx1dh3Y
/HU2j124sNk81zHzmLwgLajetUu0q7fzrCsvBwAAoJTy9evF/a5m/wHZ4QAA
DIs95u5ZvWRTDemHvonm9ZT7yn9zpnF+ygMupM/OlhCl9jpbWih32ovGWsyP
PUZtpaWyQwIAg8+PXOPtlcvKaOro7JIdjjRsnRJTHpCtX8Llx5rzXvHWOaYq
Z/Jk49rIixbLDgUAAEAV9eHhos9Y8uVXssMBABgWe87dX9bViD7Uu/4Xev2u
dMUKcd51x8IkRai94iVLxHk3nrau9dEAHFlGSb1orwIT8mWHI9XW2BxxLQKi
LxHtnWLMe4W4E3VZ3xq8daHHzGvEXBpanUkAAABbwsY0m+b25814XXY4AADD
4gi5+z091lDzjsjgP6sNDhbnXeb9neQItVPl729eg2zLFtnhAEAfH+29zNuq
5zbEyQ5Fuvn7k/m1iNr4tnnMV9lV2WH1K3+mO29Xb832kB0KAACAKnRvv2Oc
L3PPeGq9cUN2OAAAQ+ZIufulIVdF/uun40ki/3Nr9mzZoWmmKfG8OO/C+fNl
hwMA/TibXSnaquNXS2SHI1Vjazv9uPkrkfdqvLRbdkj9ajp7VrStDZFRssMB
AABQHFvDxXSvqw35SXY4AADDonvHmLu/cfc91HrdvnP3rHLO9M1neX/y7s+O
UvTvn6Cshx+h27cKZIemiY66Osp+7jn+eWc//Qx1VFfLDgkALJixLZG3VTO3
n5cdilzFl0Te6/iG2fR+wEXZEfWr8I/zxToxAAAA9qbuyBGR9yr95lvZ4QAA
DIsj5u7Ti+voV0uP8z7l9P/bTA2RkbJD0kzhgj+Jz7vp3DnZ4QDAAEJTisTY
r/O5VbLDkaNdTxQ8wzjea9dUesDrML8e66Osaw1MNufDXutlAgAAtGZkUMb4
e/l9TvfW27LDAQAYlt65+29kh6OZ6j17yWfKe6JPuTLsuuyQNFG5dZv4vKt2
7JAdDgAMgeu6WN5OsZpXDil2ubnGV8E5WhScKtruiGvWszZtyVdfGdfMffQx
oi7HXZsTAADsU/7rb/D7XOaDD5I+J1d2OAAAQ9aakdkjd/+W7HA003zpssj/
LFroK/pQhy8Xyg5NVY2xceK8ixYtkh0OAAzRzrN5op26Wd4oOxxtXQ8x570u
+fEftXV00vOb4vn1cFkZTQXVzZKDJGovLxfta4Wvr+xwAAAAFFWybJm4z9Uf
PyE7HACAYcl/ozt378Jy9zmyw9FEZ3Mz5bwwzfjd/ONPUHtZGc3YlsD7UL/9
/CTdKKmXHaIqWL/s5hNP8vPOmfoCdTY1yQ4JAIbodnsn3bc8irdTy46lyw5H
O5WZ5rxX+Ce9fpVSUCvygW/tSJIUoFmFj4/oE7RXOejcVAAAsEs1Bw+Ke1z5
2rWywwEAGJaSZct75O6Pyw5HM0WLFovzboyN5T/LLm8k568ieB/qlS32Wf+q
YO5H4rybL12SHQ4ADNN3ERm8jfq1VzjVNN+WHY42jnoY814BTxHVF93x631J
t0T+a1W4vDVautrbKWvCBGPtgBUrpcUBAACgtJbUq6IPcWvOHNnhAAAMS83B
IIfM3Vft2CnOu3Lr1l6/C00pFn0oryNpkiJUR8Um83iE6j17ZIcDACNQXNsi
2qjvT92UHY76Etabx3xlW16LhLXXpuvC2nEZWP1IUxurz7Ku+vsAAAAj1dXW
Rrkvv8zvb1kTJlJboX3XhwEA++KoufumhARx3oWfLOj3NWzcgKkPxcYT2IOG
qChx3sWeXrLDAYBR+OzwVd4+Pfztz7JDUVdOpDnvlbBu0Je/vOUcvy53fxXB
x/FqLbd7Hj1bQxcAAMBeFC/1FP2Ihuho2eEAAAyZMXf/isPl7jtqaij7mWf5
eWc/+xx11NZafC2rG2PKf7F6MrbsdkEBZT1inIeT94obn5cDALYrrahOtE/7
7SQ/f4eGYqIAV2Pe6+jsIb2F1Wlk9RrZdZmxLVHd+PqoDw8X/YKmxPOaHhsA
AEAt1YG7zWu4fP+97HAAAIbFUXP3hfM/6dE3GbhfxNYLY+uGsT7U8z7xfD0x
W3Vrtoc475Y0+5rHCeCo3g+8yNunFwztk106+Yl5zFdlxpDfxtbpNeUFtVwP
QPfOu8a1kt9+W7NjAgAAqKn5wkXRhyiYN092OAAAw+KoufvKLT+I867y9x/S
eyKulYo+1KJDqSpHqI4y7+/EedcGB8sOBwAUEpNZLtqnyPRS2eEo6/J2c97r
+uFhv31F2HVxbYIvFagQYG/NSUnmNWNOYL13AACwfZ2NjZTz/FR+b7v55FPU
XlEhOyQAgCFrvtgjd/+R4+TuG2NixHkXLV4yrPeuj8oSfSj/c3kqRaiOurAw
cd6ly1fIDgcAFPZKd32rd3YmyQ5FOQUJ5rxX7PIR7+ZNv0R+bX7lGU7pxfXK
xdePok8/5e1sztQXVD0OAACAVooW/ln0IxrPnJEdDgDAkDlq7r6ttJRuPvY4
P+/caS9SZ0vLsPcxJ+CiyH8l5VWrEKXy9NnZlPmACz/v/Ddnyg4HAFTQc37f
ZV2N7HBGT19PdOAlY94r+DWi9tYR7yq3oonGL4vk12b65rMKBtmb/ma2ef3c
3btVOw4AAIBWqrb/KO5tlX5+ssMBABgWR83dF3zwoTjv5uTkEe2jvEFPE1ad
4n0o13Wx1Ki3/lrx+e6z+Dln3Hc/6bOyZIcDACp5zPs0b5s+DUqRHcronfIy
j/kqvjTq3YWlFovc4NKQqwoEeKfSlV8b1415+BG+jgwAAIAtazp71jxf5k+f
yg4HAGBYHDV3X75hozjvmr37RrWvnrV15u+/olCE6jD1xdhWdzRUdjgAoKJt
cTmibcqvapIdzsil7TfnvVJ2KbZb75MZ4vrsSdQptl+mo7qabjjfbayfuXGT
ovsGAADQWntVFWW7Pm2cxz95CnXUq1szAABASY6au6+PiBDnXfL5F4rs0zcm
W/ShtsbmKLJPpdUePizOu2z1GtnhAIDKmvTt5PxlBG+XvjlxXXY4I1OWZs57
RS5SfPfv+l8QbXeygnNDe66hwubXAwAA2LLCj/9oni+TZEe1RAHA7jlq7v62
TkeZf3iYn3feq68RdXYqtu+P9yWLPtSZLOuqmdaani7GIOjefU92OACgkW9P
3OBt0v9+GUGNrdY/J7uXri6ikFnGvNeeyUTNyrerRbUt9NA30fwaTd54hlrb
OhTZr6mWZMkXXyqyPwAAAFkqNvua61cGBMgOBwBgWHrm7pscKHfP8j78vJ3v
5vkgJdW1tNGTa2N4H2rSmtNU1Xhb0f2PWGcnz/Ox82Z5P5b/AwDHoKtqtvox
qRbFrzaP+cqLUe0w0dfLxDVaqEBttJqDB8X9tTXdRsfbAQAAGDScOiXuacWf
/UV2OAAAw1Lh2yN3vytAdjiaKVuzRpx37aHDqhwjIadK9KE+2D36esxKKPni
C3He9ScjZIcDABr7c3AKb5MeXXNadihDlxlmznslbVb9cJt+zhJt94743FHt
K/flV3h7W/DxxwpFBwAAoL224mLKmvQov6flTn+JuvR62SEBAAyZo+bu60JD
xXmzeu9qYv0mUx+K9adkqtm3T5w3q+8PAI4n+VaNaJMOXSqQHc7gavOIdk4y
5r3CPtTssOz7CtN1Yt9jjERDdLR53eT4eIUjBAAA0M6t9/9P3NNaUuxgzWgA
cBiOmrvXZ2VRxn338/POd5+lyTHZvBlTH4rNp5GhJTlZ3K8KPtCu/wgA1sdU
0/0l33OyQxlc2Fxj3ovlv2ryNDtsZaOez1dn14nNX2fz2Ifr1pw5xnvNmzNV
iBAAAEAb5evXi35Ezf4DssMBABiW4r8sdcjcPeuDsHPOeOAB0mdna3JMVi+Z
1U1mfShWR5nVU9ZSZ0sL5U57kZ/3zccewzpjAA4uqkdNq9MZ5bLDsezCZvNc
x8xjmh+erVNiuk5s/ZLhaL5s/r6h7uhRlSIEAABQV314uLiflXz5lexwADSj
1+upqqqKdDodXb9+ndLT06VseXl5VF5eTs3NzbIviU2rDgx0qNx96YoV5r7I
sTBNj31ZZ55nxMZcaKl4yRLzvJvT6tWIBgDbMe37eN4ezQm4KDuU/uXHmvNe
8aukhcHWBDC13Vtihv59SfFiY7ub/exzKkYHAACgntuGPnfmQ7/n97O8Ga/L
DgcUpaey1DiKDAokP29P8vT2Ib/AUIrLrJMdmFR1dXV04cIF2rt3L61YscLq
th07dtCZM2eopKRE9qUCK1YbHCzyP2Xe30mJYU+iTvShvCMyNDlmlb+/OO/K
LVs0OSYAWL8DF26J9uhqYa3scHprriTaO8WY9wqZRdTVKTWc+fuTxbWKyRx8
nNzt/HzR7lbt9NcgQgAAAOXp3n7HeD+7Zzy13rghOxxQQlkSBXm6k+td4+gu
Vw/y9AmkoMhIigwNIp+FbuQy1onGuriTT5ycOj2ytLW10enTp2nlypUiz7Rz
5046fvw4xcbG0uXLlyklJUXz7dixYxQfH08nT56kffv29cqDhYaGUnV1texL
B1amNe2a6Ifcmj1baixLQ66KPtTxq8WqHqsp8bw478L581U9FgDYnkdWneJt
0ZLDV2WH0lvUYvOYrzL5sTW2tpPrulh+rSYYrll5w8D1MctWG9cRznR5kDox
Ph0AAGxQ2apVoh9RG/KT7HBg1Oooyc+DXMaOoXGunhRqaXxXXRJ5u46lMWPG
kqt3EjnCKLAbN27Q2rVreT7Jx8eHQkJC+Pgva8TmYaalpfG8nCkHlpiYKDss
sBJdHR2U5+bG2+2shx+h27fkrmvWZdimbz7L+1Djl0VSbmWTKsfpMPx7zX7u
OeOcm6efoQ7khAGgD9/T2SIXr3UdQotSAsx5r7T9sqMRknKrxbV6f4B5op0N
DWI9lfLv1moYIQAAgDLqjhwRea/Sb76VHQ6MlshnjSNX7zgadESXPo4WOo/h
+a+pgTotIpQmISFB5JDOnj0rO5xhYePCNmzYwGMPDw+XHQ5YgRIvL9F2N0RG
yg6HSy+uo195hvM+1Jt+6uRpCxcsEOfddM4G1nIDAM3VNrfRb7zCNZ2HPaDi
S+a81ylP2dHcwf9snsh/rY/K6vc1Vdu3i7a3raBQ4wgBAABGpzUjgzLG38vv
Y7q33pYdDoyWLpQ8nJ2M47h8MmngketmdUFuNHbMGBrjNJUC7XT6I6ubxfJG
GzdupPz8fNnhjEhtbS3t2rWLn8eRI0dkhwMSVe/ZK/ogFZs2yQ6nl+BLBaIP
tTLsuqL7rty6zVxrZscORfcNAPZl+bF04zjU5ZGkb+uQF0i74WkseIYx77V/
OpG+Xl4sA1h0KFW03RHX7lwzN9v1ad72Fi9dKiE6AACA0cl/4w0xb1+fkys7
HBiNslByv4uN33Ii54Vxw5u/qDe8dyx77xhy9kxVK0Jp2LxBli/y9fW12vmN
w3HgwAF+Pqw2GTie5kuXRf6nYO5c2eH0a1l3n5Nthy8rMz6gMTZOnHfRokWK
7BMA7Fd2eaNoh3bE58kLJHa5ecxXgfWOVW3r6KTnfYxrZLqsjKaCanM9r9qQ
ENH+tqTa33MiAADYt5Jly8R9rP74CdnhwKhkks9EJ567cnLxNvzfcJWR30Rj
7mvMiN5vvVh9eFbTnm2FhfYxRr+lpYW2bNnC818ZGVYwlwM0w2oL57wwjbfb
Nx9/gtrLrHeg5oxtCbwP9dvPT9KNktGNc2gvL6ebTzzJzztn6gvU2aROLTEA
sC+fHLjC26Gn1sbKCeB6iDnvdclPTgzDkFJQK/KFb+1IEj/PmzHD+H3LBx9K
jA4AAGD4ag4eFHmv8rWoV2nrUj1dyInlrcbcRQuThjrTsSc9BbkZc2ds3mOQ
7Q+NEtj6iCxHdOKEfeV3U1NT+XntwLwvh1K0aLFouxutfNwfG3Ph/FUE70O9
smV0Yx0K5n4kzrv50iWFIgQAe5eUZ67jfvRKkbYHr8w0573CP9H22KOwL+mW
uGarwm9QY0ysubbk6dOywwMAABiyltSr4h52a84c2eHAaOl8aKKTccyW09TA
wWvb90tPoabc15iJ5GMnJe+Liop4fsjf3192KKoICwvj53flyhXZoYAGqnbs
FG135datssMZktCUYtGH8jqSNqJ9VGzyEeddvWePwhECgL1z//E8b4Ne25qg
7YGPehjzXgFPEdVrnHcbJdZem9ruSzNn8/Y379XXZIcFAAAwZF1tbZT78sv8
HpY1YSK12ckcMMelp0iPcd05q3HkETmSMV9MGfm5ds95HONC3nYy6ZGN9WK5
oays/tcsYr777jsNI1JWTU2Nork9e5kTao+aEhJE/qfwkwWywxkWNm7A1Idi
4wmGoyEySpx3saeXShECgD0LTysRbVD8zUptDpqw3jzmK9s61uEdLjZed8rc
raINrj10WHZIAAAAQ1a81NM8bjk6WnY4MFp1QTS1e8zXmHHzKG6kqS9KooV3
mXJfrpqu9Xj8+HHy8vKiadOm8f+ysUxKYWs6rlu3zuLvjec7pt/816uvvkp/
8zd/Q5GR2j2zsjUcFyxYQG+88QatWrWKrl8ffI28PXv28PxXff3I6yndvHmT
X4cHHnjgjvzX4cOH+e/ee++9Ee9/uFgNs9WrV/PrwK4Huy6OrKOmhrKfeZa3
29nPPkcdtbWyQxo2VjfG1Pdk9WSG4nZBAWU9MsE43uAVN+pqb1c5SgCwV5M3
nuHtz9w9l9U/WE6kOe+VYPkZxNqxOo2+U97lbXDS7yfJDgcAAGDIqgN3i7xX
xfffyw4HFFAXNLW7ztcYGusRSSNOfZX5keuYHjk0JYMcAMtrsGO6urrSr371
K/r1r3/N//+DDz4Y9b4LDP1mlhM6duxYv79n+S5T7qtv/ovlvUw//7d/+7dR
xzKY8vJynvv7z//8T5owYQK5uLiIa7F+/foB35uUlMTP89IoaiCNHTtWnG/P
/Jcp72XaEhLUny/yvaFt+sUvfsGvw8SJE+l///d/6V//9V/p2WefddhxaYXz
PxFtd1NiouxwRoStF/bAymje95zqE8/XExvMrdke5nXF0kY2XxIAgNmdqBP5
99GuvTGghmKiAFdj3uvobPWOo4G2oiLRBi999c98/V4AAABr13zhorh/Fcyb
JzscUISeIt1NOQsnmjqKAvX6UHca253fcHILogH3pNdRpF8QZY440Wbk4+ND
48aNo3feeadXfoVtbLzVkiVLRrV/VgOL5YRSUlIsvqa//FfPvNc///M/U3x8
/KjiGIq3336b5//++7//+45rwbaff/7Z4ntLS0v5eZ48eXLEx2c5JZbz6pn/
8vPz6xXDRx99NOL9DxXLrbFjvfjii3dcg3/8x3+k559/XvUYrE3llh9E211l
43XrIq6Vir7nokOpA762zPs78zyb4GCNIgQAe9XZ1UUPfh09qtqDQ3LyE/OY
r0rbXoe5fN063gan33MvjV90mF+74EsFssMCAACwqLOxkXKen8rvXzeffIra
KypkhwSKyCRvFyVqdLGaYQPn0PT6OirLTKJQv4Xk5uzE50X6jXJe5H/8x3/Q
H//4x35zPWz767/+a2ofxRynM2fO8JxQTk7OgK/rm//SOu919epVfrzf/e53
Fq/Fgw8+aPH9TU1N/DyDR5kf6Jv/0jrvxbz++uv0m9/8xuJ1YOPB4uK0GpUo
X2NMjMj/FC0eXS7YWqyPyhL5L/9zef2+pi4sTJx36fIVGkcIAPZqY7S5/Slv
GOUXeP25vN2c97pu27WxOltbKfOh3/N2uGzVKnrTL5Fft195hlN6sR0tBg4A
AHalaOGfRT+i8cwZ2eGAYpJonqlGl5MbhY70MU4fSe5jB6gZpo8j76lTyc1j
IfkEBdFClzGjzn3l5eXx4z3yyCMW8xxs+/3vf08vv/zyiDY2Z47Nl2NjhQZ7
7T333HNH3u2xxx4b8bGHs7G81t///d8PeB1YPAPtw9nZmc+THG0skydPpn/4
h3/odez/+q//0uQ6sI2N7fqnf/qnAa/FZ599NvK/eDakrbSUbj72OG+3c6e9
SJ0tLbJDUsycgIui/5mUV93rd/rsbMp4wIWfd/6bMyVFCAD2qKJBL9qeDdGW
18AZkYIEc94rdrmy+5agetcu0Xe4bXhmy61oovHLIvm1m775LHXJDhAAAKCP
qu0/intXpZ+f7HBAUUk0b5w5Z5U0wr2UBZpqhjmRi89gg8fKyG+icrkvS3P8
sGGztM2ePXvkf/FsSMEHH4q2uzk5WXY4imLjLSasOsX7UK7rYqlRbx7fme8+
i59zxn33k36A9VkBAEbi8yPXeNvjsjKaOjoVyuDo64kOvGTMewW/RtTeqsx+
JcqZPNk45njRYvGzsKvFIne4NOSqxOgAAAB6azp71jxf5k+fyg4HFNdjzuNd
C0eY+0qlhc7d+3D2pKRBx44pk/tifvnLX94x3qrvNn36dF4PbCTblClT6P77
7+fjiQZ6HRvXZDoem1PX8/gPPfTQiI8/1K2/2lZ9NzYWy9L7Z86cyc/ziSee
GFUcTz75ZK9j/t3f/Z34M6v3/9prr6l+LVgu9G//9m8HvBa7d+8e3V88G1C+
caNou2v27pMdjipiMstFH2r+/iv8Z6UrvxbnXRcaKjlCALBHGSX1ou0JTMhX
ZqenvMxjvopHvu6MtagLPWb+7qXPOjreERni+u1J1EmKEAAAwKy9qoqyXZ/m
962cyVOoo17FNW1AEj2Fmmrdj3WnyBHMecz0mWgc8+XkTAsHT3yRkrmvjYb+
/b//+79bzHGwnNRo6n2lpqbyOlis5r0lbm5u4nisvherETbQ+o9qefPNN+lf
/uVfLF6Lr7/+2uJ7r127xs8zMjJyxMfvu54jq+/VX/37oqKiER9jKM6ePTtg
3ovl4Ebzd8IW1EdEiD5HyedfyA5HVb4x2aIPtdH3qDjvstVrZIcGAHbso72X
ebvz3AYF6kem7TfnvVJ2jX5/ViB/pjtvi9lau/151/+CaLuTdTUaRwcAANBb
4cd/NH9nkzTS2XBg7eqCTPMV+6l1r8+kUO955O7mRh6e/azLmOlDE53Ye8fR
1MChfnenXO6LmTt3br85jn/913+l7OzsUe27rKyM54RYXseSvnkvk575r8cf
f3xUcQxFcXExr33G1rfsey2effbZAd/L6vGz82Q180eqb97LpG/+i63DqLa1
a9daHPsWGxur+vFluq3TUeYfHubtdt6rrxF1dsoOSXUf70sWfai9T7xCunff
kx0SANi5s9mVot05cbVk5DsqSzPnvSIXKRegRD3njDRERvX7mqLaFnroG+Oa
mZM3nqHWtg6NowQAADCq2Owr7lvVAQGywzFoJCqPI8r6ybAZ7qMlOiLcJpWh
jxP17l16Jr/q4mjhVDfyjtRRHempLM6TpnoEkUhXlYWSB3/fWHL1TqKhDxlT
NvfFBAUF8fX92Hy3++67j+fDWluVqZWxZcsWWrVqlcXfs7FSf/VXf9Ur72XC
8l8s71VXp916Rizv8+ijj/Ixb2wO41Dm9/n7+/Pc12ivWd+8l4kp/7V169ZR
7X84Ll++TO+99x799re/5XX83d3dFfs7Yc1Y3oe33c53U2t6uuxwNFHXpKdJ
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
9qy5zxEZJSUGLbE6jaxeI7vmrH4jAADIUx24W9yDKr7/XnY4ykAtLwCwc4Xz
PxFtd1Pine3a/P3Joo8Tm1kuIUJ1sHECpvNuSXOs+X9svbAHVkbxz5StI8bW
EwMAG5Kw3vxMmh0pJYQZ2xJ5GzJz+3kpxy/843zefue+9JKU48vA1uk13Y/Z
+r0AAKC95osXRR+i4KN5ssMZPdTyAgAHULnlB9F2V/n79/uahtZ2cl0Xy5+1
J6w+ZTXr2o9Gmfd34rxrg4NlhyNFxLVS0YdadChVdjgAMFQ5keZn04R10sLo
WT/wfK62a6K03rgh2vCaAwc0PbZsK8Oui+sefKlAdjgAAA6ls7GRcp6fyu8/
N598itorKmSHNDKo5QUADqQxJkb0HYoWLxnwtaxfY3rWfj/wokYRqqMuLEyc
d+nyFbLDkWp9VJb4XP3P5ckOBwAG01BMFODaXXdjtuxoxPcibHywlkq++srY
73j0MU2Pay3e9DOOufuVZzilF9fJDgcAwGEULfyz6Ec0njkjO5zhQy0vAHAw
baWldPOxx43zRaa9SJ0tLYO+x/9snsiTbIjO0iBK5emzsynjARd+3vlvzpQd
jlWYE3BRfK5JedWywwGAgZz8xPycWpkhOxra2eO+cFOj+uvt5eXmGiu+vpoc
09rkVjbR+GWR/LpP33yWumQHBADgAKq2/yjuP5V+2qytrJiBankVopYXANiv
gg8+NK8Lnzz07+sXBaeKfk5keqmKEaoj330WP+eM++4nfZZt5u+UxuawTlh1
in+mbAxHo95xav4D2JTL283PqtcPy46Gu93eSfcuj9S0/lSFj4+4f7VXaTvX
0pocv1os7sdLQ67KDgcAwK71XF+l6E+fyg5n6FDLCwAcWPnGjeY6KXv3Deu9
tzs66flNZ/iztsvKaCqoaVYpSuWVrvxanHddaKjscKxKTGa56EPN339FdjgA
0FdBgvmZNXa57Gh6+S4ig7cdv/YKp5rm26oei63Ha1qft3TFSlWPZQu8u689
2/Yk6mSHAwBgl9j3LNmuT/N7T87kKdRRXy87pIHxWl7BqOUFAA6tPiJC5H9K
Pv9iRPtIKagVz9pv70hSOEJ11B4+LM67bPUa2eFYJd+YbPG5bo3N6fc1pXWt
GkcFAKQ3PGMfeMn43Br8muEh3Lr+HRbXtoi2Y/Ppm6oeq3rPXtGWY+yu0bv+
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
NurFelNPro2h+pa2Ue+zYpOP6BtV79mjQJRgTcpCPch5rAt5BMZRalIgebiM
o4neqZrGYO3tpaO1V1evXqUtW7aI8zx06BClpKTwa9DR0d/Dk7bY3wn2d4ON
w+uZKz1w4AAVFjr2uqjTvo/n7f+cgKHlZosXLzGu2fvscypHBo7G2tsRkAvt
uH2oC3QjVx+NaqU7XC0vCxqPG87Zy0Ley6Ajmeh4P2O87sDqfU0i2jmLSLnh
EnasjpL8PMhl7Bga5+pJoZbGd9UlkbfrWBozZiy5eieRA2Rief/I1IazflJJ
CWo+DIbNcTp58qS4bqdPj6xeLxDFZVWI7/4/3pc8qn01REaJvFexl5dCEYLV
SPUmF6cxdNfCJMP/lFGo+zhDWz2Gxjh7klbZL1tsL+25vYqOjhbnFRUVRc3N
zbJDGhTrJx08eJDHvHLlSkpLS5MdkjQHLtwS7f/VwoGfuG7n55vXLtnpr1GE
4AhssR0BudCO2yI9RXpMJE+1HxgdtZZXf9h6jSEeRDnJxuvSdysx/D5lgeHa
9FPbq68bhtdtn2J5bUgwE/msceTqHUeDjujSx9FC5zE8/zU10L7X0WR9INZu
r1q1im7csM+aImq6fv06bd26lV/Dn376SXY4NmtrbI7o/2yJGdl899sFBZT1
yATeL8p7xY262tsVjhLkqqMgN+P3Eh6RekM7HUruTmN47musW5Am31PYentp
b+1VUFAQP5cff/yRbt68KTucYWN9JdZnYudw5swZ2eFI88iqU7ztX3J44HUs
y1av4e07W2+rE7kJUIittyMgF9pxW5JECyd6UKRaw/MduZZXfzquER2ddGcO
sL8tcZD5w4WriQJmDbA2JAi6UPJwdjKO4/LJHPL83rogNxrLxhM4TaVAO53+
eOHCBTEPprS0VHY4Nqu1tVV89xMRESE7HJs1f3+yyH/FZg6t9ktPt2Z7iDEB
Lfj+zf7UBZEby3U5uVIgT3TpSRfpQ57eQZSqQeLLXtpLe2mv2LoC7BwOHz5s
0/OR2NiBzZs383Nh86scke/pbNH2F9W29PuazoYGyrjvft6+l3+3VuMIYdjq
QmmeizM5O49gc/GgUI0mXdhLOwJyoR23Ed21vpRtXrq6a3m96bi1vCxJmTW0
vNf2SUQ5A6z7yPJewYv7r5EPvZWFkvtdbFyAEzkvjBve33U2pmCscUyBs+qD
I7XHvtsy1e6sqsKkWSX4+/vza8rqpMLwNbS2k+u6WN7/mbD6FJU3DP2LmTLv
70TeqzY4WMUoQZo4Dxqn8fxGE3tsL225vYqPj+ex77GTen5s3uy3337Lz4nV
knM0tc1t9BuvcN72e0dk9Puaqu3bRRvfVoDaOtauLnAqOY0xPkM7jXMht4U+
FBgaR0mpqZRp+Duu67VlUug85+7XO5GLZ5ImdajtrR0BuRy9HbcFqtX6urTN
cWt5qY3lvVgtsF5pryyiFAebOzokmeQz0cl433XxNvzfcJWR30TjfXvMiN5v
3djYBdY+s7qNoIzq6mpat24dH/tcX18vOxybdD63Snz//37g0Gof1x0LE32i
0uUrVI4QZMn0djG2526h2q7PQ/bZXtpqe1VRUcE/i++//57XMbMXbD4qOy+W
k3REy4+l83b/3uWRpG/vvOP32a5PG+s4Ll0qIToYHjY/3TjfYuLCUNIN0mDr
gtyM32sYtrs8IgevS6IAe21HQC5Hb8etm4q1vpoqHLOWl9ryVxPFRt253mPj
AaKzuNZ9pXq6dH+HdBctTBpJT0nffe82znsMsqMhi2yte9Y2s9rHoKxLly7x
axseHi47FJvlfzZP5L82RA88/1ufnU0ZD7jwPlH+mzM1ihC0p6fQ7vbYxVvb
byLsub20xfbqyJEjPGZ7rCt89OhRfm6pqfY31nww2eWNot3fEZ/X63e1ISHm
+ewOeG1sjj6U3MYObfxWXdw8cu6u2zhuaiBpNVrGntsRkMuR23G59FRXN1CL
Y6nWl+F98pfnhr7yVxDtnEJ0fG6fzYPogCvRNdT96kXnQxO776VOhnvpyL5D
Mve1xoyZSFoth6qFDRs20DfffIPvulTi5+fH73tsXAWMzKLgVNEPiky3XFsp
330W7w+xOjD6rEHqJIINSyXP7vVH3FUrUto/e28vTe2VLczlLC4u5rGy9eXt
EfsM2Plt2bJFdihSfHLgCm/zn1ob2+vneTNm8Ha+4IMP5QQGw6KPdKdxLp6U
OkhTrU/1pondtUWcJnrTiL6mHgHTmC97bUdALkdvx7Wnp8xAD5rq6kbubi40
ztmN/PprfPqr9VUWZKyN5GTo59vbBC9bxsZ17RyoPpgrka2UPqi4QZR1nKhT
zXqSbExj97r3Y8YZ1wMbkTLyc+2e8zjGhTQeasDrEbPayuy/SsrLyxvwe35W
12bs2LG8bmNfrBboe++9p2g8Q1FZWSnluzn22X/33Xf9/u6NN96gyMjIfn93
+fJlfo3Pnz+veEzsOrDnNnt3u6OTnt90hveDXFZGU0HNnWt6la78WowFqAsN
lRAlqKoslOa5TqSJEw2by13GtUfGOBmea1yMPzNsrt7q1qpiNe2HMy5KVlvF
1mx85513+v3dsmXL+NxGS9Rqr9Roq2JjY3ms6enpFl/D2u3+xuhlZmbydpvl
z7Q03Hu5aTyK1nFag6S8avGdx9ErRfxnjTGxop1vOH1acoQ2prWW6Opeww21
QcOD6inOw5ncBpssoQskt3Hdz9jOHhSp4dwK03jXgdoRxhbbc7WwvgPbtGar
7bkjt+NaKwtyJ9d5kd05rTjyGMtqHfncUauI1SDsW+urZ11CrecUgAOJX010
0E29HFhdEE3tHvM1Ztw8ihvx90hJtPAuU+7LVbO1HjMyMmjatGndxzVuU6dO
HfQePVQsXzNQ3RrTMR944IFe+S+W9zL9Tqv814kTJ+h3v/udOK6TkxPNnz9f
8Xxgf3pe/775r1dffZX//G/+5m8oISHhjvc2NDTwa7x7925FYmlvb6cFCxbQ
3//934uY/ud//oevT2TPUgpqRT/o7R29cxy1hr+Ppv4QW/ce7FEd6TJT+byB
1EB3Yz2YsW4UmNr9M8OmU7m/ZOojDVbnS2ZbxeZXmI7bt7/E+kmm31nqLynZ
XvXXVv32t79VrK368ccfeay3b/e/1o/pmH/913/dq7/E+kksDva7Bx98UJFY
BjPSe/m1a9f4OcbFxWkSp7Vx//E8b/Nf22q8txZ8OJe383mvviY5MhuVE0UU
4Ep0ebtGOTDDs7NLf/OKeqiLpHnO3fMqxhnadI3nVYSEhAzYjthye640Hx8f
+o//+A9x3F/+8pe0ceNGTY5ty+25o7fjmqkLJfeJC81jRk05ACd36v2NuIVa
X/pM8nMda7fr2oGV6DDca0K617xUIQdWF2TO4Y71iBx5TeQyP3Id0yOHpliE
lrG29Re/+AXNmDGDHn74YdG+/r//9//4f5VYN/eHH36gNWv6zxWwXBfLefXN
f/XMe7Ft3rx5o45jMGzdHXasF154gf7lX/5FHPvf/u3faPz48aofn+W7+st/
mfJebPvnf/7nfnNfzK5du/h9T4k1s9n4lj/84Q987e+ez2Lsv6wvaM/2JelE
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
+voBf3fVsXTR/7XpVI6KUYJ2Op5bhsmt9dWVu+RLd8lXbF45O4eNGzdSeXm5
7HDsduXKFb6Wmrv0q9qD5X7zO4/yNWusfmZzYo7I8Rll1tfnAxlMNUb43PQh
XuQzM5byDAbev95tKy2lvFQdRYeH0Ex/n87PD7H6DK4ld8kjIBfyuBPKCyW/
wAhtx6EUpxAd/7B7Hxjbjs/v+J37zBsAV2WgcL8hvDa9eEdlzCNdaCD5eHmR
f3jf47UNySHk789qifX+nVE3k3yDXGPOr3kdXradPn1adjguh9WM+Pzzz12u
Zo4zyp/xpmj/NFy4MOjvT99+QbSNkrIwL8bllOooPCSUws21GDrr3HsHRDvN
GtSuni/dLV8dPXqUn0tISAjFx8fLDmfQdDodj5+tNXDt2jXZ4UhTHhoqcn9r
pfXc3dzaTvcujOX5/ZMD1zWOEGwqDSc/r85+rEFvXlLmO/bk6nkE5EIed06G
cP+O9r2kWkRsrBcb87Xlse59YKgJBlIZKcLfS9yDvby9O8drszUigim1j45i
Y2oo+bG1JLyH0tChXTdv8vY27XO0lovWOIjVfTHPf2HjAdj7C+hbTk6OqAHE
Nrb+M9iv/CtL26dqxw679lFRZ6RHlsXzttETX5ygmsYWhaME9egpxLezPdQ5
5rY03K8jJw+jmTrnmj3uivnSnfPVhQsXxHnt3LmT8vKc/97Lrv/XX3/NY16z
Zg0VFhbKDkmaO62tlD5yFM/9JYs+7fOzy2NMa/veNf8w3W5o1ihC8ASumEdA
LuRxZ2ak2KCB1S5SVWujqfYXqwHWtQ/MI2uC1RGV6YjS93ZscUTFHTlW4+VY
gCg12Kf3eyhvPwrtq+OLdDRzaH/vsrwpMNa52mv9aWhoEOvesO2LL76g/fv3
85+xZ4CqqipqamryyI2N12f3tLS0NH49zPc689pvpaWus8aBM2Jr2Zv7vYrm
z3doX7r0cjH2662dqAvjMowRFODVOWcmOLnjqYX1hXnR0MBop1yH2pnzpSfm
K1arOjIyUpwna4ewc2fXgF0Ldk1k/Xuwv4Vbt25RTEwM7du3j5YvXy7iPHbs
GP+MJ6va8a3I/8b09D4/W1TdKPL71/EZGkUInsKZ8wg2uRvyuKtJpjl+GtX6
GihPrglWHE4U+SLR8aVElzv+d8Jsom0d57/tZaJraKtpyhBLM30tY7+8fYMo
vM9+L/dXUVFBhw8fptDQUJHXsXXf2Lj4vXv38vEf4Jjm/Hzxzj/n+QA+BsBR
6xOyRPto7QmsMe0aSik6cBgN8w8lnT6VooP9aJif9TnlzsQV8qUn5ausrCze
v2del8AZt9WrV/P2E2ohm2RNeIbn/4LZbw/o8+9FXeG5fcSSYypHBp7KFfII
Nrkb8riz01N0dP9rbkjhaTXBCpYSfd+x9Rzi1phEFPlI57nHSQnNcxmpVK8n
falT/hciFXvPde7cOTp+/HhHDonma/Z64sbajXFxcZSUlESZmehLUdKt14LE
O//Gq1cV2y9bC8zc/5WgL1Nsv6AmA+mjwygkOITColOdcrxXX5wlXyJfmbBz
Z9eAXQt2TWT9e7C/BVZDiP1tsHElYFFz+LDI//VJZwf0nauFBpHbdyW7+bty
kM5Z8gg2uRvyOOw+p/D9htcE+8q9a4K1sf6tGXy6o1WVazrP248ovUrT0ADA
/ZXVGim7fOBrJ6qtNGS5aPdUR0Yquu/aplbyW5HA20ejlh7n5w4A4JIKz8mO
QBV5U6fx/J/3yiuD+t7r4ed5bp8QekqlyAAAADraTjVN9LttpntOakG18gdw
55pgue8S7Z5BdC3JRm2vYqL9nef7fbjW0QGAG2Njn1gf0EthSbJD4QwHDop+
r5JFi1Q5xtnsSjE+gLWVQH1tNbVUuWWr7DAA3MelLabnwpRNsiNRVENysrgH
1Bw6NKjvnui4n5lze+z1EpUi9CzNt26RYd8+2WEAADiVvMoGun9RnHjf0tp+
R72DuVtNsHMvdp7HI0Q3bYzrSvAzfWbz7I4bkbbhAYD7iryQL9oKiw7KXR/e
mJlJaQ/48jZP7uQpqh5rS2KOOO+VR/uuowz2Y31eFWvWUPrwEZT3f/8nOxwA
9xH/keUZuCBZdjSKKXznHX4PyPKfYNf3n1t7muf1qZvd55rIwPq8ioLnU9ov
fknloaGywwEAcDpHrhaLtsS871LVP6C71ARLn22Z05hlY+Jj4q86PzOjd00w
AAAHLDxwXeTuqIsF0uLIDXyZt3nS7ru/33W9lDA3MlWcdwzGCCiqPjmZShZ9
SumPPCrGcJR/vUZ2WADuo6WeaE/nXIg9zxM1O8+8dXsZMzJFvqjavt2ufbB7
mDmvX8xDvelBaW+nmiNHRP+jeavTOdWqaAAATmNFrF7cc7adztXmoC5fE6yu
o9G3t2Oz1dbr+P2Rznr32xbZmBcJAGC/325I4nn77g8P083iGs2PX/LpYvGc
bYiO1uSYzW3t9OuvTvLz9v30KOXfbtDkuO6s/kwSlXyykNJHje7WdrJn/hIA
9ION9zI/88YvkB2Nw8z3gfQRI+lOS4vd+xkTEs/z+pyIywpG577YOsosPxf8
cXavvJ1273183WUAALAuaOt50f91LkfD2uy2aoLtcfGaYG06om2d55LgHDV5
AMC9ZJbV0T0fx/C8zeaMaKk6Kko8Z5cuXabpsS/nV4v71SubMEfGXvWJiVT8
0ce8zdqz7WTemm7elB0mgPtJ2Wx53r0WITsau7VVVdFNn3tMY0RXfeXQvjbo
skRez610/fFwarnT3MxrbBb8YZbNvJ393HOywwQAcGqlNU004vNj/J4z9ksd
1RtbtQ/CnWqC3ZzROeZrtu21IAEAHHTgcpFoL8zfd1WTYzZdvy7aO3nTXtXk
mD3tTM4T5730MPpnBqPu5Ekq/vBD0j/0sM22E9syx46jO0asqQmgiph3LM+6
5XLrNtqrYu06kS9aShybg87aHT4fmd7lfHbohkIRuo/2xkYy7N9P+TPf6jNv
s61wzhzZ4QIAOL34NMtaK7N3X5IXiKvXBGuM6xzz9SxRga0xdHUdv+v43LU1
ROfCidJ1Hd9DQXwAGDzW92PO3axPSFXt7ZTzwiT+fK0fPoKa81Q+Xh9YX5/5
vKMvF0mLw9U0pqZSw7lz3baqLVtM4wUmPGMZO/CbZ2WHCuC+6kqJto8zPd/u
nSo7GrtkjHmM54riBR8psr/PD5nuZT//KIbqZLyDd2LsPUTPvM22ovffN72r
eGqsZb3lxZ/JDhcAwCV8HZ8h2hJs/LFULlkTrIoo7lemfq+sYusfadQRHXm3
4/fXOv53HVFzx+cuzyba3PG9a1i7DAAGj839M+fuS/nVqh2n+MMFllpQMTGq
HWegzOuDsbmfbA4oDB6bt2RuN6V3tmVlzGUF8DjZxyzPtqdDZEczKLf37LHM
jb6uzDgttv68+T62XnYbxAXUxsV1mef4POo0AgDY4c1vL4p7z6mMCtnhuFBN
sGaiy0FEm18kyrXR78U+k/AroshFPdZ+rCL6gdXG7/hupQahAoBbYTXfWe13
lrdZLXhWE15pt3fuFM/WZStXKb5/e7Aa/6zWPztvVvsfBq9glqVuTM2RGMr0
e4r/79sRrluHCMBlsHe85ufajMOyoxkwc19L/ltvKbpfVuue5fNHl8Urul93
05KfT+kjR/F/g5znA6j2+HHUaQQAsEN1Qws9tvwEv/ewdVeq6p1oLl6WE9cE
y3qXaFsQUXFfYw86fhfn1xH3rzo+1+NXx1nfV8eW60TXGwBcRuz1EvHeYm5k
qqL7bkhJEc/V+dPfUHTfjoq6WCDO+5MDrlk3R5aKtWvFv2vllq38Z4Vz/sT/
/4bz5yVHB+AhDvze9Dy79TH5z7IDUHv0qMgbdadOKbrvlFu3RT7/7kKBovt2
J7deCxL/Bo1Xr1Lb7duU9atfo04jAIAdTmdWiHvPGzucsMaWs9UEK15KtHs2
UaWVfqu2Hj9rqyKq7lkHLI/o+474N89AbXwAsNvKo+kid29JzFFkn6zGbvYz
E/kzNqvv4mhNYzUsOnhDnHfkBaztPhC18fGi7VQ07z3xc8O+ffxnrC0FABqo
yiTaNNL0HHtopuxo+nXrd7/jOSJ38hRV9j9tyznT+sVrtF2/2FWULV8ucnd1
RKT4eVHwfNRpBACw08aT2aItEXo8Q3Y41vVZE0yjWjSV4UTfv2ujz4qN85pP
1NbPPtiYsY1+RNfk1Y0GAPfwevh5kbvPZjs+ibpo3jzLO/74EwpEqI6XwpL4
Od81/zBdL6qRHY5TaykupoxHx5jqxEycSO1NTeJ3rSUlvI8TADSUtt/yDHt+
nexobGq4aBkDzNYdVEPcjVJxD2PrcIGF4eBBS037hYu6/+7AQSr801xJkQEA
uL6391wW959jN0tlh2ObrJpgdT8Q7Z9ve6xWWwrRD2us/65SR3QtnOj4y6Yx
YwW2aoQBAAxcea2RRi09zvO234oEqm2yf72sys71/9jG1rN3Ztnl9fTLT2L5
ef9mTaLscJxa/vTplvkyKb3XdS77cqWEqAA83MnFlufXvJOyo7Gq6F3Tu5DM
cU+repxnVp/iufx32zD32syYmUn6B3xtjrljY3XNc9cBAGDwGpvbaNxKHb//
DP/sGBUbmvr/kmxa1QRrTCL6PqjjeCkdDYVrvbfiJNP6jXFx1r/P1neszuv4
nI4o4WWiyHc7/nfPuZAAAIOXoC8T7y1m7Uqxax/1SUmif6Rg1h8VjlAdB1OL
xHl/sPeq7HCcUtnKleLfla1fYA3mOwJI0N5K9N1k03Przgkdz5nO9d9hc26u
pT7g5i2qHmv3uVsil18pMKh6LFeR+/LL/Nqn3XsfGfXW14VH7gYAcMyFXEvd
yVe3nJMdzsCpWROs7RrR/kd679valmT9/tRdXUdcv+r4/LNEBSj4BQCOW3si
U+TudQmDWy++rbqav9fn7/fHjnWp5+llR9LEee84i3nkXbF1HM1t1+IFC2SH
AwA9lVyyPD8efa//z2uodOkynjv0Dz5I7Q0Nqh9v5BLT+OV5UVdUP5azK1m8
uMtc02jZ4QAAuLXwM7miLbE8Ri87nMFRoybY5ZcH1u/F1m3MGmBfVsEi03e+
D7cvJgCAHt7amSJyty69fMDfK5g9Wzxn158+o2KE6pi2+Zw4b7ZuGLAxG3mk
Hz6c/5vmvDCJqL1ddkgAYE3qDstzZOp22dFw7bW1lHbf/Tx/lH3xhSbHXBNv
eX9TWK1S7RIXUB0VJe7HpUuXyg4HAMAjvBd1RdyDDl1xwdpUoibYC9rWBOuq
ei9R5LNE56zMQapcaYpn83z14wAAj1DT2EJPfJHA8/Yjy+Kpoq7/tc8r1q+3
zGvZtFmDKJXH2kkPLT7Kz3v8qpNkbEU/T960V03/rj73UNP167LDAYC+HH3f
8pxa3Lsmn9YqN24U94WWggJNjlnd0EJ3zz/M83hITJomx3Q2Tddv8JzNrnve
tGmywwEA8Bjtd+7QxNWJ/B5078JYyq2olx2S/bSqCdbruLNNx9q/t/fvCuZj
3BcAKC4pq1K8t/j99gt9frYuIUG0bwrnuvZ6UV3XCpsTcVl2OFKZ5yqxjY0h
AAAn13TbVPOLPRd+91LHQ3iL1HAy/Z7i+aPogw80Pe7CA9dFu8Pj3mF0tLty
Jk0yzTN9eDivtwYAANq5WmigYZ1tiSkbz8oOx3Fq1gSzpjGOaPcMouqev6gi
OuKHel8AoIpNp3JEP9CqY9ZrELaWllHGY4/z5+ws/wnUXq9+PRe1sXM1n/em
U9myw5GC1YYx93uxmjEA4CLyTlmeS3Xy/tut/v57y7qwqamaHjuzrK5LDs/R
9NiyFS/4SFz3miNHZIcDAOCR9pzPF/ehxT/ckB2OMgz5ytcEs6VyL9EPs4nO
dfzfgpSOLY4o7kWib4OIcl1wLikAuAQ29smcu9mYqJ7yZ8wQz9kNF/oeH+ZK
pm+/IM6bjYHzJMb0dFGjJzfwZdnhAMBgnV9neSZN2yclhJwXX+Q5JH/6G1KO
/8fdl3j+fvKLBCnHl+H2zl3ifszW5gUAAHk+jr4m2hJ7U7SZ968JzWqCNRNV
XyPKjSNK79iKsRYZAKiLzRdhta9Y3ma1sLrWDi7/KlQ8Z1ft2CExSuWxGmes
1hk77ye+OMFroHmK3MlTTPNlHvAlY2am7HAAwB6H3jI9i34zkqhK2/+O605Y
5sHXxsdremyz5Jwq0ebYf6lQSgxaaky5JK75renTZYcDAAAdJq0/w+9D/7Pg
COlLamWHozxbNcGSVK4JBgCgErbmobkNMXXzOf6z2tg48ZxdNN8919pga1ya
z5utfekJShYuEv+uhoMHZYcDAPZiz5xbHzc9hx54XdND578xw7I2rESB35zl
+Zu1PdxZe1MTZU/8Db/mGY+OoZZizAcBAHAG6aW19POPYvi9KGDdadnhqEfr
mmAAACracTZP9AN9HnmO0keOMrVtng+gO62tssNTzfqELHHea0+49xio6ohI
y3yZ5ctlhwMAjso4bHn+ZOsyaaDxyhXLGhnfyV0j4/DVYpG/T2VUSI1FTUXz
3pM+zg4AAKzbd6lQ3IsW7L8mOxx1aVkTDABARR/svSpy94ZxgaYaxlevyg5L
dbN2pYjzTtCXyQ5HFezfUcyXeS1IdjgAoJTTyy3PntnHVD9cUfB80/ijJ59U
/VgDYZ6zP2OHe753rtyyVeTuirVrZYcDAABWfH7opmhL7D7nAXMB+60J5vpr
owGA+/P/MIrnbZ9399Ll7XLf6WultqmV/FYk8PMetfQ4ldUaZYekKDZuj43f
Y20nNp6vOT9fdkgAoKR9U03PnNvHEtWVqHaYlsJCSz9MWJhqxxmM7UmWMcs3
i2tkh6Oo+rNnxfUu+MMs2eEAAEAfXu6ch8+2KwXVssPRDmqCAYALMhw4SD+M
HEc/e/8gz9svhSXJDkkzydmV4n71evh52eEoyjxOg8+XiYuTHQ4AKK38huV5
M+Yd1Q5TtmIFzyNp995HbTXO0c/UfucOPbj4KM/d8/e5zzjlNoOBMp8ez693
5lNjqa2qSnZIAADQh7zKBrp/URy/H00IPUWt7Xdkh6QtVhMsHjXBAMD5sfX+
0h7w5c/Z63+/QPQDLTp4XXZomtmSmCPOe+XRdNnhKIKtz2nu92LrdgKAm7oe
YXnOTNmk+O5ZvXX9Qw/zXFK6ZIni+3fEqo58bc7d7jJut2D22yJ315924/rJ
AABu5EiXOpTzvkuVHY4cqAkGAE4uN/Bl0/v8++4nY3o6LTxwXeTuqIsFssPT
zNzIVHHeMdfVmzukhYYLF0TbKX/Gm7LDAQC1xX9kecYsSFZ011VbLXWnmnNy
FN23o8prjW713qJi/QZxrSs3Kd+PCQAA6lkRqxf3pG2nc2WHIw9qggGAEyr5
dLF4zjZER4uf/3ZDEs/bd3942O3qqNjS3NZOv/7KVDvZ99OjlH/bNfNye309
ZflPMNWkfvwJai1zzxr+ANBFS73pmZI/Wz7fkdDqFdt11njT/LvCue8qtk8l
fbjvmilvLz7K50G6qjqdTtyPC/80V3Y4AABgh6Ct50X/17kczFlHTTAAcAbV
UVHiObt06bJuv8ssq6N7Po7hefu5tZ4z5+JyfrW4X72ySdmxE1phbSbzvytr
SwGAh2DjvczPlfELFNmlIfqAyCdsPKkzSiuuEXk7/Eyu7HDswt5RsHcV7Dqz
dxfsHQYAALie0pomGvH5MX5PGvuljuqNrbJDcg6oCQYAkjRdv043fe7hz9l5
0161+pnoy0WiPeFOdYT7szPZsnbY0sM3ZYczKGyOjFiLbf0G2eEAgNZSNlue
J69FOLy73CmBPJ/cei1IgeDU8+a3F3nOfnqla/b3s7npzt7HCAAAAxOfViba
ErN3X5IdjnOxWRNsOmqCAYDy2tsp54VJ/BlbP3wENefl2fwo6/sx527WJ+Qp
WF+f+bxZH6ArYDWRzW0nVisZADwUW+/R/CxZbv+aJfWJiZZ1YmOde53YxMwK
kbMPXSmWHc6glIeGiutctX2H7HAAAEABX8dniPvSBl2W7HCcD2qCAYAGij9c
IJ6za2L6719nc//MuftSfrUGEToHNteTnTOb+8nmgDqztqoqynxqLP83zXx6
PLUZDLJDAgBZ6kqJto8zPUPunWr3bgr+MIvnlOxnn1UwOPW82FmncsrGs7JD
GbDauDhxPy4Kni87HAAAUJB5TDLbTmVUyA7HeaEmGACo4PbOneI5u2zlqgF9
h9V8Z7XfWd5mteBZTXhPwGr8s1r/7LxZ7X9nVjBrlvh3rU9ynXYfAKgk+5jl
+fF0yKC/3nTzpsgpt3fvViFA5UVfLhRtjLPZlbLD6VdLfj6ljxzFr3HO8wF0
pxU1YQAA3El1Qws9tvwEvy+NCYmnqvpm2SE5N9QEAwCFNKSkiLZM/vQ3BvXd
2Oslok0xNzJVpQidT9TFAnHenxywf+6QmirWrhX/rpVbtsoOBwCcBaunYX5u
zDg8qK8Wf/yxaa3YR8eoFJw6/FYk8Hw9a1eK7FD6xWqomXN341XPqakJAOBJ
TneZkz9jB/pvBgQ1wQDAAe2NjZT9zERTW2bMY9RSUjLofaw8mi5y95bEHBWi
dE6LDt4Q5x15IV92ON3Uxsdb5svMmyc7HABwNgd+b3pe3PrYgOcNsDUHzXml
fM0alQNU1uaOe5M5XzvzXPWy5cvFNa6OiJQdDgAAqGjjyWxxbwo9niE7HNfB
a4LtRE0wABiUonfniefsuvgTdu/n9fDzLjWnRCkvhZnqyNw1/zBdL6qRHQ7X
UlzCx2TwejwTJ1J7U5PskADA2VRlEm0aaXpWPDRzQF/pWnu9tdK18nxzazvd
uzDWqcfqGg4eFNe3ZOEi2eEAAIAG3t5zWbShjt0slR2O60FNMAAYgMotW8Rz
dsXadQ7tq7zWSKOWHud5m80tqW3yjPok2eX19MtPTO2p36xJlB0Olz99umW+
TIrzz+8BAEnS9lueE8/3fQ9gNafMNahKFn2qUYDKWh6TJt5V3G5wrtoqxsxM
0j/gy69v7uQpssMBAACNNDa30biVOn5/Gv7ZMSo24J21XfqqCVaEOaUAnqw+
KUn0jxTM+qMi+0zQl4n3Fq5QU0UpB1OLxHl/sFdubZaylSstdah37pQaCwC4
gJOLLc+HeSdtfqxqx7citxjT0zUMUDlF1Y0iV7M15p1JbuDL/Nqm3Xe/y15f
AACwz4Xc2+L+9OqWc7LDcW2oCQYAXbRVV1PmuKf5c3bm2HHUdvu2YvteeyJT
5O51CVmK7dfZLTuSJs57x9k8KTHUHIkRbdPiBQukxAAALqa9lei7yabnwp0T
iBqt3w+yJjxjelcy+22NA1TWe1FXeJ4eseSY7FCEksWLRe427I+WHQ4AAEgQ
fiZXtCWWx+hlh+P6UBMMADoUzJ4tnrPrT59RfP9v7UwRuVuXXq74/p3VtM3n
xHmn3FKuP3EgmvPySD98OP83zXlhUkd7tl3T4wOACyu5ZHkmPPper1/XHD5s
uWcknZUQoHKuFhpEnt6VLL8OSHVUlLi2pUuXyQ4HAAAkMr+fYduhK8Wyw3Ef
qAkG4JEq1q8Xz9mVmzarcoyaxhZ64osTPG8/siyeKuqMqhzH2RRWN9JDi4/y
8x6/6iQZW7Xrf8qb9qrp39XnHmq67px1nAHAiaXusDwPpm7v9qu8qdN4fsl7
5RVJwSnLvDbLhNBTUuNguZrlbH5tp02TGgsAAMjXfucOTVydyO9R9y6Mo9yK
etkhuRfUBAPwGHUJCaLfq3DuXFWPlZRVKd5bTN9+QdVjOZO4G6XivOdEXNbk
mGysgPnflY0hAACwy9H3Lc+BxZf4jxqSk0V+qTl0SHKAyjjRpTZl3PUSOUF0
tG9yJk3i11X/8HBqzpUzVx4AAJwLG588rPMeNWWja4+1dlrmmmBbURMMwB21
lpZRxmOP8+fsrAkTqL1B/TnOm07liPbFqmOeU7uXnav5vDedylb1WKw2jLld
ymrGAADYrem2qeYXe/777iWi9hYqfOcd033Df4Ls6BT13NrTPEdP3Zws5fis
JqPoUzxyREoMAADgnPaczxdticU/3JAdjvtCTTAAt5Q/Y4Z4zm64oN04LDb2
Sbxfv1Gq2XFlY2PdzOfNxsCpga0FxtYEY/+mbI0wAACH5Z0Sz37G3e+K+0bV
9u39f9eFRF0sEDn6Yp629Rlv79wlritbmxcAAKCnj6KvifvU3pRC2eG4P9QE
A3AL5V+FWtovO3ZoemxW84rVvmJ5m9XCYjWxPAGrccZqnbHzZrXPDI0tih8j
d/IU03yZB3zJmJmp+P4BwEOdX8ef+Uqm3MdzTPqIkXSnRfkcJtuYkHhN56cz
jSmXxP341vTpmh0XAABcz6T1Z/h96n8WHCF9Sa3scDyDkjXB2tvUiREArKqN
jRPP2cXz50uJga15aH5vMXXzOSkxyMDWuDSfN1v7UkklCxeJf1fDwYOK7hsA
oC1iOt30MeWY8qWfyA5HFRt0WSJH51aqX0+4vamJsif+hl/TjEfHUEsx1vAC
AADb0ktr6ecfxfD7VMC607LD8SxK1ARrqCTKTVA1TAAwac7Pp/SRI/lzds7z
AXSntVVaLDvO5ok2xrIjadLi0Nr6BEvbau0JZcZmVUdEWubLhCxXZJ8AAF1V
rFwq8kzLjqmyw1FFvbGVfDrbFJ8duqn68YrmvSeuaW18vOrHAwAA17fvUqFo
SyzYf012OJ6nz5pgO/qvCfb9y0RVWdrECuDBihd8JJ6zG69elR0OfbD3qsjd
B1OLZIejmVm7UsR5J+jLHNoX+3cU82VeC1IoQgCA7jLGPGYaL/zbe03PeGdX
yQ5JFZ8fuslzM3uvXmdU7/1Q5ZatIndXrF2r2nEAAMD9mO9VbNt9DrWnpLGn
JtiJj4h2/8Y0BgzAhtu3b1NBQQGlpaXR1Y72vowtIyODiouLqbbWdedXs5q6
1ZGRssMQnl2TyPP2Lz6Jpexy9eeYOIPaplbyW5HAz3vU0uNUVmu0az9s3B4b
v8fr74wcxcf1AQAo7faePaKfpmnX+5bnu+xjskNTXF5lg2hPsDmQaqhPOiuu
Z8EfZqlyDAAAcG8vf3NW3K+uFFTLDsezDaYmWOp20+/iFxA1VGgcqJFKU3UU
GxFOYSHBFBwSSmHh0aTTGzSOA6xh/U179+6lZcuW0aJFi5xq+/rrrykmJoay
s7NlXyaXdr2ohu6af5jn7ZfCkmSHo5nk7Epxv3o9/Lxd+ygKnm+ZLxMXp3CE
AAAm2c89z/NM/ltvmX6wb6rpuW37WKK6ErnBqcC8HvGjIcrPQ2wzGCjz6fH8
emY+NZbaqqoUPwYAALg/9q7m/kVx/H41YfUpam2/IzskGEhNsIIky8/ZZ7VQ
mkwRwYHkN2woDfMLouDQcIqIjaXY6AgKnRNAvt5e5O0bSKG6Um3igW4uXrxI
oaGh3fqZoqOj6fjx43Tu3Dm6fPmylC0pKYni4uJ4bCEhISK+7du3U05OjuzL
5rIiL+SLfqBFB6/LDkczWxJzxHmvPJo+qO+y9TnN/V5s3U4AADXUHj0qck3d
qVOmH5bfsDy3xbwjN0AVdF2P5bsLBYruu2D22+J61p9GnWIAALDfkavF4n41
77tU2eGAWV81wS6GEe34leVnV75VMRADJYcFka/3EBrqF0zRtsZ3GZIpxM+b
hgzxJr+QZMIoMG2Ul5fTN998w/uTPv30U4qPj+dzDJ1VVlYWff/996IP7CDW
17PbwgPXRe6OuqhsW8OZzY1MFecdc31g4ycaLlwQbaf8GW+qHCEAeLJbv/sd
zzW5k6d0/8X1CMtzW8omOcGpaNqWczwvP7dGuf6pivUbRO6u3OR+1wwAALS3
IlYv2hLbTufKDgd64jXBZnTvA/u2S9/Xt78e+DqRgyH6s4aSX4iO+h3RZdTR
HJ8hvP/LPzxP+Xigm/T0dFq+fDnvQzp06BAZDK7T48jGfJljZ2PAXLkemEy/
3ZDE8/bdHx6mm8U1ssPRRHNbO/36q5P8vH0/PUr5t/teG6S9vp6y/CfwtlPG
409Qa5ljtfIBAGxpuJgi+moM+/f3/kD8R5Znt4Jk7QNUUdyNUtGWiE9zPM/W
6XTiWhb+aa4CEQIAAJgEbT0v7lnncjCX3il1rQnWte+L15AYR1SjYN3mvGgK
8vEyjeMK1dNAK0sbIgLIe8gQGuLlT+GY/qga1u9lHjt14cIF2eHYjY37Yuew
bt06ampqkh2Oy8ksq6N7PjatL//cWs+ZC3I5v1rcr17Z1Hf7kbWZxPyjBJ1G
EQKAJyp6d56pLtW4p61/oKXeNH6fj+N/nqjZvdYreWb1KZ6Xf7fNvpqMZuwd
BXtXwa4le3fB3mEAAAAopaSmiUZ8fozfs8Z+qaN6FdcpBjtlHSWKndO7Hn7X
GhLVuY4fpzSaAoex8Vte5DNHN7j5i8aO73qz7w4hn2DMoVUDm+doHjOVmJgo
OxyHnThxgp/Lnj17ZIfikqIvF4l+oPn7rsoORzM7k/PEeS85fNPqZ9gcGXO/
F5s7AwCglubcXMv8vM1bbH+QjfcyP7exNYvcCFs33rKGlv1j0dncdPO1bHDh
93sAAOC82Bhl8z1r9u5LssMBs6KO+77uU6JNo233e5m3k591PIDVOXAwPYWO
9uJ9V16+IR3/32CVUthoU9/XELu+D/0x1/dy5fFePZlrgB075n7rv2th6eGb
InezPiFPwfr6zOfN+gC7YjWRzW0nVisZAEBNpUuX8Xyjf/BBam/oey42pWy2
PLddi9AmQI2MXHKc5+T3oq7Y9X22Fok5d7M1SgAAANTydXyGaEts0GXJDgdy
jhN9/7Jp+2GGaTs+nyhhkWm7uNG0sXr36T+YtoZKuw+XGuxLXqzfasgwmpM8
0JmOXRkpIsDUd8bmPUa4Tgkql8DWczTX93In7e3ttHr1an5u1dXVssNxSWzu
nzl3szmBnoLN9WTnzOZ+sjmgTFtVFWU+NdY09+jp8dTmQrXwAMD1tNfWUtp9
9/OcU/bFFwP7Ehurb+7/Knef9XrXxGeKe1FhdeOgvlsbFyf6vYqC56sUIQAA
gMWb314U961TGRWywwGt5IXSaC/TmC0v//D+a9tbZaRoc9/XkNEU6jlDUDQR
GhrK13N0pbr2A5WSkoK1Hx3Aar6z2u8sb7Na8KwmvCdgNf5ZrX923qz2P1Mw
a5ZoP9UnnZUcIQC4u8qNG0XOaSkY4Lq7daWmWq2s72vvVHUD1FB1QwvdPd+U
k0Ni0gb8veb8fEofOYpfw5znA+hOK2qvAACA+th967HlJ/h9a0xIPFXVN8sO
CVRnpNigoZ19VkMpKNaeMV9MKYX5dc55HOJLIR406ZHV4FLT1atXed9QfHy8
qsdRQsFAn/17WLp0KT9Ho9Hevz/PFnu9RLy3mBvpOfX2oi4WiPP+bvZCS82d
LVtlhwYAHiDT7ynTWKUPPhjcF7OPWcZ+nQ5RJzgJFh64zvPxvQtjydg6sPcw
t14LErm78arn1K4EAAD5TmdWiLbEjB0XZYcDajNEkH/nmK8hQ2eSzu6uh2Sa
M8zc9+Wn6VqPP/zwA82fP5+eeeYZ/n+1HD9kOt8hVvu/XnjhBfqLv/gLio2N
degYe/fu5f1CxcXF/X5269atNHv2bHrppZdoyZIldOPGDYeOPVAZGRn8Ojzw
wAO9+r+ioqL471599VWb3z958iQ/x6sKPfempaXx/jR2Hdj1YNfF3a08mi5y
95bEHNnhaGbRwRs05bXllvky8+bJDgkAPED1999b+mxS7XjncPYrS/9XxmHl
A5SAzT8334c2DeA+VLbckrurIyI1iBAAAKC7jSezxb0r9HiG7HBARYYI/846
X0PIOyiW7O76Kg0jvyFd+tCUDLIPrF+DHdPPz49+9rOf0V133cX//+nTp6t+
bNbfZe776tn/xfq9zD//h3/4B4eOs2zZMvr666/7/ExZWRnv+/u3f/s3GjVq
FPn6+opr8eWXXzp0/IHw9vYW59u1/8vc72Xezpw5Y/X7rF+P9X2xfj5Hsfph
f/7nf86vw+jRo+nnP/85/fjHP6Zx48bZPS7NVbwefl7k7rPZ9tf/cyUtxSV0
/sGRvO0UO/xJup5TJjskAPAAOS++yPNO/vQ37N/Jgd+b+r62PtbxQHZLueAk
+uPuS/we9OQXCX1+znDwoOj3Klm4SJvgAAAArHh7z2XRhjp2U8NBPKAhI8UG
mvssvMjfgQL1xuhA8u7s3/AKiCCrezLoSRcdTmEhIRQSFk4RulQ7a4uZsBpY
Q4cOpalTp3brX2EbG281T4PxH9b6v7r2e/3d3/0dnTp1yu79V1VV8T6h6Ojo
Pj/3yiuv8P6///zP/+x1Ldim9jqKrE+J9Xl17f8KCwvrFsObb77Z5z5COv4u
NmzY4FAcrG+NHWvixIm9rsHf/M3f0K9//WuH9u/symuNNGqpaa0tvxUJVNvk
/nVT8qdPF+2nCW+spd+sSZQdEgC4uboTCSLv1DpSj6Aqk2jTSFP/16GZygUo
UXJOlWg/7L9UaPUzxsxM0j/gy69f7uQpGkcIAADQXWNzG41bqeP3ruGfH6Ni
Q5PskEBxegrxVaJGF6sZ1lcfmpFSwwLJPzCYwnV6yjMYqDQ1moL9vMlrqB8F
6+zrAfvXf/1X+sMf/mC1r4dt/+///T9q1aBmas/+L6X6vZhbt27xvq/jx4/b
/MyVK1f48f73f//X5rV48MEHHYpjIHr2fw2m34tZt24dfTHQdbJs+O1vf0t3
3323zevAxoPpdFqNSpQjQV8m2h2zdqXIDkdVZStXifbnyeXrxHl/sBc1YwBA
PflvzDDVZn9hkuM7S9tvmft4fp3j+3MCgd+c5bn4xfXWx3rnBr7Mrx9bI9OY
nq5xdAAAAL1dyL0t2hKvbj0nOxxQXDLNNNfo8gqgaHsnPBpjKdDbds0wY/JM
GjYsgMJSe/SJmWuNeQ++PlhOTg4/3siRI232c7Dt/vvv52N91N569juxfjcW
m6P7HTNmDO/LYXP3bH3m3nvvpb/+67/u8zqweLS4Dk8++WSvWH7yk58M6Lv3
3XcfP9fx48fbffwf/ehHfHxXX9fivffes/MP3XWsPWFZa35dQpbscFRRcyRG
9HsVL1jAf7bsSJo47x1nsdgsACiv8coVS42q76KU2enJxZb+r7yTyuxTosNX
i22uG1+yeLG4fob9fY9pBwAA0FL4mVxx/1oe40GL93mEZJo51NJnlWznXkrD
zTXDvMg3tPffiD7E13QM31Dq3hrVU7CPffMtzX1ftub4YcNma3vttdfs/Et3
LW/tTBG5W5deLjscRTXn5ZF++AjLuIt2y3pi0zafE+edcuu2xCgBwB0VBc/n
uSfjySeV22l7K9F3k019XzsnEDW6fu4av+pkr3WzqqOiRL9X6dJlEqMDAACw
7r2oK6ItcehK/2vNgavoMudx2Bw7+75SaY5P5z58ginZytgxY2o4Bfn5UWBY
ao9a+ua+N28Kih38oLN/+Zd/oV/84hd99nOw2luvv/66qtt//dd/ieOxOXVd
jz9ixAiH9j1lyhQ+X9Hf39/mZwICAvrt72FjodS+DmPHju12zL/6q78S//sf
//Ef+bn09f1HHnmEj5VzJIZhw4bRX/7lX/Z5LbZv327XX7qrqWlsoSe+OMHz
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
bt0q5DywjeXgVq5cOeB3xPJxGRkZbo8J8zVtJ09Jea+qt99Wd+f73rLkvlbd
T9SkbF3IkbD13q3Xy03Z+M4PAAD+p3/f8azCfUcAADkZGtvprqlpvP16Ij6T
unqUmw9VE/uh1H+6lpam2H6ccb7mKq/bwo77+YSTQmPxNkZNNIUEjKExY9gW
QMERcZSq78uBmfSUHBVGEQl6sUEKVFxcTJ999hnPpcyYMYP279+vWF7JHWze
n06no5SUFCn3w3JRra3yrWPHjt363nPnzqXs7GxqamqS7f3lUlVVxXNeLCfH
Yp03bx7PXQJRt8lEJePH83a75NePUbfavz9TBdHaRyz5r91/UXffdvwlKVe6
XgIAAPibAX3Hxcr2HQEA5HagsFbK30/cplNkH00bNkh5ryuL4hXZh6u2nq6U
jnvqnguiw/EKLO8VGhpNCVodGQzZlBrf++8gSx4sMCiIAgMCKTQum+yNBvMH
OTk5Uq7nwIEDsuaRlFRRUUEbN27kcS9evJgq3RyTee3aNVq/fj1/v4SEBDp/
3nvWxmPzQGfPns1jTxOco/cEVe+8K7XdbVmC6tsW77fNfTy1UEwMfY7o66Xr
Rtp5hWr9AwAAeLD9/fuOKcr0HQEAlPKpRi+1YeuyymV97/bTp6W+U+Ubb8r6
3u5i69Vbjzslr0p0OB7OTHqNhvSDpzOaDaRJiKWYmFhK0BrIX2c7snFD1jFD
njjOyxmZmZlS7o6NXxsNNq7LOn5qj0pruMqtoaGBVq1aJY2F81cNKz6T2u7G
1avFBpM115b/KhNbb+uZZVl+tV4wAAD4qh6qrrxCe/MqaFNeDR0ru0rV1517
5YC+44lyRaMEAJBb1NpcqQ3LuSzPvJaetjYqDX+C952KH3mUuurrZXlfOf3p
s5P8mG/9aD9drL0qOhzwQgUFBTxPwuY6NjY2ig7HLefOnZNyeK4eC1tDktXx
Yq9n46e8GVuPc+HChfxY0tP9r7Z561GtlPeqfv990eFY7HzJkvta/1hvgOLG
XLH7JNZrZZ6hWVgcAAAAo9VwqYheX36K/rb3Mm2/cIUOna2gaYkZdNukdJqw
s4bKnFj+p3/fMbfc82paAAA4Yrx6ne6bmc7br8fma6nN7P6aZ6zPZO0/sb6U
Jyqpb6U7Pj7Ij5vdzwdwhcFgkNYMrKvzjTlQ1rmbq10c67Nz507+uoMHDyoU
mbpYzXs2Z5MdU15enuhwVMPuUbB7FazdZvcu2D0Mj3Dlgm3s18G/Cw1lXFwG
v2bEJJ8RGgcAAICrrpWdo4gNFXbyW110aLOlL3jnyt7HR3ifusF9x06slw0A
3iOjyFbL5J3NBW69F5sjY817sbkzniz1TI103B/uLBQdDngRa52sixcvig5F
VtY5fydPOrcWBJvnyZ7/6aefKhyZuurr6/n6j2wMGBvX5g/Y3HRr283mrHuU
88m2/Fe+uHmYn2lLpWuGodFDcoMAAAAj6qDE5QfotpmZ9HpWC3UOfrjsHN3L
r29p9PqFkXNZcvYdAQDUtiSjWGrD2Pf70WA1ka19J1Yr2RvM3n9ROu6N2QbR
4Xg+s4mMJn+t7mVRVFTkszWh2DqQc+bM4XMfOzuHfDMaYt26dfxcsLr5vubI
kSP82I4dOyY6FMWxtUisbTdbo8QjZUy25b+qsoWEwMZFB0+2jBeesc+38t4A
AODLrtA/plr6Oz+eqqMh32yulNITff2hcQedqwXTv++YMMq+IwCAKG9+nie1
YZnFDS69trupiUp+/RjvO5WMH0/dJu9Z9e/Pq7Ol4z5T2SI6HA9kJn1qHEWG
BlNwWARFRUVQWHg0JRssj+niwyg4SiM6SNVY8z21tbWiQ1EEq9nFji9rhPX9
SktL+fPYnEdf1NXVxcezxcXFiQ5FUdfS0qS8V03sh6LDcexGG9GWCEvua8uz
RJ1ixl3N3Ge5X3L75IPUKkONAAAAAOV10bGdWrrtXwfosZ1X6Nrgh2sv0Li+
vlBEVofT7+pO3xEAQKSW9hv08Nwjlpx/XAY1tY087sOq6u23pf5T28lTCkYp
v8rmdgqZdogf9+8WHaPO7h7RIXkOs56SIoMpICCEYjRG28+NyRQZHkupSREU
NCaAwpM8K9dZVlZG27dvp6VLl46Yw3FFa2srz/ckJSU5fM6OHTvopZdesvvY
J598ovr8QHb87Dyw88HyVSNpa2vjx8hyfMM5cOAAfx47146MGTOGP28wvV5P
zz//PNXU1IwYj1zYWpQajYbmzp3L/8v+PRJWw4wdozPnzRt1VlbSpfsf4O32
5Wcj6GaXh+dyqrNtY78yJgkJwdDY7vYYaQAAAE/SkH2q79qWSYlXnH9dS3vn
qPuOAACiZZU0SN/rX9/gXJ3nhmXLpLxXY2KiwhEq4+D5Oum439+qEx2OZzDr
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
9yNOnDhBf/rTn+jWW2+ln/zkJ/THP/5R1lq3w7VbO3bs4O3SSy+9NOSxTz75
hD/G5rWoZcqUKTRu3Dj6+te/zv/78ccfq7ZvT7qOufqZQLsN3s5sSKao4AAK
CI6mVINtwJdJG01hEZEUHsj+PkMp3qB+bGwdPvb3tXfv3hGf683fxVk+a6Sc
lsFgcOpcKPldfCS+8F3cmd8FAIBS9HEhfdeUsRTj7BBfczJFBIaQk6kyt7z8
8sv01a9+lYKDg+m2226jW265hf7zP/+T/v3f/13x9VfYNdZ6vR18zWXXWuvP
/+M//kPROBhWw/n73/8+Pfroo/SrX/2KfvjDH9J//dd/0Ze//GWaMGGC2++/
Zs0afs13NK8kMDBQOt7+11zrtda6sX6N0tz5TLA1q2fPnq14jDA6PTdv0lOL
j/Pc151T0qi8oU10SMPLWWpZB0HJHJhZTwnhQbyNjkwdOjLAEB/a9/cXIqTv
5MjixYt5XCzHcdddd/Hvxt/+9rf5z+bNmyfLPoZrt77whS9I7VL//Jc172Xd
lMZqxoSGhvK26qGHHuJtN9u+853vUEhICO97KsmTrmOj/Uyg3QavZUiiiKDe
v7GgCEoe0nybKDkiwPI3GBRNKt1OHoDNFXdmfVxv/y7O8lnsOFl+y5H09PQR
z4XS38VH4gvfxZ35XQAAKMNICWF9bWVgJGmcrj+QTdFje6/jCtcrYPcTWLt6
xx13DGjT2fZv//Zv9N///d/KBkD2r7n9r7Xf+ta3+NgDpbG+0zPPPMPvbQ0+
F+xny5cvd+v92fiHpUuXOnycXV/Zdbb/NTchIWFAHG+++aZbMTjD3c8E+37A
rrmsnil4psJqE43tG/s1YeUp0eEMj9WDO/SBbS3Q3a8RnUsmam+QaQdmyo4N
oYDez3dgRLL9OTGaKMs89LExNPj2hcmgpeSEOIqLi6ekZA1lG9QZF1ZUVERf
/OIX6amnnhryd2rd8vLy3N7PcO3WgQMHeJvQP/81OO/lbrvpjHfeeYfuvfde
+t73vjfkHHzlK1+hyMhIxWPwhOuYO58Ja7vd1ubhuXCA/sw6igthuS02Jtf+
jEZdbDD/7AdEpJKIEmCXL1/mf1tsHT5HfOG7uHWuXWFhocPnWNuZ4c6F0t/F
R+IL38Wd+V0AACjCnEqRgZa2KiA8iZzvFWVTdKjy96jYONrbb7/d4fdk9j1a
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
QrQ0NUdLa1uc6W6LfF11s6+UOaWavlIZRxpbt26NkydPVnQcPHgw1q1b9697
pyxqMT5/x44dZb/H7t27Y9WqVWXXYfny5RVfhzTm7vOaGan2cs+ePVW5//r1
67Oaz3Jrkc50LObFixdZ9nXjxo0qPcEAAABAxU12RHPuWybQ2FqimnGqO1rq
v/X6aisVbE39/TlVzL7WrFkTa9euLZtzGMb3o6WlpejzND4+nmVfvb29VXqC
AQAAgEqbmunjVVcfLT3Fa+riTms0pGsaW0v3+qpB9tXU1DTvHp9U+7Z69eqK
jlTPV+zeqbd72o+10M9fsWJF1re91PsrV66MJUuWlF2HpUuXVnwd0kg9x4rd
v9z8F3MsW7Ys+67l1uLIkSNFn6fHjx9n2Vd/f3+VnmAAAACg0v5/fmM+CkWb
3M/t9dUdJdKxmmRf6Vy+lHWUyjjSe5U+s+/7vvY7d+4s2v9+Ibq6urJMZnKy
9CkCqfYz1TWWWott27YtaA4/orm5efZ+KQ9MPf7nzuH78x8rYSHPxMDAQLbO
Q0NDFZ8nAAAAUB2z2VdDa/QVvWIiCvmUG6ReXyXCsaQG2Veyffv27Py+YjlH
6sNVSZ2dnf+430xf+2LnPy5EX19flsk8evSo5DWpj3w6z7HY/q9UGzo9Pb2g
Ocxnbr+zlHvdvHkze/37/veVPucx+dlnYiZjfPv2bcXnCAAAAFTHZEdz5OrK
ZFaTZ6Ip6wdWptdXUqPsKzlx4kRs2LAhq3VLNXfp7ytXrlTl3t/nXjPm5l+p
B/tCpCwmZTIpmylndHQ0tmzZktVIpgws1UKm/V6Vzr2Snp6ef+VeM2byr3TW
ZLm9a4vpZ56Jtra2aG9vr8r8AAAAgCqZKEQ+ZVaNfxXp5TUR3S0Ns/vCSvb6
SmqYfdVaOoOxmNevXy/aPqeUyaTzCb98+bIon1cJ6bumzKnUe9XKvX7G8PBw
li+mDA8AAAD4nUxFX2tj1NVtjL2Dc18eiY5d+djUmJu/11d2/Z+bfVVDqmlM
2cy1a9dqPZXf0qlTp7L1ffPmTa2nAgAAACy2qbHo2LUx6hubYm/hTBT27oqm
fHO09Q3+3eurLvKlGuHPfobsq9IOHz4c+/bty/aTsXju37+f5V4XL16s9VQA
AACACpqaHIk7Pd3Rc2cksuq0qe5vedZ8vb6ya2VflXbv3r0so0lnGbI4Uo64
f//+LFP88OFDracDAAAAVNOd1mgoewbkHLKvqrh8+XKWf3V3d9d6Kv957969
i2PHjmXr+eDBg1pPBwAAAKiykbZNWb1jrnmeXl+J7Ktqzp49m+U1Fy5c+KV7
3//KXr58GUePHs3Wsa9v3mQXAAAA+O1M/Hivr+zyQuTrSp0XyWKanp6Ozs7O
LLcpFArx9OnTWk/pP6W/vz9buzRu375d6+kAAAAAtTBWiHzW66sx/ioVZk10
RGs+H/n85tjUWB/1uVzkcvXRsHHz19e+vt58JAZL/CsL19vbO5vhnDt3Lp49
e1brKf2yPn/+HJcuXYrjx49n63XgwIEYGhqq9bQAAACAqhqJQsvm2LRpYzTk
vu35ymoeGzZ+fW1z7Or4gf1fVNWrV6/i/PnzsxnYoUOHoqurK65fvx53796N
q1evxvDw8B83Uq6V9nelfHCmRnRm9PT0xKdPn2r90wEAAABVNxUTI4MxODIS
IyNjMTaWRvp7JAYHB2Ns3qZf1Mrz58+zTKe9vf0fOY/xbZw+fTpu3boV79+/
r/VPBQAAAMACpHxndHQ0Hj58mO19+hPHwMBAPHnyJMbHx+Pjx4+1/kkAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAr7H6JxqV8=

    "], {{0, 724.}, {1215., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Comments" -> <|
       "Software" -> "gnome-screenshot", "Creation Time" -> 
        DateObject[{2024, 4, 1, 22, 12, 30.}, "Instant"]|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{499.04999999999995`, Automatic},
  ImageSizeRaw->{1215., 724.},
  PlotRange->{{0, 1215.}, {0, 724.}}]], "Input",
 CellLabel->
  "In[105]:=",ExpressionUUID->"cf821fb8-ad1b-4300-9a07-808850ce1819"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
nu+5c95fOwQBKo+glpfGmKdOle51bErbIDochVnJkBBBwX1tdEh0qvN7YvSx
trm4YfE0uAm3mLIoNTmREhOTKCVVTwaTfPPCWM1dNjeI1bfv6emR7XVBG+zX
pIqLi0WHAiALlvs609jO/1cV1hxKjGC5LTYn1/kdjTkJ4fwcPDg6nUSVAPPn
83DRRjoO8OfPAmMiABDPTMm68/c7hsSQ3uOO10BxYdGUKkNHvXTpUt7O++u9
FdnZ2fz49u/fLzoUAJ9n2bhRyntVT/lQXCA93UQtlcrvJyeRIvi1iXBKyHH+
FPv1i5AYfb+xk4nS43Ski0mglPQsytKnU3Lfv9l9kWHRSWSQIQVmr8PL1qEC
/1NaWso/39WrA2gNCQAZsTm5wXxOV6yL82szpehs8750yeKqffn7ebhoIxkH
+PtngTERAAhlTaeYEFvuKzgqhTwfDhkoLtL7+dks78/awJSUlGGf29DQQHq9
nj766CP+v+zfatmwYQN95zvf4esLDzZp0iS6/PLLqbLS+Tj47Nmz/BhZfyYX
dh0+LS2N5s6dq3r/wb4rjz322JCfsxrXf/zjH2nmzJmqxsOOn70P7P0oKkLd
eX/WkZdHeWMu5nkv0yOPig6H6MQKoszJRM1Krd1tofSYENu1ifAEcp76so+d
gkkn1fqykiE+kqKSjUPmEZhSovgcseDIJPJ22m5ycjJ98MEH1NXV5fZ5ov5G
vWm3leCL7faCBQvo/fffp87OTlnjQbsNfs+aRbGhtvPrUFcFQqRz8HBKELRM
CPvb9vQ8/MSJE/x5bGP3RatJS+eeIx2PeDoOYHOph/sstNavjfQ7ocSYCADA
YwNqfbkqFGMdOg+b9de6JPK2tAyr4ejJvd/Lly+nX/3qV/TrX/+afvazn0mb
Wm1n0Pn36N/+7d8G9Desn7E/xvobV1ifwI6T9Wveeu+99/j+fvvb39Kf//xn
Cg4OpiuuuEKVNentxzr4HMR+7mF/7MCBA4rHwr4zkZGR9B//8R900UUX0X/9
13/xfb/zzjuK7xvEKL3/AZ73Mvb9rVmLNHIf1vYXiRZdrUwOzJJK0cG2v6mw
OBc3pEtjp373oFtSKCpURwl6k5N7aHIoIZw9P4SivVirhNW4Z23amjVrXD5H
9N+ot+22nHy13WZ13NjnfPr0aVliEf2dAFCLNSv2/Pl1CMW4uqnCfg4usNZX
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
zHa/zEVjqCM3V3Q4ABAgJqadkMZQm09Ujuo1AjV3337ypDTGKXsi1rsXG01N
sPUPEq0di/sfBykvL6dvvvmG9u7dS1u3bqX09HQhm16vp/3799OJvrFwfb36
tcnb2tro1KlT9PXXX9OuXbuEvQ+bNm2iPXv20JEjR6igoED198EftXR0kW5m
Jm+3r5m2m2paAqOu4qh0WW3tJGtPV91FZG1WdHeVCW/xPqHghhsV3Q8AAIAv
Mk+d6rhGlLZBdDgAEEBYham75mTzMdSYSXoqrj074tew5+5zAyh339vVRSXR
0fy486+6ms6VlcvzwiOpCZY12fZYZt//Wi3y7N9HVVRU8DzXJ598QpMnT9bk
tmDBAp4DYjkpJR08eJCWLVsm/HhdbdOmTaM0tgZegLQVSjEU10vXLZ5KOSw6
HO3KfM/RjrJ5tgrq7GuH7OfzdZ8nK7ovAAAAX2PZuFHqJ6unfCg6HAAIQKcq
LXRBwjY+hnoweWQ1pAI1d1/11luOWsb6ncrsZLiaYN+udvz80DxlYtC4hoYG
PrfInleZOXMmn2d0/PhxKioqIrPZTE1NTUK2SrbmaX4+bezr59esWUPvv/8+
j3Fq39/Mvn37ZH8v2DHPmTNHei+++OILys7OptOnT/O5cGVlZULeBzbnrbS0
lE6ePEk7d+6kefPmSTGuXLmSTCaT7O9FoFiSXSLlvz7OyBcdjvacTnO0kUeU
z0XV9LU//B6Oiy+hbktgX48AAADoryMvj/LGXMz7SdMjj4oOBwAC2Noj5dIY
avJmN3Wm+gnU3H3D8uXScdd++qnyO+Q1wSY4uR/yZcd/L4ok+jZV+Vg0hOVS
7PmkJUuW8DyTlnV2dvL7D1l+zj4PrLa2VpbXXbt2rZRPYvc3trRo+z7Yb7/9
dkDMSuQCA8WEtTlS273j22rR4WhHndHRPm57UfHd9XR0SPf+s2tCAAAA4FB6
/wO8jzRefgVZi4tFhwMAAW7SplPSGGr90TNunzswd/+IShGK13bkqJT3Kn/u
OXV37qwm2NIb++W/riaqOaluTIKwWl4sZ8JyX+xeR1/CclUZGRk8/sTERK9y
djU1NZScnMxfi+WSGhsbZYxUeWxu3uzZs3n8bL4ejFxndw/d/ule3m5HvJ9B
5Q3K3lPrM76MdbSRzRWK767hiy+kvoHVwAQAAACbqkmTpD6yeYtvnbcDgP8a
+/kBPob649vbKbfKdU3g0gfO5+4jLidrUWDk7nva2qjojjtsdYyv/yt1mc1i
AmE1wb76F9GyW4bOBUvvG++Zc+Tfp9VCZos26mkfOHCA50rY/X1nzrjP0WoZ
q/1uz9+N5jja29ul+wfZXC9f1draSsuXL+fHsXnzZtHh+KTj5U3SdYtHFxlE
hyPegVmONrFQr8oui269lfcNFRNeU2V/AAAAo9Vbkk0teercI9C4Zo2U96qZ
MVOVfQIAeKKwppXC393Bx1D/mOe8LvDA3P0WlSMUh41p7MfdmpkpJgjzCaLs
6URf/HVo3su+ZbxO1CLHPAcrGdMTKSYynMJ10RQbG026qDhKNdkey0nSUXis
OuNKO1YfneVIWE17ix/U02H3bdrzeGfPjmydiVWrVvHfzRT1XZSZvT4/q1EG
I7fSUCblv6ZuC+B1BIr0jrbwgDrn2Jb0TVLf0HbkiCr7BAAAGLFzldS2bAIV
XRpOBe+dUHx37Tk5Uv9Y9uSTiu8PAGCk0o9XSmOotzYOvIeucU1qv9z9DEER
qq9+0WLH+l3z56sfgKWc6Ggy0Zp7XOe8+m/ZiUTdXszTshopJSacgoMjKF7f
b36bOZViohIoPSWaQoOCKSpFvfwTu1dwRt93juVHWO10f2G/f5OtfegpVh+L
/Q6ro+8vWI2ypKQkflxs3U4YOdZe29tu1o4HnJa+Y16qs7WBXz6h2m5LH4qx
ndc/EavaPgEAADzRm5NK1QkTqHzcnVR4czSV3HyZ7R6W95RdI7q377y9+J57
+L7yr4mkzjM4twMAbWLzBuxjKDafgGnPORGQufuz+w9Ix33mpZfUD6D7HNGJ
FUSZk4kOzSU6usC25W+xbUU7iSqP2raGItv4j2093aPbn9VIyVGhFBQURjHp
Q+/rNCVF9j0W1LdFUJKKS/R99dVXfjsvKCUlhR+bJ2setrW18bUiWc38rq4u
FaJTj9Fo5O9Dampgrdsgp3vm7eft9oXv7uDzeAPK9hcd+f+6PFV2ebavPXKs
+avuPFgAAIDh9Fae6OurDlNHST319v277b3rVcl9VU6c6OgfMzIU3RcAgLce
WWSQ8l/flNRR8T3/6Je79906SyPR3dhIhTffwo+78Ja/UXdTk+iQFGYlQ0IE
BQcFUUh0KjmtaKaPpRCW+wqLp8GVhawmA6WnJlNSYiIlpaSSPsdMclQJYzWh
WF0sNi/IHxUXF/Ocz4oVK4Z9rr5vfM2eazD4Z10n+72chYWFokPxSaxOI6vX
yNrtsZ8fFB2Oetj1AHve6/R61XZ75p/jef9QfNfdqu0TAABgtNTIfTWkLJPy
XrWzZyu2HwAAubD1wti6YWwMdcvEtXTywjEBl7s/M/5Fqe0+ezAAxpE5iRTB
53SFU4KLkvnGxAg+7yskRt8vr2Wi1Lgoio5PJn2OicwWMxmzkig6NJhCIuMo
3cv5YadOnRrxfYEiFBQU0OOPP+70sS+//JLnrVyx53yGW6tx1qxZ9PHHH3sV
pxrCwsJc1vBn74Urhw8fRt17L7F1eu3XLdj6vX6v/IAj75X5nmq77cjNlfqH
xlWrVdsvAADAaCmd+2o7dFjqG8vj4hTZBwCAEnZ8Wy2NoZ5+eHJA5e7r5n0m
td31S5aIDkcFFkqPCbHdzxieQM5TX2ZK0QX3PSeYdP1qfbF8WKgukQyDyn9Z
9bEU2vd6wRGJZPQish07dvB8yHD17Wtqaig2NpYuu+wy+vWvf0233347v59Q
DSzvZbsXNIg++uijAY+tX7+e//y73/2uy/yXPedz6NAhl/tg90Sy52zxYI0J
tnYiO372Plx66aX0xBNPUFVV1cgOapTs7wP7HAbnv+69917+mKscIcNye3Ll
90R+J0SavPm01HavPVIuOhzlWJuJVt9ty3utvY+oq0O1XVe9+65t/HDdX4h6
e1XbLwAAwGgpmfvqaW2lotujbK9/w43UVVsr+z4AAJTS1jceT4iOl8ZQS/aX
iA5JFa179kh5r4rXXhcdjjosqRQdbMtZhMW5uJ/Omk4xIbZaX4lSMstMybrz
vxc/6PfMyaTjeZBIr2qDLVq0iBYvXuz2OQcPHqRf/epXdNttt9GNN97I5x2F
hobyfBPLtyiN5XLsOZ/++S973su+jR8/3unvNzU18bzWypUrXe5j165d/Dms
LpY748aNox/84Ad05ZVX0uWXX06//OUv+Xvzox/9SPF1IVmui+WZnOW/7Hkv
tv3kJz9x+Rost+dp/TN3RH8nRHsw+SBvt//w1jY6VdksOhxl7H7LMeerUr01
Frtqahz3c8ydq9p+AQAAvKFk7qsi/lWpb2zdu1f21wcAUEr/3P1Dz82W8l+G
kgbRoSmqs7qaCv5i6xeK7/w79bS3iw5JFVZ7Ha+gEIrRu6jSZYjj87iCwuIG
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
mY05lGM0ktFo4jWmTCb230Z+P5pJ4PC4u+9zXL58Oc+VpKSkUFVVlbhgRonN
1WI5K3YMGRkZo34dVh+MvcZo82dakJ6ezuOfM2cO1dRobN5RgDAU10vXLZ5a
Ovp1n2TT1dfArB1ry3utuquvOWoWFkrjmjXS+X7HqVPC4gAAABDBsnGj1A9W
T/lQdDgAACOiZO7+VKWFLvj/7N15WFRXmj9wZ3rmN8zuzPP0jP/MPOllekjM
QtKdqFnJojHGJCQmEbOJmcSYNnZsNS1kcUmiElciRjGK4A5KFFFkiQKiIC4I
IgrIVrLv+1Kyvb86p6hTgBTrvffU8v08z31ioOre997Sc+9565z3eIbzPtSb
fomK7nu0Sry8xHk3REbKDgdG6fjx4zxn8s0331BcXBzPiVk7NtbLVKtLqbUM
Wb0w07xJlhPMy8tTIFL1Xb58mY8PZHHv3buXmpqsK1fuaPzP5on81/ooyfNo
Y5ebx3wVnJMaSu7Lr/B7RsHHH0uNAwAAQGutGRmUMf5efh/UvfW27HAAAIZF
i9x98KUC0YdaGXZdlWMMV/WeveK8KzahVrG9YGOdNmzYwPMnK1eupGPHjvF1
IFtbW2WHJpSVlfE8z8GDB0XOi63RyOYsKoXV/zLNBTXt/9y5c3wcVWennHXx
+mJzGfPz8/k4ty1btohYT58+LTs06LYoOFW03RHXJNW1uh5izntdGvr6D2po
MPxdNd03GuPjpcYCAACgtfzX3+D3wMwHHyR9bq7scAAAhqx37v4tVY+17Fi6
6EMdvlyo6rEG03zpsui/FMydKzUWUB7L7bBxXxs3bhT5FLatWrWKz6NjNaRk
bCyer7/+uldM7OdpaWmqXQs25ss0H7Tnxuriy7oOP/zwg5jfadpWr17Nx+3V
1SlfDw5Grq2jk57fdIa32y4ro6mgulnbACozzXmv8E+0PXY/bs2Zw+8b+W/O
lB0KAACApkqWLRP9p/rjJ2SHAwAwLPlvdOfuXR4kfY76ufsZ2xJ4H+q3n5+k
GyVy6rV0NjdTzgvT+HnffPwJai9TaMFBsEoFBQV8LcgDBw7Qjz/+yMeEsbyL
jI3N5/P396dDhw5RYmIiX9NRK82Gv/cpKSn0008/8Zpovr6+0q4Dm4+5bds2
Pq/xxIkTdrMupb1KKagV31u8vcPSwq4qOephzHsFPEVUX6Ttsftovpwsnvnr
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
uGarwm9QY0ysubbk6dOywwMAABiyltSr4h52a84c2eHAaOl8aKKTccyW09TA
wWvb90tPoabc15iJ5GMnJe+Liop4fsjf3192KKoICwvj53flyhXZoYAGqnbs
FG135datssMZktCUYtGH8jqSNqJ9VGzyEeddvWePwhECgL1z//E8b4Ne25qg
7YGPehjzXgFPEdVrnHcbJdZem9ruSzNn8/Y379XXZIcFAAAwZF1tbZT78sv8
HpY1YSK12ckcMMelp0iPcd05q3HkETmSMV9MGfm5ds95HONC3nYy6ZGN9WK5
oays/tcsYr777jsNI1JWTU2Nork9e5kTao+aEhJE/qfwkwWywxkWNm7A1Idi
4wmGoyEySpx3saeXShECgD0LTysRbVD8zUptDpqw3jzmK9s61uEdLjZed8rc
raINrj10WHZIAAAAQ1a81NM8bjk6WnY4MFp1QTS1e8zXmHHzKG6kqS9KooV3
mXJfrpqu9Xj8+HHy8vKiadOm8f+ysUxKYWs6rlu3zuLvjec7pt/816uvvkp/
8zd/Q5GR2j2zsjUcFyxYQG+88QatWrWKrl8ffI28PXv28PxXff3I6yndvHmT
X4cHHnjgjvzX4cOH+e/ee++9Ee9/uFgNs9WrV/PrwK4Huy6OrKOmhrKfeZa3
29nPPkcdtbWyQxo2VjfG1Pdk9WSG4nZBAWU9MsE43uAVN+pqb1c5SgCwV5M3
nuHtz9w9l9U/WE6kOe+VYPkZxNqxOo2+U97lbXDS7yfJDgcAAGDIqgN3i7xX
xfffyw4HFFAXNLW7ztcYGusRSSNOfZX5keuYHjk0JYMcAMtrsGO6urrSr371
K/r1r3/N//+DDz4Y9b4LDP1mlhM6duxYv79n+S5T7qtv/ovlvUw//7d/+7dR
xzKY8vJynvv7z//8T5owYQK5uLiIa7F+/foB35uUlMTP89IoaiCNHTtWnG/P
/Jcp72XaEhLUny/yvaFt+sUvfsGvw8SJE+l///d/6V//9V/p2WefddhxaYXz
PxFtd1NiouxwRoStF/bAymje95zqE8/XExvMrdke5nXF0kY2XxIAgNmdqBP5
99GuvTGghmKiAFdj3uvobPWOo4G2oiLRBi999c98/V4AAABr13zhorh/Fcyb
JzscUISeIt1NOQsnmjqKAvX6UHca253fcHILogH3pNdRpF8QZY440Wbk4+ND
48aNo3feeadXfoVtbLzVkiVLRrV/VgOL5YRSUlIsvqa//FfPvNc///M/U3x8
/KjiGIq3336b5//++7//+45rwbaff/7Z4ntLS0v5eZ48eXLEx2c5JZbz6pn/
8vPz6xXDRx99NOL9DxXLrbFjvfjii3dcg3/8x3+k559/XvUYrE3llh9E211l
43XrIq6Vir7nokOpA762zPs78zyb4GCNIgQAe9XZ1UUPfh09qtqDQ3LyE/OY
r0rbXoe5fN063gan33MvjV90mF+74EsFssMCAACwqLOxkXKen8rvXzeffIra
KypkhwSKyCRvFyVqdLGaYQPn0PT6OirLTKJQv4Xk5uzE50X6jXJe5H/8x3/Q
H//4x35zPWz767/+a2ofxRynM2fO8JxQTk7OgK/rm//SOu919epVfrzf/e53
Fq/Fgw8+aPH9TU1N/DyDR5kf6Jv/0jrvxbz++uv0m9/8xuJ1YOPB4uK0GpUo
X2NMjMj/FC0eXS7YWqyPyhL5L/9zef2+pi4sTJx36fIVGkcIAPZqY7S5/Slv
GOUXeP25vN2c97pu27WxOltbKfOh3/N2uGzVKnrTL5Fft195hlN6sR0tBg4A
AHalaOGfRT+i8cwZ2eGAYpJonqlGl5MbhY70MU4fSe5jB6gZpo8j76lTyc1j
IfkEBdFClzGjzn3l5eXx4z3yyCMW8xxs+/3vf08vv/zyiDY2Z47Nl2NjhQZ7
7T333HNH3u2xxx4b8bGHs7G81t///d8PeB1YPAPtw9nZmc+THG0skydPpn/4
h3/odez/+q//0uQ6sI2N7fqnf/qnAa/FZ599NvK/eDakrbSUbj72OG+3c6e9
SJ0tLbJDUsycgIui/5mUV93rd/rsbMp4wIWfd/6bMyVFCAD2qKJBL9qeDdGW
18AZkYIEc94rdrmy+5agetcu0Xe4bXhmy61oovHLIvm1m775LHXJDhAAAKCP
qu0/intXpZ+f7HBAUUk0b5w5Z5U0wr2UBZpqhjmRi89gg8fKyG+icrkvS3P8
sGGztM2ePXvkf/FsSMEHH4q2uzk5WXY4imLjLSasOsX7UK7rYqlRbx7fme8+
i59zxn33k36A9VkBAEbi8yPXeNvjsjKaOjoVyuDo64kOvGTMewW/RtTeqsx+
JcqZPNk45njRYvGzsKvFIne4NOSqxOgAAAB6azp71jxf5k+fyg4HFNdjzuNd
C0eY+0qlhc7d+3D2pKRBx44pk/tifvnLX94x3qrvNn36dF4PbCTblClT6P77
7+fjiQZ6HRvXZDoem1PX8/gPPfTQiI8/1K2/2lZ9NzYWy9L7Z86cyc/ziSee
GFUcTz75ZK9j/t3f/Z34M6v3/9prr6l+LVgu9G//9m8HvBa7d+8e3V88G1C+
caNou2v27pMdjipiMstFH2r+/iv8Z6UrvxbnXRcaKjlCALBHGSX1ou0JTMhX
ZqenvMxjvopHvu6MtagLPWb+7qXPOjreERni+u1J1EmKEAAAwKy9qoqyXZ/m
962cyVOoo17FNW1AEj2Fmmrdj3WnyBHMecz0mWgc8+XkTAsHT3yRkrmvjYb+
/b//+79bzHGwnNRo6n2lpqbyOlis5r0lbm5u4nisvherETbQ+o9qefPNN+lf
/uVfLF6Lr7/+2uJ7r127xs8zMjJyxMfvu54jq+/VX/37oqKiER9jKM6ePTtg
3ovl4Ebzd8IW1EdEiD5HyedfyA5HVb4x2aIPtdH3qDjvstVrZIcGAHbso72X
ebvz3AYF6kem7TfnvVJ2jX5/ViB/pjtvi9lau/151/+CaLuTdTUaRwcAANBb
4cd/NH9nkzTS2XBg7eqCTPMV+6l1r8+kUO955O7mRh6e/azLmOlDE53Ye8fR
1MChfnenXO6LmTt3br85jn/913+l7OzsUe27rKyM54RYXseSvnkvk575r8cf
f3xUcQxFcXExr33G1rfsey2effbZAd/L6vGz82Q180eqb97LpG/+i63DqLa1
a9daHPsWGxur+vFluq3TUeYfHubtdt6rrxF1dsoOSXUf70sWfai9T7xCunff
kx0SANi5s9mVot05cbVk5DsqSzPnvSIXKRegRD3njDRERvX7mqLaFnroG+Oa
mZM3nqHWtg6NowQAADCq2Owr7lvVAQGywzFoJCqPI8r6ybAZ7qMlOiLcJpWh
jxP17l16Jr/q4mjhVDfyjtRRHempLM6TpnoEkUhXlYWSB3/fWHL1TqKhDxlT
NvfFBAUF8fX92Hy3++67j+fDWluVqZWxZcsWWrVqlcXfs7FSf/VXf9Ur72XC
8l8s71VXp916Rizv8+ijj/Ixb2wO41Dm9/n7+/Pc12ivWd+8l4kp/7V169ZR
7X84Ll++TO+99x799re/5XX83d3dFfs7Yc1Y3oe33c53U2t6uuxwNFHXpKdJ
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
9qy5zxEZJSUGLbE6jaxeI7vmrH4jAADIUx24W9yDKr7/XnY4ykAtLwCwc4Xz
PxFtd1Pine3a/P3Joo8Tm1kuIUJ1sHECpvNuSXOs+X9svbAHVkbxz5StI8bW
EwMAG5Kw3vxMmh0pJYQZ2xJ5GzJz+3kpxy/843zefue+9JKU48vA1uk13Y/Z
+r0AAKC95osXRR+i4KN5ssMZPdTyAgAHULnlB9F2V/n79/uahtZ2cl0Xy5+1
J6w+ZTXr2o9Gmfd34rxrg4NlhyNFxLVS0YdadChVdjgAMFQ5keZn04R10sLo
WT/wfK62a6K03rgh2vCaAwc0PbZsK8Oui+sefKlAdjgAAA6ls7GRcp6fyu8/
N598itorKmSHNDKo5QUADqQxJkb0HYoWLxnwtaxfY3rWfj/wokYRqqMuLEyc
d+nyFbLDkWp9VJb4XP3P5ckOBwAG01BMFODaXXdjtuxoxPcibHywlkq++srY
73j0MU2Pay3e9DOOufuVZzilF9fJDgcAwGEULfyz6Ec0njkjO5zhQy0vAHAw
baWldPOxx43zRaa9SJ0tLYO+x/9snsiTbIjO0iBK5emzsynjARd+3vlvzpQd
jlWYE3BRfK5JedWywwGAgZz8xPycWpkhOxra2eO+cFOj+uvt5eXmGiu+vpoc
09rkVjbR+GWR/LpP33yWumQHBADgAKq2/yjuP5V+2qytrJiBankVopYXANiv
gg8+NK8Lnzz07+sXBaeKfk5keqmKEaoj330WP+eM++4nfZZt5u+UxuawTlh1
in+mbAxHo95xav4D2JTL283PqtcPy46Gu93eSfcuj9S0/lSFj4+4f7VXaTvX
0pocv1os7sdLQ67KDgcAwK71XF+l6E+fyg5n6FDLCwAcWPnGjeY6KXv3Deu9
tzs66flNZ/iztsvKaCqoaVYpSuWVrvxanHddaKjscKxKTGa56EPN339FdjgA
0FdBgvmZNXa57Gh6+S4ig7cdv/YKp5rm26oei63Ha1qft3TFSlWPZQu8u689
2/Yk6mSHAwBgl9j3LNmuT/N7T87kKdRRXy87pIHxWl7BqOUFAA6tPiJC5H9K
Pv9iRPtIKagVz9pv70hSOEJ11B4+LM67bPUa2eFYJd+YbPG5bo3N6fc1pXWt
GkcFAKQ3PGMfeMn43Br8muEh3Lr+HRbXtoi2Y/Ppm6oeq3rPXtGWY+yu0bv+
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
NurFelNPro2h+pa2Ue+zYpOP6BtV79mjQJRgTcpCPch5rAt5BMZRalIgebiM
o4neqZrGYO3tpaO1V1evXqUtW7aI8zx06BClpKTwa9DR0d/Dk7bY3wn2d4ON
w+uZKz1w4AAVFjr2uqjTvo/n7f+cgKHlZosXLzGu2fvscypHBo7G2tsRkAvt
uH2oC3QjVx+NaqU7XC0vCxqPG87Zy0Ley6Ajmeh4P2O87sDqfU0i2jmLSLnh
EnasjpL8PMhl7Bga5+pJoZbGd9UlkbfrWBozZiy5eieRA2Rief/I1IazflJJ
CWo+DIbNcTp58qS4bqdPj6xeLxDFZVWI7/4/3pc8qn01REaJvFexl5dCEYLV
SPUmF6cxdNfCJMP/lFGo+zhDWz2Gxjh7klbZL1tsL+25vYqOjhbnFRUVRc3N
zbJDGhTrJx08eJDHvHLlSkpLS5MdkjQHLtwS7f/VwoGfuG7n55vXLtnpr1GE
4AhssR0BudCO2yI9RXpMJE+1HxgdtZZXf9h6jSEeRDnJxuvSdysx/D5lgeHa
9FPbq68bhtdtn2J5bUgwE/msceTqHUeDjujSx9FC5zE8/zU10L7X0WR9INZu
r1q1im7csM+aImq6fv06bd26lV/Dn376SXY4NmtrbI7o/2yJGdl899sFBZT1
yATeL8p7xY262tsVjhLkqqMgN+P3Eh6RekM7HUruTmN47musW5Am31PYentp
b+1VUFAQP5cff/yRbt68KTucYWN9JdZnYudw5swZ2eFI88iqU7ztX3J44HUs
y1av4e07W2+rE7kJUIittyMgF9pxW5JECyd6UKRaw/MduZZXfzquER2ddGcO
sL8tcZD5w4WriQJmDbA2JAi6UPJwdjKO4/LJHPL83rogNxrLxhM4TaVAO53+
eOHCBTEPprS0VHY4Nqu1tVV89xMRESE7HJs1f3+yyH/FZg6t9ktPt2Z7iDEB
Lfj+zf7UBZEby3U5uVIgT3TpSRfpQ57eQZSqQeLLXtpLe2mv2LoC7BwOHz5s
0/OR2NiBzZs383Nh86scke/pbNH2F9W29PuazoYGyrjvft6+l3+3VuMIYdjq
QmmeizM5O49gc/GgUI0mXdhLOwJyoR23Ed21vpRtXrq6a3m96bi1vCxJmTW0
vNf2SUQ5A6z7yPJewYv7r5EPvZWFkvtdbFyAEzkvjBve33U2pmCscUyBs+qD
I7XHvtsy1e6sqsKkWSX4+/vza8rqpMLwNbS2k+u6WN7/mbD6FJU3DP2LmTLv
70TeqzY4WMUoQZo4Dxqn8fxGE3tsL225vYqPj+ex77GTen5s3uy3337Lz4nV
knM0tc1t9BuvcN72e0dk9Puaqu3bRRvfVoDaOtauLnAqOY0xPkM7jXMht4U+
FBgaR0mpqZRp+Duu67VlUug85+7XO5GLZ5ImdajtrR0BuRy9HbcFqtX6urTN
cWt5qY3lvVgtsF5pryyiFAebOzokmeQz0cl433XxNvzfcJWR30TjfXvMiN5v
3djYBdY+s7qNoIzq6mpat24dH/tcX18vOxybdD63Snz//37g0Gof1x0LE32i
0uUrVI4QZMn0djG2526h2q7PQ/bZXtpqe1VRUcE/i++//57XMbMXbD4qOy+W
k3REy4+l83b/3uWRpG/vvOP32a5PG+s4Ll0qIToYHjY/3TjfYuLCUNIN0mDr
gtyM32sYtrs8IgevS6IAe21HQC5Hb8etm4q1vpoqHLOWl9ryVxPFRt253mPj
AaKzuNZ9pXq6dH+HdBctTBpJT0nffe82znsMsqMhi2yte9Y2s9rHoKxLly7x
axseHi47FJvlfzZP5L82RA88/1ufnU0ZD7jwPlH+mzM1ihC0p6fQ7vbYxVvb
byLsub20xfbqyJEjPGZ7rCt89OhRfm6pqfY31nww2eWNot3fEZ/X63e1ISHm
+ewOeG1sjj6U3MYObfxWXdw8cu6u2zhuaiBpNVrGntsRkMuR23G59FRXN1CL
Y6nWl+F98pfnhr7yVxDtnEJ0fG6fzYPogCvRNdT96kXnQxO776VOhnvpyL5D
Mve1xoyZSFoth6qFDRs20DfffIPvulTi5+fH73tsXAWMzKLgVNEPiky3XFsp
330W7w+xOjD6rEHqJIINSyXP7vVH3FUrUto/e28vTe2VLczlLC4u5rGy9eXt
EfsM2Plt2bJFdihSfHLgCm/zn1ob2+vneTNm8Ha+4IMP5QQGw6KPdKdxLp6U
OkhTrU/1pondtUWcJnrTiL6mHgHTmC97bUdALkdvx7Wnp8xAD5rq6kbubi40
ztmN/PprfPqr9VUWZKyN5GTo59vbBC9bxsZ17RyoPpgrka2UPqi4QZR1nKhT
zXqSbExj97r3Y8YZ1wMbkTLyc+2e8zjGhTQeasDrEbPayuy/SsrLyxvwe35W
12bs2LG8bmNfrBboe++9p2g8Q1FZWSnluzn22X/33Xf9/u6NN96gyMjIfn93
+fJlfo3Pnz+veEzsOrDnNnt3u6OTnt90hveDXFZGU0HNnWt6la78WowFqAsN
lRAlqKoslOa5TqSJEw2by13GtUfGOBmea1yMPzNsrt7q1qpiNe2HMy5KVlvF
1mx85513+v3dsmXL+NxGS9Rqr9Roq2JjY3ms6enpFl/D2u3+xuhlZmbydpvl
z7Q03Hu5aTyK1nFag6S8avGdx9ErRfxnjTGxop1vOH1acoQ2prWW6Opeww21
QcOD6inOw5ncBpssoQskt3Hdz9jOHhSp4dwK03jXgdoRxhbbc7WwvgPbtGar
7bkjt+NaKwtyJ9d5kd05rTjyGMtqHfncUauI1SDsW+urZ11CrecUgAOJX010
0E29HFhdEE3tHvM1Ztw8ihvx90hJtPAuU+7LVbO1HjMyMmjatGndxzVuU6dO
HfQePVQsXzNQ3RrTMR944IFe+S+W9zL9Tqv814kTJ+h3v/udOK6TkxPNnz9f
8Xxgf3pe/775r1dffZX//G/+5m8oISHhjvc2NDTwa7x7925FYmlvb6cFCxbQ
3//934uY/ud//oevT2TPUgpqRT/o7R29cxy1hr+Ppv4QW/ce7FEd6TJT+byB
1EB3Yz2YsW4UmNr9M8OmU7m/ZOojDVbnS2ZbxeZXmI7bt7/E+kmm31nqLynZ
XvXXVv32t79VrK368ccfeay3b/e/1o/pmH/913/dq7/E+kksDva7Bx98UJFY
BjPSe/m1a9f4OcbFxWkSp7Vx//E8b/Nf22q8txZ8OJe383mvviY5MhuVE0UU
4Ep0ebtGOTDDs7NLf/OKeqiLpHnO3fMqxhnadI3nVYSEhAzYjthye640Hx8f
+o//+A9x3F/+8pe0ceNGTY5ty+25o7fjmqkLJfeJC81jRk05ACd36v2NuIVa
X/pM8nMda7fr2oGV6DDca0K617xUIQdWF2TO4Y71iBx5TeQyP3Id0yOHpliE
lrG29Re/+AXNmDGDHn74YdG+/r//9//4f5VYN/eHH36gNWv6zxWwXBfLefXN
f/XMe7Ft3rx5o45jMGzdHXasF154gf7lX/5FHPvf/u3faPz48aofn+W7+st/
mfJebPvnf/7nfnNfzK5du/h9T4k1s9n4lj/84Q987e+ez2Lsv6wvaM/2JelE
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
+voBf3fVsXTR/7XpVI6KUYJ2Op5bhsmt9dWVu+RLd8lXbF45O4eNGzdSeXm5
7HDsduXKFb6Wmrv0q9qD5X7zO4/yNWusfmZzYo7I8Rll1tfnAxlMNUb43PQh
XuQzM5byDAbev95tKy2lvFQdRYeH0Ex/n87PD7H6DK4ld8kjIBfyuBPKCyW/
wAhtx6EUpxAd/7B7Hxjbjs/v+J37zBsAV2WgcL8hvDa9eEdlzCNdaCD5eHmR
f3jf47UNySHk789qifX+nVE3k3yDXGPOr3kdXradPn1adjguh9WM+Pzzz12u
Zo4zyp/xpmj/NFy4MOjvT99+QbSNkrIwL8bllOooPCSUws21GDrr3HsHRDvN
GtSuni/dLV8dPXqUn0tISAjFx8fLDmfQdDodj5+tNXDt2jXZ4UhTHhoqcn9r
pfXc3dzaTvcujOX5/ZMD1zWOEGwqDSc/r85+rEFvXlLmO/bk6nkE5EIed06G
cP+O9r2kWkRsrBcb87Xlse59YKgJBlIZKcLfS9yDvby9O8drszUigim1j45i
Y2oo+bG1JLyH0tChXTdv8vY27XO0lovWOIjVfTHPf2HjAdj7C+hbTk6OqAHE
Nrb+M9iv/CtL26dqxw679lFRZ6RHlsXzttETX5ygmsYWhaME9egpxLezPdQ5
5rY03K8jJw+jmTrnmj3uivnSnfPVhQsXxHnt3LmT8vKc/97Lrv/XX3/NY16z
Zg0VFhbKDkmaO62tlD5yFM/9JYs+7fOzy2NMa/veNf8w3W5o1ihC8ASumEdA
LuRxZ2ak2KCB1S5SVWujqfYXqwHWtQ/MI2uC1RGV6YjS93ZscUTFHTlW4+VY
gCg12Kf3eyhvPwrtq+OLdDRzaH/vsrwpMNa52mv9aWhoEOvesO2LL76g/fv3
85+xZ4CqqipqamryyI2N12f3tLS0NH49zPc689pvpaWus8aBM2Jr2Zv7vYrm
z3doX7r0cjH2662dqAvjMowRFODVOWcmOLnjqYX1hXnR0MBop1yH2pnzpSfm
K1arOjIyUpwna4ewc2fXgF0Ldk1k/Xuwv4Vbt25RTEwM7du3j5YvXy7iPHbs
GP+MJ6va8a3I/8b09D4/W1TdKPL71/EZGkUInsKZ8wg2uRvyuKtJpjl+GtX6
GihPrglWHE4U+SLR8aVElzv+d8Jsom0d57/tZaJraKtpyhBLM30tY7+8fYMo
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
/nVT8qdPF+2nCW+spd+sSZQdEgC4uboTCSLv1DpSj6Aqk2jTSFP/16GZygUo
UXJOlWg/7L9UaPUzxsxM0j/gy69f7uQpGkcIAADQXWNzG41bqeP3ruGfH6Ni
Q5PskEBxegrxVaJGF6sZ1lcfmpFSwwLJPzCYwnV6yjMYqDQ1moL9vMlrqB8F
6+zrAfvXf/1X+sMf/mC1r4dt/+///T9q1aBmas/+L6X6vZhbt27xvq/jx4/b
/MyVK1f48f73f//X5rV48MEHHYpjIHr2fw2m34tZt24dfTHQdbJs+O1vf0t3
3323zevAxoPpdFqNSpQjQV8m2h2zdqXIDkdVZStXifbnyeXrxHl/sBc1YwBA
PflvzDDVZn9hkuM7S9tvmft4fp3j+3MCgd+c5bn4xfXWx3rnBr7Mrx9bI9OY
nq5xdAAAAL1dyL0t2hKvbj0nOxxQXDLNNNfo8gqgaHsnPBpjKdDbds0wY/JM
GjYsgMJSe/SJmWuNeQ++PlhOTg4/3siRI232c7Dt/vvv52N91N569juxfjcW
m6P7HTNmDO/LYXP3bH3m3nvvpb/+67/u8zqweLS4Dk8++WSvWH7yk58M6Lv3
3XcfP9fx48fbffwf/ehHfHxXX9fivffes/MP3XWsPWFZa35dQpbscFRRcyRG
9HsVL1jAf7bsSJo47x1nsdgsACiv8coVS42q76KU2enJxZb+r7yTyuxTosNX
i22uG1+yeLG4fob9fY9pBwAA0FL4mVxx/1oe40GL93mEZJo51NJnlWznXkrD
zTXDvMg3tPffiD7E13QM31Dq3hrVU7CPffMtzX1ftub4YcNma3vttdfs/Et3
LW/tTBG5W5deLjscRTXn5ZF++AjLuIt2y3pi0zafE+edcuu2xCgBwB0VBc/n
uSfjySeV22l7K9F3k019XzsnEDW6fu4av+pkr3WzqqOiRL9X6dJlEqMDAACw
7r2oK6ItcehK/2vNgavoMudx2Bw7+75SaY5P5z58ginZytgxY2o4Bfn5UWBY
ao9a+ua+N28Kih38oLN/+Zd/oV/84hd99nOw2luvv/66qtt//dd/ieOxOXVd
jz9ixAiH9j1lyhQ+X9Hf39/mZwICAvrt72FjodS+DmPHju12zL/6q78S//sf
//Ef+bn09f1HHnmEj5VzJIZhw4bRX/7lX/Z5LbZv327XX7qrqWlsoSe+OMHz
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
bt0q5DywjeXgVq5cOeB3xPJxGRkZbo8J8zVtJ09Jea+qt99Wd+f73rLkvlbd
T9SkbF3IkbD13q3Xy03Z+M4PAAD+p3/f8azCfUcAADkZGtvprqlpvP16Ij6T
unqUmw9VE/uh1H+6lpam2H6ccb7mKq/bwo77+YSTQmPxNkZNNIUEjKExY9gW
QMERcZSq78uBmfSUHBVGEQl6sUEKVFxcTJ999hnPpcyYMYP279+vWF7JHWze
n06no5SUFCn3w3JRra3yrWPHjt363nPnzqXs7GxqamqS7f3lUlVVxXNeLCfH
Yp03bx7PXQJRt8lEJePH83a75NePUbfavz9TBdHaRyz5r91/UXffdvwlKVe6
XgIAAPibAX3Hxcr2HQEA5HagsFbK30/cplNkH00bNkh5ryuL4hXZh6u2nq6U
jnvqnguiw/EKLO8VGhpNCVodGQzZlBrf++8gSx4sMCiIAgMCKTQum+yNBvMH
OTk5Uq7nwIEDsuaRlFRRUUEbN27kcS9evJgq3RyTee3aNVq/fj1/v4SEBDp/
3nvWxmPzQGfPns1jTxOco/cEVe+8K7XdbVmC6tsW77fNfTy1UEwMfY7o66Xr
Rtp5hWr9AwAAeLD9/fuOKcr0HQEAlPKpRi+1YeuyymV97/bTp6W+U+Ubb8r6
3u5i69Vbjzslr0p0OB7OTHqNhvSDpzOaDaRJiKWYmFhK0BrIX2c7snFD1jFD
njjOyxmZmZlS7o6NXxsNNq7LOn5qj0pruMqtoaGBVq1aJY2F81cNKz6T2u7G
1avFBpM115b/KhNbb+uZZVl+tV4wAAD4qh6qrrxCe/MqaFNeDR0ru0rV1517
5YC+44lyRaMEAJBb1NpcqQ3LuSzPvJaetjYqDX+C952KH3mUuurrZXlfOf3p
s5P8mG/9aD9drL0qOhzwQgUFBTxPwuY6NjY2ig7HLefOnZNyeK4eC1tDktXx
Yq9n46e8GVuPc+HChfxY0tP9r7Z561GtlPeqfv990eFY7HzJkvta/1hvgOLG
XLH7JNZrZZ6hWVgcAAAAo9VwqYheX36K/rb3Mm2/cIUOna2gaYkZdNukdJqw
s4bKnFj+p3/fMbfc82paAAA4Yrx6ne6bmc7br8fma6nN7P6aZ6zPZO0/sb6U
Jyqpb6U7Pj7Ij5vdzwdwhcFgkNYMrKvzjTlQ1rmbq10c67Nz507+uoMHDyoU
mbpYzXs2Z5MdU15enuhwVMPuUbB7FazdZvcu2D0Mj3Dlgm3s18G/Cw1lXFwG
v2bEJJ8RGgcAAICrrpWdo4gNFXbyW110aLOlL3jnyt7HR3ifusF9x06slw0A
3iOjyFbL5J3NBW69F5sjY817sbkzniz1TI103B/uLBQdDngRa52sixcvig5F
VtY5fydPOrcWBJvnyZ7/6aefKhyZuurr6/n6j2wMGBvX5g/Y3HRr283mrHuU
88m2/Fe+uHmYn2lLpWuGodFDcoMAAAAj6qDE5QfotpmZ9HpWC3UOfrjsHN3L
r29p9PqFkXNZcvYdAQDUtiSjWGrD2Pf70WA1ka19J1Yr2RvM3n9ROu6N2QbR
4Xg+s4mMJn+t7mVRVFTkszWh2DqQc+bM4XMfOzuHfDMaYt26dfxcsLr5vubI
kSP82I4dOyY6FMWxtUisbTdbo8QjZUy25b+qsoWEwMZFB0+2jBeesc+38t4A
AODLrtA/plr6Oz+eqqMh32yulNITff2hcQedqwXTv++YMMq+IwCAKG9+nie1
YZnFDS69trupiUp+/RjvO5WMH0/dJu9Z9e/Pq7Ol4z5T2SI6HA9kJn1qHEWG
BlNwWARFRUVQWHg0JRssj+niwyg4SiM6SNVY8z21tbWiQ1EEq9nFji9rhPX9
SktL+fPYnEdf1NXVxcezxcXFiQ5FUdfS0qS8V03sh6LDcexGG9GWCEvua8uz
RJ1ixl3N3Ge5X3L75IPUKkONAAAAAOV10bGdWrrtXwfosZ1X6Nrgh2sv0Li+
vlBEVofT7+pO3xEAQKSW9hv08Nwjlpx/XAY1tY087sOq6u23pf5T28lTCkYp
v8rmdgqZdogf9+8WHaPO7h7RIXkOs56SIoMpICCEYjRG28+NyRQZHkupSREU
NCaAwpM8K9dZVlZG27dvp6VLl46Yw3FFa2srz/ckJSU5fM6OHTvopZdesvvY
J598ovr8QHb87Dyw88HyVSNpa2vjx8hyfMM5cOAAfx47146MGTOGP28wvV5P
zz//PNXU1IwYj1zYWpQajYbmzp3L/8v+PRJWw4wdozPnzRt1VlbSpfsf4O32
5Wcj6GaXh+dyqrNtY78yJgkJwdDY7vYYaQAAAE/SkH2q79qWSYlXnH9dS3vn
qPuOAACiZZU0SN/rX9/gXJ3nhmXLpLxXY2KiwhEq4+D5Oum439+qEx2OZzDr
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
9yNOnDhBf/rTn+jWW2+ln/zkJ/THP/5R1lq3w7VbO3bs4O3SSy+9NOSxTz75
hD/G5rWoZcqUKTRu3Dj6+te/zv/78ccfq7ZvT7qOufqZQLsN3s5sSKao4AAK
CI6mVINtwJdJG01hEZEUHsj+PkMp3qB+bGwdPvb3tXfv3hGf683fxVk+a6Sc
lsFgcOpcKPldfCS+8F3cmd8FAIBS9HEhfdeUsRTj7BBfczJFBIaQk6kyt7z8
8sv01a9+lYKDg+m2226jW265hf7zP/+T/v3f/13x9VfYNdZ6vR18zWXXWuvP
/+M//kPROBhWw/n73/8+Pfroo/SrX/2KfvjDH9J//dd/0Ze//GWaMGGC2++/
Zs0afs13NK8kMDBQOt7+11zrtda6sX6N0tz5TLA1q2fPnq14jDA6PTdv0lOL
j/Pc151T0qi8oU10SMPLWWpZB0HJHJhZTwnhQbyNjkwdOjLAEB/a9/cXIqTv
5MjixYt5XCzHcdddd/Hvxt/+9rf5z+bNmyfLPoZrt77whS9I7VL//Jc172Xd
lMZqxoSGhvK26qGHHuJtN9u+853vUEhICO97KsmTrmOj/Uyg3QavZUiiiKDe
v7GgCEoe0nybKDkiwPI3GBRNKt1OHoDNFXdmfVxv/y7O8lnsOFl+y5H09PQR
z4XS38VH4gvfxZ35XQAAKMNICWF9bWVgJGmcrj+QTdFje6/jCtcrYPcTWLt6
xx13DGjT2fZv//Zv9N///d/KBkD2r7n9r7Xf+ta3+NgDpbG+0zPPPMPvbQ0+
F+xny5cvd+v92fiHpUuXOnycXV/Zdbb/NTchIWFAHG+++aZbMTjD3c8E+37A
rrmsnil4psJqE43tG/s1YeUp0eEMj9WDO/SBbS3Q3a8RnUsmam+QaQdmyo4N
oYDez3dgRLL9OTGaKMs89LExNPj2hcmgpeSEOIqLi6ekZA1lG9QZF1ZUVERf
/OIX6amnnhryd2rd8vLy3N7PcO3WgQMHeJvQP/81OO/lbrvpjHfeeYfuvfde
+t73vjfkHHzlK1+hyMhIxWPwhOuYO58Ja7vd1ubhuXCA/sw6igthuS02Jtf+
jEZdbDD/7AdEpJKIEmCXL1/mf1tsHT5HfOG7uHWuXWFhocPnWNuZ4c6F0t/F
R+IL38Wd+V0AACjCnEqRgZa2KiA8iZzvFWVTdKjy96jYONrbb7/d4fdk9j1a
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
QrQ0NUdLa1uc6W6LfF11s6+UOaWavlIZRxpbt26NkydPVnQcPHgw1q1b9697
pyxqMT5/x44dZb/H7t27Y9WqVWXXYfny5RVfhzTm7vOaGan2cs+ePVW5//r1
67Oaz3Jrkc50LObFixdZ9nXjxo0qPcEAAABAxU12RHPuWybQ2FqimnGqO1rq
v/X6aisVbE39/TlVzL7WrFkTa9euLZtzGMb3o6WlpejzND4+nmVfvb29VXqC
AQAAgEqbmunjVVcfLT3Fa+riTms0pGsaW0v3+qpB9tXU1DTvHp9U+7Z69eqK
jlTPV+zeqbd72o+10M9fsWJF1re91PsrV66MJUuWlF2HpUuXVnwd0kg9x4rd
v9z8F3MsW7Ys+67l1uLIkSNFn6fHjx9n2Vd/f3+VnmAAAACg0v5/fmM+CkWb
3M/t9dUdJdKxmmRf6Vy+lHWUyjjSe5U+s+/7vvY7d+4s2v9+Ibq6urJMZnKy
9CkCqfYz1TWWWott27YtaA4/orm5efZ+KQ9MPf7nzuH78x8rYSHPxMDAQLbO
Q0NDFZ8nAAAAUB2z2VdDa/QVvWIiCvmUG6ReXyXCsaQG2Veyffv27Py+YjlH
6sNVSZ2dnf+430xf+2LnPy5EX19flsk8evSo5DWpj3w6z7HY/q9UGzo9Pb2g
Ocxnbr+zlHvdvHkze/37/veVPucx+dlnYiZjfPv2bcXnCAAAAFTHZEdz5OrK
ZFaTZ6Ip6wdWptdXUqPsKzlx4kRs2LAhq3VLNXfp7ytXrlTl3t/nXjPm5l+p
B/tCpCwmZTIpmylndHQ0tmzZktVIpgws1UKm/V6Vzr2Snp6ef+VeM2byr3TW
ZLm9a4vpZ56Jtra2aG9vr8r8AAAAgCqZKEQ+ZVaNfxXp5TUR3S0Ns/vCSvb6
SmqYfdVaOoOxmNevXy/aPqeUyaTzCb98+bIon1cJ6bumzKnUe9XKvX7G8PBw
li+mDA8AAAD4nUxFX2tj1NVtjL2Dc18eiY5d+djUmJu/11d2/Z+bfVVDqmlM
2cy1a9dqPZXf0qlTp7L1ffPmTa2nAgAAACy2qbHo2LUx6hubYm/hTBT27oqm
fHO09Q3+3eurLvKlGuHPfobsq9IOHz4c+/bty/aTsXju37+f5V4XL16s9VQA
AACACpqaHIk7Pd3Rc2cksuq0qe5vedZ8vb6ya2VflXbv3r0so0lnGbI4Uo64
f//+LFP88OFDracDAAAAVNOd1mgoewbkHLKvqrh8+XKWf3V3d9d6Kv957969
i2PHjmXr+eDBg1pPBwAAAKiykbZNWb1jrnmeXl+J7Ktqzp49m+U1Fy5c+KV7
3//KXr58GUePHs3Wsa9v3mQXAAAA+O1M/Hivr+zyQuTrSp0XyWKanp6Ozs7O
LLcpFArx9OnTWk/pP6W/vz9buzRu375d6+kAAAAAtTBWiHzW66sx/ioVZk10
RGs+H/n85tjUWB/1uVzkcvXRsHHz19e+vt58JAZL/CsL19vbO5vhnDt3Lp49
e1brKf2yPn/+HJcuXYrjx49n63XgwIEYGhqq9bQAAACAqhqJQsvm2LRpYzTk
vu35ymoeGzZ+fW1z7Or4gf1fVNWrV6/i/PnzsxnYoUOHoqurK65fvx53796N
q1evxvDw8B83Uq6V9nelfHCmRnRm9PT0xKdPn2r90wEAAABVNxUTI4MxODIS
IyNjMTaWRvp7JAYHB2Ns3qZf1Mrz58+zTKe9vf0fOY/xbZw+fTpu3boV79+/
r/VPBQAAAMACpHxndHQ0Hj58mO19+hPHwMBAPHnyJMbHx+Pjx4+1/kkAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAr7H6JxqV8=

    "], {{0, 724.}, {1215., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Comments" -> <|
       "Software" -> "gnome-screenshot", "Creation Time" -> 
        DateObject[{2024, 4, 1, 22, 12, 30.}, "Instant", "Gregorian", 1.]|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{499.04999999999995`, Automatic},
  ImageSizeRaw->{1215., 724.},
  PlotRange->{{0, 1215.}, {0, 724.}}]], "Output",
 CellChangeTimes->{
  3.918612002706232*^9, {3.919139856086874*^9, 3.919139882133462*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"e7b0f25c-9389-4e46-8d3c-9f5bde681940"]
}, Open  ]],

Cell[TextData[{
 "The first step of the tree correspond to the  growth of the tubing so I \
guess ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["i", "j"], TraditionalForm]],ExpressionUUID->
  "3acafb16-ed26-4584-9fa0-a2a1e176efee"],
 " means activate site i and grow in towards ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "cd9b4da8-96c1-4cec-9bc7-6c7ddf01dc9f"],
 " . The symbol ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["2", "2"], TraditionalForm]],ExpressionUUID->
  "dd242e98-e54b-4af7-892e-5a9e4b54b739"],
 " correspond to growth towards both directions"
}], "Text",
 CellChangeTimes->{{3.918573761937607*^9, 3.918573769321496*^9}, {
  3.91857602060411*^9, 
  3.918576109952278*^9}},ExpressionUUID->"21fecbc4-e33d-48d2-a8d1-\
c9601f738627"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
EDhG7dg0faLpEu3ztz160AhabI2eOg43eGzYu+66S+655x656KKLFE2Wk5Mj
7dq1C7stdEmoPHBEtX8rKiqkQ4cOUWuUA55rEPfu7okTg953f370UbnCc83e
4hnXyzzjeeFPfyo/81xLt3iu53hpE2gSrz654w4/XaK1b4OsnSBvxrcPPNjq
WLEOiZxw4cC8w+mnny4lJSVy6623ys88zyloFPzmiBEjwm6PODGj64tYL/E9
NugTX12C9sQTTxjapxYPoidH8rPPPiv5Hr33y1/+Uq644grlvsWz6rbbbgu7
rZZHORY5z3xpjjUpChxrUmeXSmcL761am1S6dOoYQgghaQvsG2gGPesl0CVn
n3mm33sY7fjjjpNxffuG3H5DebliRxmNOWmpTzAn6KtLjNr+8NfQoxngf3Oa
R3c99thjrY73OM/xYo4yFJoGiqT2tK8+gY1x1llnef/7rbfeMrw/+Gzo0QxY
L4EugfZqNcbHHy9ffvllyO01DRSPeIB0AnY2fNwQgwO7dty4cRHFd7tXrJDl
V10d9J4b1r27nOsZS6yVtBzPE3/0Iyn32LRx0yceTaL9FtZJfH97zAcfBJ/D
sFplxY03tTrWWbNm6dIMd3p00VNPPaWsL7Y8ZmiWvXv3hh0b5LIwCvSI72/h
2aT9/eSTTxren5Y7LJxmGDlypOTm5vo9F71jfOKJrdabW6JpIOQZiB3+sSaB
ZoFqywqllDqEEEIyHtiMLXNHuVeulFV33BnW1oAfV9tbbmn1/tMafEZG9uwZ
tA364x+l13nny8g+fZT5YiOtV69eyvy97+9hbrBfv36G9wX/pE6dOil1KEN9
r9yjpS699FLFJg92zGPGjAm5D+iInp5jN9pHtEcffbTV7/3+97+PaF+VlZXK
Wku470EDFhQUBD3ecHO/WhxPtHW2cZ1iXSudG2xZaBOtaRrFSE28/YsWy6pf
FQW9Z1/wXC/3FxUFHU/MM4S6Z6NtNwbQRP8qLQ25zYCHHlaeEw6Pze17bULL
feDRNKGu3yFDhii/8ZOf/CTg8f7gBz9Q7utQ+3j//feVda1I7rN//OMfrX4T
cxiR7AvPNjynRrY4Dy3bgw8+KDfeeGPQMYZPWyi09d3Yxt6FiTVprBJLnkWq
GPROCCEZz/jx45WclL6461YodZnDaRPEl5yXmxv0HciW/g3xNqHQ5nqjzXcK
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
FFVo9qxbXNZcz3nMlmK7r3oIFmvilpqyPMkuqBA91fnqXTaPLWKXmgSIR8RW
6bEXHn/8cbn77rvlRz/6kd87Eu20006THj16hNxeezdG4m/ua5v85Cc/idwm
8YBYTD2aAe9YHCuOueXxov30pz8Nub323kCNMqO0tE2isUkA1moTOcaR5l0n
rcG7aejQod762L169ZLJkyeHfVcZAfdEJj0DZNexWJNZ74W0NZZM+8xzrD+U
u4tuCfwMOPcnoe2Vxlr1d6Z1MdzFdHwGUJs0g/cCdIl2Xw8YMEDxATZiG+Ic
B9UMPkQ7ppp9jDrDrRh6n7oGGeQe8NUnZ5x+qvfvazy6ZO03k+KiEaK+b2Oo
T045+aTwugTtk4c9Ou8PrU4vaismcowjijlpskuRdz7dEZF2aLQVHetvjpS0
zNPlrhV7qUWKPba11VoixQV5kldYotSSp04RqSm3ijdcxO2UEvjWZReLnzQJ
EGvi/SePtskticQPL77s3btXZs2aFfZ78Pe+9dZbg74v8e+dOnUK2v75z3/K
M888I2+++WbI7wVrbdq08fu9a6+9NqL9/Pvf/1b6gTWRUN975JFH5MILLwx6
vMq8yBtvhNzHX/7yF3nxxRcj6ieeNS1/7/e//31E+3rhhRfk2WefDfu9s88+
22/OpWXDsy8UWhxPtHP7sF3hX8umtrFjxyq+hZodg9azZ0+ZNGlSTDRKpj0D
OpW/IJ0e/pl0euG30um1l4K2Rx68Ry48/6ehnwEe2yvUPjr9Lk86WW/lM0CM
aRPY3Wbfd/Fuw4YN87unfTWKHl9gzRcz3PM22vv2P//5j3Lf4v5t9e+W86TT
n34V8h4ouvUmv987+6wcaffCn0LfN1G0mNy3UbSX/vp7Of20U/1+756iW0Nv
99T10umxNq3OL+LpcO5xbcTzvtX8PCJ6n9SUSd6x3ymojCRev1HsWtxDTok4
/GzqWqm0WKSy1n8NwFV2rJa8Tc9sf+aANRT4c+V4NKLf0kaIuiZNVR7dZ0u+
CB9ck3PmzAn7vQsuuECJuQh1v7Old7vmmmtCXiPaHE+0eQ7xzm35zs709sEH
HwT8/O233466dha0CZ8BbPF+BnTo0MGQNjH7nktEwzpooM/79u0b9jmqaZOD
Bw+G/B7vW7Zw963mTxLRu8RZoubnysqOrDZJo8277tLSn6vJbpECq0ON8fbF
7RJrbpa6PpB8ZrVJNInDkiOB1p7qKoLVNXGL01osEUnKOIPn37Rp08J+Dz4V
l156adBr/5JLLlF8HYM1bH/XXXdJSUlJyO+1bPh+bm6u93dOPvlk79/nn3++
oX2hYS4S/fjNb34T8nv33Xef/OAHPwh6vMcdd1zY38LvPPjgg4b7WFhYGPR3
b7vtNsP7+/Wvf63Mm4T7Hs4n4mmC/fbTTz8d8hrR6rqFe1eGA+/c0aNHsx1r
yK311ltv+dku8Af56quvYpIXLdOeAU89+pA8ddNZ8tS9P5enHnkgaLuv7S/D
PwNCbK80/M5dV/MZ4GHIkCG652WhTcy+7+LdoD9aahLEFWENM5wPj3aO9MQI
RHvfPvroo8p9+9vf/rb1v9/yU3mq6PKg13/+5Zd4fyf7xGZ/I8R+PHBPUfj7
J4IWk/s2wlbc9jbPcZ7o/S34lml/I74m6La3XSBP/TKv1fmFnYJz/9hjj8X1
vt25c2dwv71wuKzKXH1WVq5EUpqktjxf7WdOa53hKlWf+/mt5vzdUmXJVvRQ
Kx+wTMXrz2UR/1PSGLyuSaNdLBZ7UuZF0/RyuBgBzKsGu+7POOMMpR56KLR6
6UZwu93Kfan9juZb/tBDD3k/w99GwDsT/YBfdDjwTD7llFMCHjOeB6HAXPTX
EdQ4wZq+7+/At7yl73lVVZWhfcK3OVnHmIQG+ZU+/vhjr+0Cv2FoEsxPxwot
Fj4Zr494PAPE3aTGgUzpGNZ//NGH7vXzGfd7BnhsipDbr5nYXJPOAHwGpD+o
KQG/TO2+7t+/v25NoqHFNIaLEYh2TLX6GrBfWzHa8x4c9UTA6//l0j96f+ea
/7lC1tZOktd94k8uvuj8uMXCR3XfRtiG9nlbzvnJ2d7fQXzJshnjlOPUPnv9
lWcDb2+/Q+SLv7c6vdAKiRxjI9efF28ce45YjWqTRi33cLYU2VpP3jc5S6Ww
oEjKW9WYb9YmrCN/jNpj49AyB7PbocSatNYfTeIsLZby2uQ8f8gZolcvjxgx
QskF4TsncdJJJwXMw9+S2bNny7x58wz3r6VNoqHZJphDNAr8eZH/OxzQF4g7
0XJ0ae32228PG8+r1Uk2Og+B3KC+NokGbBHtc+R4MYKRvpgxxiQ4yFetaRLk
houlJtHIxGeAVP0mqE3l2/aunS+PeOwcLdeP9xlQeIMc2rQ49PbzP1S1ybeh
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
rJSK0mIpKCiSUnstfb8IISkNci9q7/7q6mqzu2MaeNehTiUhxBxqa2uVGqgt
NYlv+/LLLxXtEQqsAcOeDLfOcu6558p1110X0G5FO+uss8RisQRtDz74oOIj
dO+994b8XrDWpk0bv9879dRTI96X0n51nVgKcsRy7+1iua9tq3btVW3kzJzT
gx4v2j133Bpw21i0tr8slOzsE/1+78o2l4beru2N6jHdfYvfsd5zzz3KuX/o
oYdCnpMTTzzRT/u1bLfeemvIawT+BRHHwztL1PxcWdmR1SZptHnXXVr7c9VJ
ZVGhlLWolVJvL/L8ZrYUVNQKIYSkMrAJtHc/aqRlIna7PSY1FQghxoD9h3kR
5ObAMwhz2ZWVlUqcAO5LrJfg33F/IvZ5z549IfenaZNA+Yl9ufLKKyU3Nzek
rc6W3g0xKKHAOh2uJdTrMYzLKjnK7+RKJKVJasvz1X7mFLfOPVxXIQX4t7wy
8VMt9ZVSGOhzQghJQaZNm+bVJ/Pnzze7OwmH2oQQc4Ddh5iNcJpDL3p9uqxW
qxJzEMxuxbw8coUEa6gr+be//U06deoU8nuB2q9+9Svv72C9RPv77LPPlvLy
csP7U9q//izdH7tAur/m+f9O5a3aa2V/DWmnn3D88QG3i0V75bk/ymmnnuL9
rZNPyvb+fXfRLcG3ffl36jF1+pffsbZv314599Cxoc7JTTfdpJzTYMf8/PPP
h7xGNJ+uiNbUvXHsOWI1qk0atdzD2VJkC+AP5q6VSkuhFJU6/PMKa5olv1zq
jPeYEEKSjvHjx3v1SSR5O1MZahNiFojdZqxT7NBi4cPVn4e9eeaZZypx0S1t
VmiWcFpJqx3e1GTMu//ll1/2/o4WX/L666/7/XZEsfANM9TYjPl9g8ZvtC//
e1C/rg7l8cnVNbTP23LOT5r1AeJLls0Yp8S+aJ+9/sqzgbef/IZ6TN/7x3sg
/iORYxxO5wbGJaW56m8V2VtfI+7GWqmpqZXGVst7jeIoUdfzci1VYiRSpd5W
qPh0FVZSmRBC0ocRI0Yo2gRzgklXVyyOUJsQs0AuIczPktiBexl2ZTiQ5+n2
22/32qs/+MEPlDxZyAMVDtS9QP0Lo7TUJRqaPkF8RETa5MghtZb6F38PqRWQ
jwtx71o/TvzRj6Tz62Vxi4P3zSH81r+b49599clzT5cE3v7jB0RGlbQ6VM1v
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
Kuq6xpVqtK6mCDbaVuNHe6K7bdO6brPtLie21YaVqnwaATEgQvADhg8hVAUq
CBEQhmhgQD7ChxIE7CioAaOkijhY67N53nDHyWRm7r2TOzMJ+f/OeY8wmXvn
3iGv93nufd/nlSseXCE/qV4tk/27ZEfThyk5V+dC0hRYIL6aWmloCkX9rKX1
d7ApI0cFAOicZcuWmfFdjz76aDhP2b59u6t9bN68WYLBoOP3a8yieZFe27Wt
XbvW7EM/V+sbb9261cQ81s/1+q9xUHeNcz799FPZtWtX+Hw0jtNYZtu2bbJz
505z3rpGpsY41nv07915HsULrfnG9Y+8HI5rvj92pZRMWSO/fWqD3Dm3QX7+
5Fr54YSXwj//zv8tNjnMYZc5CrlJetF309t393xwSAY/uyXcT8790xK5cVK9
/Of0V0xer+2uNLVfz1wvP5m8Wi4dtTx8PD9r7cdrdjd7cq7uNIm/PF+ys7Nb
W5ZkZedJYblP/MEmaQr6pbq0UEp8zq9JAIDM0Lhi6dKlUlVVJWPHjg3nItFN
x3ilwuHDh00cY91f1XwmulZYJOtepV7rdZv6+nrZt29fSo4tVXRuT11dnTl+
jdv279+fME7TZ1abNm0yMZ1uo/dpMz12xI33PgqZvEPjlvyhS6VyyXZ5fuu7
smVvS8xWv6tZxi9/3TxX0W36jVgmCzd3rG8dD7lJetB30993q/27wjnAb1pz
+plrgnH7Ubrb0+v3yHXjX5IzK9qeg/5ubkPS5+leSBoqi6W40i/mcUmoSQK+
MinMbc1RstrylOLqRol+kgIA6Lp2795t8g+tIxwrN5kxY4bnn6nX7UAgYK7Z
uob8Z5995mp7jQv0Hq1u7+YZTSZZ91v1PvL777/valuNBfU+tG6v96k//vjj
FB2ldza8+YFcNXqliVWGPveq+bubeGfSyl1mzIhuP3HFTkefSW6SevTd9Pfd
wfPanpXc9nhA5m3cm/FcJF5b2bjf5E16rDdNqpdgc3r+PxVqaYnxaos0NgRi
jO8CAHQXes3VmGPmzJntcpPKykrX1+NE9P6q3kvUpnFKsnR8xZYtW8w1v6vH
o1Zs8tprr3Xq3qmukan7Wb16tXzyySceHqG3Xn37b9J3yBI5p7XNWJ38/V19
jqLj2TXWGbd0h+3njhgxotvEu90RfTf9fVefQVjPIl59528Zzz+cNH0+qsdc
OGalvH/wcNLfGQAAFn2WouvGDxs2zOQnOn7DC3qPVeeO6jXa7Rz7eHR8he7v
3Xff9WR/XtuzZ485Pp0P7IXm5mazPx3n3hV9FPq7XPPwKslrjU2ea3jbk1in
5LE1JtbRsSOJaF7SlXO27oy+23lu+27V8tfN7/0987dmPN9w2x5d2TYGTcd0
AgDgFes+qa5p5wW9xuu1Wceee0VjJq0FpPNSQ6Gu9fxe6/To+eq4cy/t3bvX
7FfHmnQ1dz292cQkT7z0hmdxzivBD0w9oj6Dn5d3W8g9MoG+6w2nfXdD6++8
ie2nrpWtb2c+10im3fuXbeYcdA4ZAABdjd5r1Wuy27pfThw4cMDse8cO+3E/
6aTzX/W4Es0TTpZ1z/nQoUOe7ztZm946YGKRQXM2eh7nPLX2zfA9ZKQXfddb
Tvrur3zrzO+7f8f+jOcYnWlaf+/sIYul+SPGdgEAMkNr18Qal53qWNqKJbrK
PHErntPx6qncfyrixWRpLVONp1amKJ762ZGaX7v2ex8vIj76bmr2H6/v6jyr
7jqWK7pNXx005zJs4asefoNB8ZUUSEFBkq2wUgIeHg0AoGvTsdRavyeS5irW
fFIntF7nvHnzZNy4cY7XcWxpaTGf8dZbb7k+Zo1BzjrrrA6v69yFP/zhD+Z4
3NLvQI/H6fpruibCxIkTZc6cOY7vIet8Yl33LRlaX3Pu3LkdXn/yySdlzJgx
rvd36PBnklexSP571gZHMcvy9dvl4cdnyl33jZKpTy9ytE3NK2+ZOGfKqt1J
nXNPoHMkdBySV2uI0HftaS12rRmycOFCx3VDEvXd4YteM7/ny7fvi9kPtO+O
mTytw+tDx06U3w0ZnvJ8Y/6KgIysmiz3jR4vNUv8tu8f8JDf1OzzUqilSYLB
RglUF0mO1grOypaCCr80BoNm3GG4tf492NgggdoaqSotkFx9b06ppKYyPgCg
K/L5fOa6Hknr8uhrTtY00DXpTzzxRLniiivk5ptvlr59+5o/a91RO1oDJ5nx
4aYOfmu74YYbwq9pbHP11Veb1y+66CLX+9Rx9Dp32I5eP2+55Rbp06ePOV89
V/3M4cOH226rcZd+r27XdrPONzo/0bzEet1tfrJo8zuO55ncP2aCnNCrl1x0
SYEM/OENcuZZZ8u/XnKZzF60wnbbi4cvk5sn17s6tp5mwYIFMmHCBE9yFK2B
S9+NTb+X/Px8ufDCC+Wcc84xn/XNb35TZs+ebbttor6ra5NeN74ubl4S7qMR
+cnQhyaGX09lfnL7b++U4447Tq74/gD5Xms75phj5Iaf3CZrd74TdxurBrLW
7/Nai69Iss15F0i17VSokATK+0p23wrxproBAKA7iJWbaKygr2mck4jOuf/y
l79saoPl5eWFr7Vnn322iXPs6Hxdp/dqI2lcExnjRMY22m677TZX+9O15pzO
Vde85IILLpDS0lI59thjzefl5OSYGGfy5MkJt/3www+TqsOq+Uh0fhKZl2hb
tGiRq33qmA2NP+psxnM98eeFcmzrv/FvfjdYTvvW6eHPO6PPWa05yndsY6M7
Zrxi1nhDfNrPJk2aZPpRZ3MUHWdF3+1I56GcccYZ8uCDD7bru5qb6X91LZNE
4vXdAx9/mnA8l+Yj0fnJsIi8RNvE6XNTkpfcec9Qye93qdz34Ph2ffcrX/mq
/ODHN8bd7s/r95hzqlnn/rlYYiGpLclpO47WfMPRio/+Mskr8kmsFVEAAEen
WLmJxjdOxh5dd911ctlll5n7cpHXWm3HH3+8jBo1KuH21lgMuzgqlsgYp3fv
3knHNsqK53R8TSI6jkvjm+Li4g7na+UoiVjjbZKZRxydn3QmL1H/M3ujnH9v
rW1882/9r5ELL77ExLHRn3tc67/xoD/em3D7Pz7bVgdMY7hoWvepM2tQHE12
7txp8hJrnaKpU6ea9Yvczu3W99N3O9Kc5Mwzz5Qbb7wxZh/q169fwu3j9d0d
TR+a3+/RtY1x+0B0fpKOvETbV084Qf5r0F0x+67eb3i85rmY2+nYND2nh5d5
Xe8gIOV5bZ+fW+Ywr22okAKn7wUAHBVi5SY6btvJuI5TTz1VrrrqqrjXXY07
SkpK4jaNUfr372+eRSR6X7x22mmntfs8zRuS2c9NN91kjkNzjkTvu/jii805
xztfbddff33CfQwYMECuvfbapI7z8ssv7/B5V155ZVL7+la/AfKN/P5SdP1N
Cdvxx2fLP53y9bjne/GllyeMjx5sjdk0znnjvY5zAaZNm+Z4rQzNY5555pmj
uk2ZMqXdOqqROYret3dC523Tdzu2008/3TwPine+X/rSl2w/K1bfvfqHN8oJ
514p3736Rwn7UX6/S2L2Hbv+l2zT8VuaY/Y+NTfuOd90689j9tmNR+r3VTy7
xdHvnGPBKsnPaptrUrzAYQ3qQLkUVzKiCwB6kni5icZDds4777x29z1pPa+d
d8GFCXOTBxa3rTkdbO5Y00ljb6fj2zQ3iY7bj8am9RVivf7YY485qouluQl9
l+akFQ4sitln17zRVnfsTwu8rf/9xVyTwthzTRp9UlUbNXqroVqq/F1rLR0A
QGrFyk209mhdXZ3ttjpuO/r+Z2TT+o8PPPBA3Hb33XfLHXfcISNHjkz4vuim
88611o/1OSeddFL4z+eee66rfVn70+OoqKhI+L7f//73Ca/1Oj7G7rP0c7Qe
kdtj1LnK8T731ltvdb2/7906SHr3/6WUD74vYTvvX/LlhF4nxv3sn/789oS5
ibW2498+6Timy21uomOVjuamNd+icxKdV6RjCZ2u7a5juui7HZs+Xzn55JPj
nm+vXr2S6rsV9w6TnKtKZeAv7ozbh7R+RLzPva74Fts+mGw75eu9Ez7zvHto
Zcw++/yWtjoZk1Z6uVZs+7kmsZ6ENJQXSBl5CAD0eNOnT+8wp9XpXHitvxkZ
W0S23Nxc23kVen/X7XxaXY9ax1ZYn2ONUdexVNZr+mc3NO7V89V6P3Y0NrHm
z0a3QYMGJdzWGhsfDAZdHZ+O64n8HJ1fEj3/pKamxtU+Rz7fVve07vX3EuYW
L237q/Q68Wsxz/frvb8hC+sS1yAueGC5fHtw7LnwbnKTo53O5X7kkUfCOYnW
0HKTk1iczoXviX134MCBccdkjh07NuG28fruJ59+ZvrRb+LU4u447/3PMebH
T03JfJPJs56VY47M+Y9uZ/T5dty++1jdbnNO8zbudfVvkZjNXJOmGinOK5Ya
Jr0DQI+3efPmDtdbq/aNk7kAGluef/757a57Oidc4yo7L7/8svl8t6JjG4sV
42gdVLc2bNjgaCyMGjZsWIc5xDruXr+3RHQ9CP1edX0IN7Q+cGReYtF8xHpd
6zy5sfy1JhN/jFu6wzbGqV2zRc4659x253vi106SWc8tt932gvtekJ9OWR3z
GMhN2uha61rH1spJtD6v298Ri1X/m74b2+23327q6Eaes77Wmb572+MBUys7
1u+/1geOzEus1yPzkyGjHkpJbmLyjDkL5JTe32h3viefckrCvqu19fT/Dc0H
PXyGEZ5rkiX5ZT5TN1tbTY1PqivLpDAvW7IKqsW2rDAAoMdatWqVbNu2zfH7
dd0PraGrY1P0uYsdXSdAr/V797q/N6drDcRbB2H06NFJxXWan+nxOJ1zrLFM
bW2tzJo1y3F8rbVhNe5MhuYnsepxaX7iNi9RWh6r75AlZu12p3HOyk2vy5AH
xsn0+bXyyu7Y68xFthlr2taYnlIXe+1FcpM22md0LUD9/XPSd+zQdxPTvjt/
/nx5+umnPem7ukaQ/p6PWrw9bn4SmZd8kZ9MTWleEtkW12+S4Q9PctR384cu
lVsmJ/f/qXi+mGuSJ0Vl5VJefqSVlUpJYZ75Wd8KR1WFAQA9lK4r7eZ675au
s+xVLOYFHafvZj1tt6x4TtfF7irunLspPHYjFfGQxje6/z0fHIr5+eQmYtZI
1FzCy35A3/WWXd/de+CQ+T3XNUbTkWeksg19rm3do2n1f/XwG4yYa5JfGWOu
SVCqC/KEUsEAgESs8dVu7r861dzcbPa9e3fs++mZomPskxlz5URDQ4OJQZNZ
DyJVdu77yMQh//GE82cnTpt1L/nev8T//RkxYoTruTewR9/1lpO+O/pIrey7
n9mc8fwi2fbi9n1mzaNrx9vXUnAncq5JrLF3TVJdVCI1TIMHANjQ9eCSHbsR
j86H1fHsOn7Ebox3ulk1AHRebbLrcsdijTnpis8I7j9ynzTeeJRk2srG/fLd
kctMnNNyqGN9Lot+L13l3vvRhr7rDad99+Dhv8ulo5bLP99XK4u3vpvxPCOZ
dvOR55wLN7/t2ffX9iVac01ypCTmuiYBqSirYa4JAMCRjRs3mmuz1vXxgo7b
1v299957nuzPazqH2Mt7zjqWX/e3dau3awV4yRp7peM4OhvfbG5tP37kJbO/
BZu8rPMDt+i7neO279bvalsXZOC4VSY/z3Su4aYVjlkZXt/ea5HrmvhIQAAA
naT3I+vr6801+p133kl6P7pmitbT0f3s2bPHwyP03htvvGGOU+sQad2jZFm1
fdatW9fl7jNH2vPBx/LdEctMbDLmhcak45sXXm2SHzy8yuxn/ItdZ15NT0Xf
TX/fnbPuLfP7r/1pzro3M55z2DXNp6x7E799akPS31d8dnNNAABoT9cHsBsD
oePX169fb67VOq5bx3a4obV5rBhJ/9wdvPnmm+Z4165da+Yru3Hw4MHwfGQd
q96V5pjEs3v/QfnRhLbnHWWzNsiKRvs6XJFN77deOPSFtrpcq7rWXISejL6b
/r67tDVH1/GM2hf+d/ZG2zWEMtVGLHot3Gcrl2yXz12fqRN2c00AAGhvyZIl
ZqyGnc8//zx8zdY113StOF2XIR6916r3WHX8t3X/0auxJemicY3WDdXj1+9I
7z0nilX0/KzztWLB7uTTz/4hg+a01e46s+J5U8dr9tr49341BtM1HPuP9Ztt
rhy9wryGroW+m/6+29j0ofx6xnrTL75zz2JTq3vCi6+b/rE++EHa85CGPQdk
ZeM+M25Tn49cMnK5ObYB4/zyzIYUPguznWsCAEB7Pp/PXIud0phG7yda13C9
p6rjPXRMtsY/Ggfo/crIn3f1cSCJaFyn82Hr6urC56Sxmn4H27dvN+et96V1
frD1cx3vrnVNu6s1u5vl3x8PmNhFm653cM3Dq6TksTXyi6lrzXyS71W+2O7n
E1fsTNF9V3iFvpv+vqvPTH7lWyd9Bj8f7i/a9LnKBfe/kLYW+dna9Bnp43W7
zTpHqROShor8I2s+9pXyALkJAMCe29zEYt1b1XHder9R14nWGEDXZ9YYx+7e
bHek91b1fqrOMdZ6RVpXVOM3PX9d80HHvLgdM9OVBZs/NrWANU8Z8JDfjP84
Z8gSk5fcMPFluWf+VhN7oXuh76a/74b+/g9Tv6tq+etS8ewWk6/8clr6mj4D
1XFb+txE12NJpYbKAsnLzZXcnBzJzs6RnBxt2W1/1tdz86SomtrhAIDYks1N
gM7SuU6fp/bGLQAAALoRchNkyrRp00zdVwAAAECRmyBT7r///i65HiUAAAAy
w8pNdGyNk/E11vviNbZne6fbk5sAAAAg0owZM2TevHlm/qs2nSebiM4Ztd4b
q3X17RNtq81Od95ev5tE29qtX+H19uQmAAAAiNTU1CQjR46UESNGmKY1NxOZ
OXNmu/dHt66+faJttdnpztvrd5Noe/1u07293b8XAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAgDQItUhLKNMHAQAAAKCnC1YVSZk/00cBAAAA
oGdrEV9xsdS0ZPo4AAAAAPRooVopLaqSYKaPAwAAAEDPFiiXooqGTB8FAAAA
gB7OzDWpZSI8AAAAgEzSuSYlzDUBAAAAkFlmrkk1c00AAAAApFCLNPjKpbSk
RIqLSqTS39TxLR3mmoSk0VcqBQXFUtXAOC8AAAAAnRWShqpiKaluEM0wGivz
JSunSHxR6UmjWdckMgepldKcLMnKypKc0tp0HjAAAACAo1FjlRSV1IiVigTK
81rzjRxpn27EmmsSat20UHJac5Ps4hrhyQkAAACA5IXEX1Yg5QHr7w1S0Vef
heRLVeTEkrhzTRqlMj9bcssCHX4CAAAAAM41SnVppYRnkQTKJS+rNTcpiFpf
McG6JoGyPCnyUbwLAAAAgFf0GUquZGVlS2F1+8kmHeeafKG2tFAqG9NxfAAA
AAB6Br+U5WZJVnZh1Dz4ROuaBKS8qEJYKR4AAACAZ6zxXIXV0i41CS0wc01i
VBWWlgWlUsRDEwAAAAAeClYXmHrAfaPnlcSbaxIKSEVRmdQy1QQAAACAh4JV
bblJQXX7alyNlTrXJPrdLeIvL5ZyP4kJAAAAAG+F/GWS25qb5Jb6I9YqaYox
16RJ/BW6VmMja5oAAAAASIEmqSnOlazsAqkIHElGoueaNPmlqqRISn3kJQAA
AABSqUn8lSVSkJcnBSXlUlleJPlFlVLjq5KK0mIpLquS2iBZCQAAAID0CbUE
paY0X4oqF0itv0GCTC0BAAAAkBGJ1jUBAAAAgDQJ1UppcbUE7d8JAAAAAKkT
b10TAAAAAEijYFVxjHVNAAAAACCdQrKgrExqKckFAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAD3K/wNxztww
    "], {{0, 315.}, {807., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Comments" -> <|
       "Software" -> "gnome-screenshot", "Creation Time" -> 
        DateObject[{2024, 4, 1, 21, 40, 8.}, "Instant"]|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{532.5, Automatic},
  ImageSizeRaw->{807., 315.},
  PlotRange->{{0, 807.}, {0, 315.}}]], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"033e53a4-277d-48be-8a87-850c4eed2ee5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
EDhG7dg0faLpEu3ztz160AhabI2eOg43eGzYu+66S+655x656KKLFE2Wk5Mj
7dq1C7stdEmoPHBEtX8rKiqkQ4cOUWuUA55rEPfu7okTg953f370UbnCc83e
4hnXyzzjeeFPfyo/81xLt3iu53hpE2gSrz654w4/XaK1b4OsnSBvxrcPPNjq
WLEOiZxw4cC8w+mnny4lJSVy6623ys88zyloFPzmiBEjwm6PODGj64tYL/E9
NugTX12C9sQTTxjapxYPoidH8rPPPiv5Hr33y1/+Uq644grlvsWz6rbbbgu7
rZZHORY5z3xpjjUpChxrUmeXSmcL761am1S6dOoYQgghaQvsG2gGPesl0CVn
n3mm33sY7fjjjpNxffuG3H5DebliRxmNOWmpTzAn6KtLjNr+8NfQoxngf3Oa
R3c99thjrY73OM/xYo4yFJoGiqT2tK8+gY1x1llnef/7rbfeMrw/+Gzo0QxY
L4EugfZqNcbHHy9ffvllyO01DRSPeIB0AnY2fNwQgwO7dty4cRHFd7tXrJDl
V10d9J4b1r27nOsZS6yVtBzPE3/0Iyn32LRx0yceTaL9FtZJfH97zAcfBJ/D
sFplxY03tTrWWbNm6dIMd3p00VNPPaWsL7Y8ZmiWvXv3hh0b5LIwCvSI72/h
2aT9/eSTTxren5Y7LJxmGDlypOTm5vo9F71jfOKJrdabW6JpIOQZiB3+sSaB
ZoFqywqllDqEEEIyHtiMLXNHuVeulFV33BnW1oAfV9tbbmn1/tMafEZG9uwZ
tA364x+l13nny8g+fZT5YiOtV69eyvy97+9hbrBfv36G9wX/pE6dOil1KEN9
r9yjpS699FLFJg92zGPGjAm5D+iInp5jN9pHtEcffbTV7/3+97+PaF+VlZXK
Wku470EDFhQUBD3ecHO/WhxPtHW2cZ1iXSudG2xZaBOtaRrFSE28/YsWy6pf
FQW9Z1/wXC/3FxUFHU/MM4S6Z6NtNwbQRP8qLQ25zYCHHlaeEw6Pze17bULL
feDRNKGu3yFDhii/8ZOf/CTg8f7gBz9Q7utQ+3j//feVda1I7rN//OMfrX4T
cxiR7AvPNjynRrY4Dy3bgw8+KDfeeGPQMYZPWyi09d3Yxt6FiTVprBJLnkWq
GPROCCEZz/jx45WclL6461YodZnDaRPEl5yXmxv0HciW/g3xNqHQ5nqjzXcK
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
FFVo9qxbXNZcz3nMlmK7r3oIFmvilpqyPMkuqBA91fnqXTaPLWKXmgSIR8RW
6bEXHn/8cbn77rvlRz/6kd87Eu20006THj16hNxeezdG4m/ua5v85Cc/idwm
8YBYTD2aAe9YHCuOueXxov30pz8Nub323kCNMqO0tE2isUkA1moTOcaR5l0n
rcG7aejQod762L169ZLJkyeHfVcZAfdEJj0DZNexWJNZ74W0NZZM+8xzrD+U
u4tuCfwMOPcnoe2Vxlr1d6Z1MdzFdHwGUJs0g/cCdIl2Xw8YMEDxATZiG+Ic
B9UMPkQ7ppp9jDrDrRh6n7oGGeQe8NUnZ5x+qvfvazy6ZO03k+KiEaK+b2Oo
T045+aTwugTtk4c9Ou8PrU4vaismcowjijlpskuRdz7dEZF2aLQVHetvjpS0
zNPlrhV7qUWKPba11VoixQV5kldYotSSp04RqSm3ijdcxO2UEvjWZReLnzQJ
EGvi/SePtskticQPL77s3btXZs2aFfZ78Pe+9dZbg74v8e+dOnUK2v75z3/K
M888I2+++WbI7wVrbdq08fu9a6+9NqL9/Pvf/1b6gTWRUN975JFH5MILLwx6
vMq8yBtvhNzHX/7yF3nxxRcj6ieeNS1/7/e//31E+3rhhRfk2WefDfu9s88+
22/OpWXDsy8UWhxPtHP7sF3hX8umtrFjxyq+hZodg9azZ0+ZNGlSTDRKpj0D
OpW/IJ0e/pl0euG30um1l4K2Rx68Ry48/6ehnwEe2yvUPjr9Lk86WW/lM0CM
aRPY3Wbfd/Fuw4YN87unfTWKHl9gzRcz3PM22vv2P//5j3Lf4v5t9e+W86TT
n34V8h4ouvUmv987+6wcaffCn0LfN1G0mNy3UbSX/vp7Of20U/1+756iW0Nv
99T10umxNq3OL+LpcO5xbcTzvtX8PCJ6n9SUSd6x3ymojCRev1HsWtxDTok4
/GzqWqm0WKSy1n8NwFV2rJa8Tc9sf+aANRT4c+V4NKLf0kaIuiZNVR7dZ0u+
CB9ck3PmzAn7vQsuuECJuQh1v7Old7vmmmtCXiPaHE+0eQ7xzm35zs709sEH
HwT8/O233466dha0CZ8BbPF+BnTo0MGQNjH7nktEwzpooM/79u0b9jmqaZOD
Bw+G/B7vW7Zw963mTxLRu8RZoubnysqOrDZJo8277tLSn6vJbpECq0ON8fbF
7RJrbpa6PpB8ZrVJNInDkiOB1p7qKoLVNXGL01osEUnKOIPn37Rp08J+Dz4V
l156adBr/5JLLlF8HYM1bH/XXXdJSUlJyO+1bPh+bm6u93dOPvlk79/nn3++
oX2hYS4S/fjNb34T8nv33Xef/OAHPwh6vMcdd1zY38LvPPjgg4b7WFhYGPR3
b7vtNsP7+/Wvf63Mm4T7Hs4n4mmC/fbTTz8d8hrR6rqFe1eGA+/c0aNHsx1r
yK311ltv+dku8Af56quvYpIXLdOeAU89+pA8ddNZ8tS9P5enHnkgaLuv7S/D
PwNCbK80/M5dV/MZ4GHIkCG652WhTcy+7+LdoD9aahLEFWENM5wPj3aO9MQI
RHvfPvroo8p9+9vf/rb1v9/yU3mq6PKg13/+5Zd4fyf7xGZ/I8R+PHBPUfj7
J4IWk/s2wlbc9jbPcZ7o/S34lml/I74m6La3XSBP/TKv1fmFnYJz/9hjj8X1
vt25c2dwv71wuKzKXH1WVq5EUpqktjxf7WdOa53hKlWf+/mt5vzdUmXJVvRQ
Kx+wTMXrz2UR/1PSGLyuSaNdLBZ7UuZF0/RyuBgBzKsGu+7POOMMpR56KLR6
6UZwu93Kfan9juZb/tBDD3k/w99GwDsT/YBfdDjwTD7llFMCHjOeB6HAXPTX
EdQ4wZq+7+/At7yl73lVVZWhfcK3OVnHmIQG+ZU+/vhjr+0Cv2FoEsxPxwot
Fj4Zr494PAPE3aTGgUzpGNZ//NGH7vXzGfd7BnhsipDbr5nYXJPOAHwGpD+o
KQG/TO2+7t+/v25NoqHFNIaLEYh2TLX6GrBfWzHa8x4c9UTA6//l0j96f+ea
/7lC1tZOktd94k8uvuj8uMXCR3XfRtiG9nlbzvnJ2d7fQXzJshnjlOPUPnv9
lWcDb2+/Q+SLv7c6vdAKiRxjI9efF28ce45YjWqTRi33cLYU2VpP3jc5S6Ww
oEjKW9WYb9YmrCN/jNpj49AyB7PbocSatNYfTeIsLZby2uQ8f8gZolcvjxgx
QskF4TsncdJJJwXMw9+S2bNny7x58wz3r6VNoqHZJphDNAr8eZH/OxzQF4g7
0XJ0ae32228PG8+r1Uk2Og+B3KC+NokGbBHtc+R4MYKRvpgxxiQ4yFetaRLk
houlJtHIxGeAVP0mqE3l2/aunS+PeOwcLdeP9xlQeIMc2rQ49PbzP1S1ybeh
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
rJSK0mIpKCiSUnstfb8IISkNci9q7/7q6mqzu2MaeNehTiUhxBxqa2uVGqgt
NYlv+/LLLxXtEQqsAcOeDLfOcu6558p1110X0G5FO+uss8RisQRtDz74oOIj
dO+994b8XrDWpk0bv9879dRTI96X0n51nVgKcsRy7+1iua9tq3btVW3kzJzT
gx4v2j133Bpw21i0tr8slOzsE/1+78o2l4beru2N6jHdfYvfsd5zzz3KuX/o
oYdCnpMTTzzRT/u1bLfeemvIawT+BRHHwztL1PxcWdmR1SZptHnXXVr7c9VJ
ZVGhlLWolVJvL/L8ZrYUVNQKIYSkMrAJtHc/aqRlIna7PSY1FQghxoD9h3kR
5ObAMwhz2ZWVlUqcAO5LrJfg33F/IvZ5z549IfenaZNA+Yl9ufLKKyU3Nzek
rc6W3g0xKKHAOh2uJdTrMYzLKjnK7+RKJKVJasvz1X7mFLfOPVxXIQX4t7wy
8VMt9ZVSGOhzQghJQaZNm+bVJ/Pnzze7OwmH2oQQc4Ddh5iNcJpDL3p9uqxW
qxJzEMxuxbw8coUEa6gr+be//U06deoU8nuB2q9+9Svv72C9RPv77LPPlvLy
csP7U9q//izdH7tAur/m+f9O5a3aa2V/DWmnn3D88QG3i0V75bk/ymmnnuL9
rZNPyvb+fXfRLcG3ffl36jF1+pffsbZv314599Cxoc7JTTfdpJzTYMf8/PPP
h7xGNJ+uiNbUvXHsOWI1qk0atdzD2VJkC+AP5q6VSkuhFJU6/PMKa5olv1zq
jPeYEEKSjvHjx3v1SSR5O1MZahNiFojdZqxT7NBi4cPVn4e9eeaZZypx0S1t
VmiWcFpJqx3e1GTMu//ll1/2/o4WX/L666/7/XZEsfANM9TYjPl9g8ZvtC//
e1C/rg7l8cnVNbTP23LOT5r1AeJLls0Yp8S+aJ+9/sqzgbef/IZ6TN/7x3sg
/iORYxxO5wbGJaW56m8V2VtfI+7GWqmpqZXGVst7jeIoUdfzci1VYiRSpd5W
qPh0FVZSmRBC0ocRI0Yo2gRzgklXVyyOUJsQs0AuIczPktiBexl2ZTiQ5+n2
22/32qs/+MEPlDxZyAMVDtS9QP0Lo7TUJRqaPkF8RETa5MghtZb6F38PqRWQ
jwtx71o/TvzRj6Tz62Vxi4P3zSH81r+b49599clzT5cE3v7jB0RGlbQ6VM1v
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
Kuq6xpVqtK6mCDbaVuNHe6K7bdO6brPtLie21YaVqnwaATEgQvADhg8hVAUq
CBEQhmhgQD7ChxIE7CioAaOkijhY67N53nDHyWRm7r2TOzMJ+f/OeY8wmXvn
3iGv93nufd/nlSseXCE/qV4tk/27ZEfThyk5V+dC0hRYIL6aWmloCkX9rKX1
d7ApI0cFAOicZcuWmfFdjz76aDhP2b59u6t9bN68WYLBoOP3a8yieZFe27Wt
XbvW7EM/V+sbb9261cQ81s/1+q9xUHeNcz799FPZtWtX+Hw0jtNYZtu2bbJz
505z3rpGpsY41nv07915HsULrfnG9Y+8HI5rvj92pZRMWSO/fWqD3Dm3QX7+
5Fr54YSXwj//zv8tNjnMYZc5CrlJetF309t393xwSAY/uyXcT8790xK5cVK9
/Of0V0xer+2uNLVfz1wvP5m8Wi4dtTx8PD9r7cdrdjd7cq7uNIm/PF+ys7Nb
W5ZkZedJYblP/MEmaQr6pbq0UEp8zq9JAIDM0Lhi6dKlUlVVJWPHjg3nItFN
x3ilwuHDh00cY91f1XwmulZYJOtepV7rdZv6+nrZt29fSo4tVXRuT11dnTl+
jdv279+fME7TZ1abNm0yMZ1uo/dpMz12xI33PgqZvEPjlvyhS6VyyXZ5fuu7
smVvS8xWv6tZxi9/3TxX0W36jVgmCzd3rG8dD7lJetB30993q/27wjnAb1pz
+plrgnH7Ubrb0+v3yHXjX5IzK9qeg/5ubkPS5+leSBoqi6W40i/mcUmoSQK+
MinMbc1RstrylOLqRol+kgIA6Lp2795t8g+tIxwrN5kxY4bnn6nX7UAgYK7Z
uob8Z5995mp7jQv0Hq1u7+YZTSZZ91v1PvL777/valuNBfU+tG6v96k//vjj
FB2ldza8+YFcNXqliVWGPveq+bubeGfSyl1mzIhuP3HFTkefSW6SevTd9Pfd
wfPanpXc9nhA5m3cm/FcJF5b2bjf5E16rDdNqpdgc3r+PxVqaYnxaos0NgRi
jO8CAHQXes3VmGPmzJntcpPKykrX1+NE9P6q3kvUpnFKsnR8xZYtW8w1v6vH
o1Zs8tprr3Xq3qmukan7Wb16tXzyySceHqG3Xn37b9J3yBI5p7XNWJ38/V19
jqLj2TXWGbd0h+3njhgxotvEu90RfTf9fVefQVjPIl59528Zzz+cNH0+qsdc
OGalvH/wcNLfGQAAFn2WouvGDxs2zOQnOn7DC3qPVeeO6jXa7Rz7eHR8he7v
3Xff9WR/XtuzZ485Pp0P7IXm5mazPx3n3hV9FPq7XPPwKslrjU2ea3jbk1in
5LE1JtbRsSOJaF7SlXO27oy+23lu+27V8tfN7/0987dmPN9w2x5d2TYGTcd0
AgDgFes+qa5p5wW9xuu1Wceee0VjJq0FpPNSQ6Gu9fxe6/To+eq4cy/t3bvX
7FfHmnQ1dz292cQkT7z0hmdxzivBD0w9oj6Dn5d3W8g9MoG+6w2nfXdD6++8
ie2nrpWtb2c+10im3fuXbeYcdA4ZAABdjd5r1Wuy27pfThw4cMDse8cO+3E/
6aTzX/W4Es0TTpZ1z/nQoUOe7ztZm946YGKRQXM2eh7nPLX2zfA9ZKQXfddb
Tvrur3zrzO+7f8f+jOcYnWlaf+/sIYul+SPGdgEAMkNr18Qal53qWNqKJbrK
PHErntPx6qncfyrixWRpLVONp1amKJ762ZGaX7v2ex8vIj76bmr2H6/v6jyr
7jqWK7pNXx005zJs4asefoNB8ZUUSEFBkq2wUgIeHg0AoGvTsdRavyeS5irW
fFIntF7nvHnzZNy4cY7XcWxpaTGf8dZbb7k+Zo1BzjrrrA6v69yFP/zhD+Z4
3NLvQI/H6fpruibCxIkTZc6cOY7vIet8Yl33LRlaX3Pu3LkdXn/yySdlzJgx
rvd36PBnklexSP571gZHMcvy9dvl4cdnyl33jZKpTy9ytE3NK2+ZOGfKqt1J
nXNPoHMkdBySV2uI0HftaS12rRmycOFCx3VDEvXd4YteM7/ny7fvi9kPtO+O
mTytw+tDx06U3w0ZnvJ8Y/6KgIysmiz3jR4vNUv8tu8f8JDf1OzzUqilSYLB
RglUF0mO1grOypaCCr80BoNm3GG4tf492NgggdoaqSotkFx9b06ppKYyPgCg
K/L5fOa6Hknr8uhrTtY00DXpTzzxRLniiivk5ptvlr59+5o/a91RO1oDJ5nx
4aYOfmu74YYbwq9pbHP11Veb1y+66CLX+9Rx9Dp32I5eP2+55Rbp06ePOV89
V/3M4cOH226rcZd+r27XdrPONzo/0bzEet1tfrJo8zuO55ncP2aCnNCrl1x0
SYEM/OENcuZZZ8u/XnKZzF60wnbbi4cvk5sn17s6tp5mwYIFMmHCBE9yFK2B
S9+NTb+X/Px8ufDCC+Wcc84xn/XNb35TZs+ebbttor6ra5NeN74ubl4S7qMR
+cnQhyaGX09lfnL7b++U4447Tq74/gD5Xms75phj5Iaf3CZrd74TdxurBrLW
7/Nai69Iss15F0i17VSokATK+0p23wrxproBAKA7iJWbaKygr2mck4jOuf/y
l79saoPl5eWFr7Vnn322iXPs6Hxdp/dqI2lcExnjRMY22m677TZX+9O15pzO
Vde85IILLpDS0lI59thjzefl5OSYGGfy5MkJt/3www+TqsOq+Uh0fhKZl2hb
tGiRq33qmA2NP+psxnM98eeFcmzrv/FvfjdYTvvW6eHPO6PPWa05yndsY6M7
Zrxi1nhDfNrPJk2aZPpRZ3MUHWdF3+1I56GcccYZ8uCDD7bru5qb6X91LZNE
4vXdAx9/mnA8l+Yj0fnJsIi8RNvE6XNTkpfcec9Qye93qdz34Ph2ffcrX/mq
/ODHN8bd7s/r95hzqlnn/rlYYiGpLclpO47WfMPRio/+Mskr8kmsFVEAAEen
WLmJxjdOxh5dd911ctlll5n7cpHXWm3HH3+8jBo1KuH21lgMuzgqlsgYp3fv
3knHNsqK53R8TSI6jkvjm+Li4g7na+UoiVjjbZKZRxydn3QmL1H/M3ujnH9v
rW1882/9r5ELL77ExLHRn3tc67/xoD/em3D7Pz7bVgdMY7hoWvepM2tQHE12
7txp8hJrnaKpU6ea9Yvczu3W99N3O9Kc5Mwzz5Qbb7wxZh/q169fwu3j9d0d
TR+a3+/RtY1x+0B0fpKOvETbV084Qf5r0F0x+67eb3i85rmY2+nYND2nh5d5
Xe8gIOV5bZ+fW+Ywr22okAKn7wUAHBVi5SY6btvJuI5TTz1VrrrqqrjXXY07
SkpK4jaNUfr372+eRSR6X7x22mmntfs8zRuS2c9NN91kjkNzjkTvu/jii805
xztfbddff33CfQwYMECuvfbapI7z8ssv7/B5V155ZVL7+la/AfKN/P5SdP1N
Cdvxx2fLP53y9bjne/GllyeMjx5sjdk0znnjvY5zAaZNm+Z4rQzNY5555pmj
uk2ZMqXdOqqROYret3dC523Tdzu2008/3TwPine+X/rSl2w/K1bfvfqHN8oJ
514p3736Rwn7UX6/S2L2Hbv+l2zT8VuaY/Y+NTfuOd90689j9tmNR+r3VTy7
xdHvnGPBKsnPaptrUrzAYQ3qQLkUVzKiCwB6kni5icZDds4777x29z1pPa+d
d8GFCXOTBxa3rTkdbO5Y00ljb6fj2zQ3iY7bj8am9RVivf7YY485qouluQl9
l+akFQ4sitln17zRVnfsTwu8rf/9xVyTwthzTRp9UlUbNXqroVqq/F1rLR0A
QGrFyk209mhdXZ3ttjpuO/r+Z2TT+o8PPPBA3Hb33XfLHXfcISNHjkz4vuim
88611o/1OSeddFL4z+eee66rfVn70+OoqKhI+L7f//73Ca/1Oj7G7rP0c7Qe
kdtj1LnK8T731ltvdb2/7906SHr3/6WUD74vYTvvX/LlhF4nxv3sn/789oS5
ibW2498+6Timy21uomOVjuamNd+icxKdV6RjCZ2u7a5juui7HZs+Xzn55JPj
nm+vXr2S6rsV9w6TnKtKZeAv7ozbh7R+RLzPva74Fts+mGw75eu9Ez7zvHto
Zcw++/yWtjoZk1Z6uVZs+7kmsZ6ENJQXSBl5CAD0eNOnT+8wp9XpXHitvxkZ
W0S23Nxc23kVen/X7XxaXY9ax1ZYn2ONUdexVNZr+mc3NO7V89V6P3Y0NrHm
z0a3QYMGJdzWGhsfDAZdHZ+O64n8HJ1fEj3/pKamxtU+Rz7fVve07vX3EuYW
L237q/Q68Wsxz/frvb8hC+sS1yAueGC5fHtw7LnwbnKTo53O5X7kkUfCOYnW
0HKTk1iczoXviX134MCBccdkjh07NuG28fruJ59+ZvrRb+LU4u447/3PMebH
T03JfJPJs56VY47M+Y9uZ/T5dty++1jdbnNO8zbudfVvkZjNXJOmGinOK5Ya
Jr0DQI+3efPmDtdbq/aNk7kAGluef/757a57Oidc4yo7L7/8svl8t6JjG4sV
42gdVLc2bNjgaCyMGjZsWIc5xDruXr+3RHQ9CP1edX0IN7Q+cGReYtF8xHpd
6zy5sfy1JhN/jFu6wzbGqV2zRc4659x253vi106SWc8tt932gvtekJ9OWR3z
GMhN2uha61rH1spJtD6v298Ri1X/m74b2+23327q6Eaes77Wmb572+MBUys7
1u+/1geOzEus1yPzkyGjHkpJbmLyjDkL5JTe32h3viefckrCvqu19fT/Dc0H
PXyGEZ5rkiX5ZT5TN1tbTY1PqivLpDAvW7IKqsW2rDAAoMdatWqVbNu2zfH7
dd0PraGrY1P0uYsdXSdAr/V797q/N6drDcRbB2H06NFJxXWan+nxOJ1zrLFM
bW2tzJo1y3F8rbVhNe5MhuYnsepxaX7iNi9RWh6r75AlZu12p3HOyk2vy5AH
xsn0+bXyyu7Y68xFthlr2taYnlIXe+1FcpM22md0LUD9/XPSd+zQdxPTvjt/
/nx5+umnPem7ukaQ/p6PWrw9bn4SmZd8kZ9MTWleEtkW12+S4Q9PctR384cu
lVsmJ/f/qXi+mGuSJ0Vl5VJefqSVlUpJYZ75Wd8KR1WFAQA9lK4r7eZ675au
s+xVLOYFHafvZj1tt6x4TtfF7irunLspPHYjFfGQxje6/z0fHIr5+eQmYtZI
1FzCy35A3/WWXd/de+CQ+T3XNUbTkWeksg19rm3do2n1f/XwG4yYa5JfGWOu
SVCqC/KEUsEAgESs8dVu7r861dzcbPa9e3fs++mZomPskxlz5URDQ4OJQZNZ
DyJVdu77yMQh//GE82cnTpt1L/nev8T//RkxYoTruTewR9/1lpO+O/pIrey7
n9mc8fwi2fbi9n1mzaNrx9vXUnAncq5JrLF3TVJdVCI1TIMHANjQ9eCSHbsR
j86H1fHsOn7Ebox3ulk1AHRebbLrcsdijTnpis8I7j9ynzTeeJRk2srG/fLd
kctMnNNyqGN9Lot+L13l3vvRhr7rDad99+Dhv8ulo5bLP99XK4u3vpvxPCOZ
dvOR55wLN7/t2ffX9iVac01ypCTmuiYBqSirYa4JAMCRjRs3mmuz1vXxgo7b
1v299957nuzPazqH2Mt7zjqWX/e3dau3awV4yRp7peM4OhvfbG5tP37kJbO/
BZu8rPMDt+i7neO279bvalsXZOC4VSY/z3Su4aYVjlkZXt/ea5HrmvhIQAAA
naT3I+vr6801+p133kl6P7pmitbT0f3s2bPHwyP03htvvGGOU+sQad2jZFm1
fdatW9fl7jNH2vPBx/LdEctMbDLmhcak45sXXm2SHzy8yuxn/ItdZ15NT0Xf
TX/fnbPuLfP7r/1pzro3M55z2DXNp6x7E799akPS31d8dnNNAABoT9cHsBsD
oePX169fb67VOq5bx3a4obV5rBhJ/9wdvPnmm+Z4165da+Yru3Hw4MHwfGQd
q96V5pjEs3v/QfnRhLbnHWWzNsiKRvs6XJFN77deOPSFtrpcq7rWXISejL6b
/r67tDVH1/GM2hf+d/ZG2zWEMtVGLHot3Gcrl2yXz12fqRN2c00AAGhvyZIl
ZqyGnc8//zx8zdY113StOF2XIR6916r3WHX8t3X/0auxJemicY3WDdXj1+9I
7z0nilX0/KzztWLB7uTTz/4hg+a01e46s+J5U8dr9tr49341BtM1HPuP9Ztt
rhy9wryGroW+m/6+29j0ofx6xnrTL75zz2JTq3vCi6+b/rE++EHa85CGPQdk
ZeM+M25Tn49cMnK5ObYB4/zyzIYUPguznWsCAEB7Pp/PXIud0phG7yda13C9
p6rjPXRMtsY/Ggfo/crIn3f1cSCJaFyn82Hr6urC56Sxmn4H27dvN+et96V1
frD1cx3vrnVNu6s1u5vl3x8PmNhFm653cM3Dq6TksTXyi6lrzXyS71W+2O7n
E1fsTNF9V3iFvpv+vqvPTH7lWyd9Bj8f7i/a9LnKBfe/kLYW+dna9Bnp43W7
zTpHqROShor8I2s+9pXyALkJAMCe29zEYt1b1XHder9R14nWGEDXZ9YYx+7e
bHek91b1fqrOMdZ6RVpXVOM3PX9d80HHvLgdM9OVBZs/NrWANU8Z8JDfjP84
Z8gSk5fcMPFluWf+VhN7oXuh76a/74b+/g9Tv6tq+etS8ewWk6/8clr6mj4D
1XFb+txE12NJpYbKAsnLzZXcnBzJzs6RnBxt2W1/1tdz86SomtrhAIDYks1N
gM7SuU6fp/bGLQAAALoRchNkyrRp00zdVwAAAECRmyBT7r///i65HiUAAAAy
w8pNdGyNk/E11vviNbZne6fbk5sAAAAg0owZM2TevHlm/qs2nSebiM4Ztd4b
q3X17RNtq81Od95ev5tE29qtX+H19uQmAAAAiNTU1CQjR46UESNGmKY1NxOZ
OXNmu/dHt66+faJttdnpztvrd5Noe/1u07293b8XAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAgDQItUhLKNMHAQAAAKCnC1YVSZk/00cBAAAA
oGdrEV9xsdS0ZPo4AAAAAPRooVopLaqSYKaPAwAAAEDPFiiXooqGTB8FAAAA
gB7OzDWpZSI8AAAAgEzSuSYlzDUBAAAAkFlmrkk1c00AAAAApFCLNPjKpbSk
RIqLSqTS39TxLR3mmoSk0VcqBQXFUtXAOC8AAAAAnRWShqpiKaluEM0wGivz
JSunSHxR6UmjWdckMgepldKcLMnKypKc0tp0HjAAAACAo1FjlRSV1IiVigTK
81rzjRxpn27EmmsSat20UHJac5Ps4hrhyQkAAACA5IXEX1Yg5QHr7w1S0Vef
heRLVeTEkrhzTRqlMj9bcssCHX4CAAAAAM41SnVppYRnkQTKJS+rNTcpiFpf
McG6JoGyPCnyUbwLAAAAgFf0GUquZGVlS2F1+8kmHeeafKG2tFAqG9NxfAAA
AAB6Br+U5WZJVnZh1Dz4ROuaBKS8qEJYKR4AAACAZ6zxXIXV0i41CS0wc01i
VBWWlgWlUsRDEwAAAAAeClYXmHrAfaPnlcSbaxIKSEVRmdQy1QQAAACAh4JV
bblJQXX7alyNlTrXJPrdLeIvL5ZyP4kJAAAAAG+F/GWS25qb5Jb6I9YqaYox
16RJ/BW6VmMja5oAAAAASIEmqSnOlazsAqkIHElGoueaNPmlqqRISn3kJQAA
AABSqUn8lSVSkJcnBSXlUlleJPlFlVLjq5KK0mIpLquS2iBZCQAAAID0CbUE
paY0X4oqF0itv0GCTC0BAAAAkBGJ1jUBAAAAgDQJ1UppcbUE7d8JAAAAAKkT
b10TAAAAAEijYFVxjHVNAAAAACCdQrKgrExqKckFAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAD3K/wNxztww
    "], {{0, 315.}, {807., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Comments" -> <|
       "Software" -> "gnome-screenshot", "Creation Time" -> 
        DateObject[{2024, 4, 1, 21, 40, 8.}, "Instant", "Gregorian", 1.]|>|>],
   
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{532.5, Automatic},
  ImageSizeRaw->{807., 315.},
  PlotRange->{{0, 807.}, {0, 315.}}]], "Output",
 CellChangeTimes->{
  3.9186120027184267`*^9, {3.9191398561189404`*^9, 3.919139882151805*^9}},
 CellLabel->
  "Out[106]=",ExpressionUUID->"0d120743-4ff7-4c2f-aa80-52ebefb6db2a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Twist replacements", "Subsubsection",
 CellChangeTimes->{{3.9065638399729223`*^9, 3.906563842846744*^9}, {
  3.9065655069810057`*^9, 
  3.906565508905985*^9}},ExpressionUUID->"8293d699-7321-4d90-901d-\
f5226746f7e1"],

Cell["Replacement operations at each vertex:", "Text",
 CellChangeTimes->{{3.906564320924774*^9, 3.906564335095252*^9}, 
   3.906565808810573*^9},ExpressionUUID->"86025a51-c447-4d03-a41d-\
24ad83e91afa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rr", "[", "1", "]"}], "[", "f_", "]"}], ":=", 
  RowBox[{
   RowBox[{"replace", "[", 
    RowBox[{"1", ",", "7"}], "]"}], "@", "f"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rr", "[", 
    SubscriptBox["2", "2"], "]"}], "[", "f_", "]"}], ":=", 
  RowBox[{
   RowBox[{"replace", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", "8"}], "]"}], "@", 
   "f"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rr", "[", 
    SubscriptBox["2", "1"], "]"}], "[", "f_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"replace", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}], ",", "8"}], "]"}], "@", "f"}], "-", 
   RowBox[{
    RowBox[{"replace", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", "8"}], "]"}], "@", 
    "f"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rr", "[", 
    SubscriptBox["2", "3"], "]"}], "[", "f_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"replace", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "5"}], "}"}], ",", "8"}], "]"}], "@", "f"}], "-", 
   RowBox[{
    RowBox[{"replace", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", "8"}], "]"}], "@", 
    "f"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rr", "[", "3", "]"}], "[", "f_", "]"}], ":=", 
  RowBox[{
   RowBox[{"replace", "[", 
    RowBox[{"3", ",", "9"}], "]"}], "@", "f"}]}]}], "Input",
 CellChangeTimes->{{3.893483957559414*^9, 3.893483982191189*^9}, {
   3.8945974368519087`*^9, 3.894597484467732*^9}, 3.906565806045278*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"489308c0-d888-46ad-8e0e-d5743aa5c7ad"],

Cell["Wavefunction:", "Text",
 CellChangeTimes->{{3.906563793342596*^9, 
  3.906563794485133*^9}},ExpressionUUID->"55bef5b3-baeb-4abe-9094-\
fd02d80ced3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "-", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "2", ",", "6"}], "\[RightAngleBracket]"}], "-", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3", ",", "4"}], "\[RightAngleBracket]"}], "+", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "+", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "3", ",", "6"}], "\[RightAngleBracket]"}], "-", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"1", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "-", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "+", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "-", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"2", ",", "4", ",", "6"}], "\[RightAngleBracket]"}], "+", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"3", ",", "4", ",", "6"}], "\[RightAngleBracket]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.891018015982572*^9, 3.891018019083859*^9}, {
   3.8910181362546988`*^9, 3.8910181844729424`*^9}, {3.8910182169184837`*^9, 
   3.8910182170648823`*^9}, {3.8945972803924026`*^9, 3.89459728775247*^9}, 
   3.906563785665431*^9, {3.906565827047145*^9, 3.906565827930202*^9}, {
   3.907868830381776*^9, 3.907868830657815*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[112]:=",ExpressionUUID->"ada05b80-8cb8-4def-864a-1389747c6f2e"],

Cell["Generate basis functions:", "Text",
 CellChangeTimes->{{3.9065637897298326`*^9, 3.906563816131905*^9}, {
  3.9109981384235973`*^9, 
  3.910998138975531*^9}},ExpressionUUID->"068f9205-88ba-4336-83d3-\
d1ecbf03d3ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"{", "}"}]], "==", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["F", 
       RowBox[{"{", "}"}]], "=", "\[Psi]"}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{
        RowBox[{"nn", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}]], "==", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["F", 
         RowBox[{
          RowBox[{"nn", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]], "=", 
        RowBox[{"\[Psi]", "//", 
         RowBox[{"rr", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"nn", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"nn", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], "//", "Column"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         RowBox[{"nn", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}]], "==", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["F", 
          RowBox[{
           RowBox[{"nn", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]], "=", 
         RowBox[{
          RowBox[{"\[Psi]", "//", 
           RowBox[{"rr", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"nn", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "//", 
          RowBox[{"rr", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"nn", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"nn", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "]"}], "//", 
    "Column"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{
        RowBox[{"nn", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}]], "==", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["F", 
         RowBox[{
          RowBox[{"nn", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Psi]", "//", 
           RowBox[{"rr", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"nn", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "//", 
          RowBox[{"rr", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"nn", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "//", 
         RowBox[{"rr", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"nn", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"nn", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], "]"}], "//", "Column"}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.893484024648986*^9, 3.893484033280217*^9}, 
   3.90656583776013*^9, {3.906566230578446*^9, 3.906566235755576*^9}, 
   3.918572815736479*^9, {3.9185763663816013`*^9, 3.918576395166851*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"7cefebeb-2036-4fcc-9d72-a5e55c87c2cc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "1", "}"}]], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}]}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"2", ",", "3", ",", "7"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"2", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"2", ",", "4", ",", "6"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"2", ",", "6", ",", "7"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "4", ",", "6"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "4", ",", "7"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "5", ",", "7"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "6", ",", "7"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"4", ",", "5", ",", "7"}], "\[RightAngleBracket]"}]}]}]},
    {
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "3", "}"}]], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{"1", ",", "2", ",", "6"}], "\[RightAngleBracket]"}]}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "2", ",", "9"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "4", ",", "9"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "5", ",", "9"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "6", ",", "9"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"2", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"2", ",", "4", ",", "6"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"2", ",", "5", ",", "9"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"4", ",", "6", ",", "9"}], "\[RightAngleBracket]"}]}]}]},
    {
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        SubscriptBox["2", "1"], "}"}]], "\[Equal]", 
      RowBox[{
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "3", ",", "8"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "4", ",", "8"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "5", ",", "8"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"4", ",", "5", ",", "8"}], "\[RightAngleBracket]"}]}]}]},
    {
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        SubscriptBox["2", "2"], "}"}]], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{"1", ",", "3", ",", "4"}], "\[RightAngleBracket]"}]}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "3", ",", "8"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "4", ",", "8"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "4", ",", "8"}], "\[RightAngleBracket]"}]}]}]},
    {
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        SubscriptBox["2", "3"], "}"}]], "\[Equal]", 
      RowBox[{
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "3", ",", "6"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "3", ",", "8"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "6", ",", "8"}], "\[RightAngleBracket]"}], "+", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "4", ",", "6"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"3", ",", "4", ",", "8"}], "\[RightAngleBracket]"}], "-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"4", ",", "6", ",", "8"}], "\[RightAngleBracket]"}]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.918572817128755*^9, 3.918612002762697*^9, {3.919139856164349*^9, 
   3.919139882187839*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"4faa6bdd-a6a9-4519-9339-7597c1dcb14f"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["f", 
    RowBox[{"{", "_", "}"}]], " ", "Eplicit", " ", "form"}], 
  TraditionalForm]],ExpressionUUID->"884d7482-c429-4729-acc3-370d379f0f61"]], \
"Subsection",
 CellChangeTimes->{{3.918576134888845*^9, 
  3.9185761444972687`*^9}},ExpressionUUID->"5369cde1-8b10-4a63-8ddf-\
2b6ba80d55b7"],

Cell["he list of all functions f graded by weight is given by", "Text",
 CellChangeTimes->{{3.9185765464853497`*^9, 3.918576572573044*^9}, {
  3.91857668805445*^9, 
  3.9185766928792477`*^9}},ExpressionUUID->"57a793a1-96e2-463e-8c7a-\
89dfd5368549"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"allf", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", 
      RowBox[{"{", "}"}]], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         RowBox[{"nn", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}]], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         RowBox[{"nn", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}]], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         RowBox[{"nn", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}]], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.918576552663023*^9, 3.918576628318695*^9}, {
  3.918576676743866*^9, 3.918576735899748*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"f49bcf22-389a-4685-b443-413554eac06a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["f", 
    RowBox[{"{", "}"}]], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", 
      RowBox[{"{", "1", "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", "3", "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       SubscriptBox["2", "1"], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       SubscriptBox["2", "2"], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       SubscriptBox["2", "3"], "}"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["2", "1"]}], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["2", "2"]}], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["2", "3"]}], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["2", "1"], ",", "3"}], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["2", "2"], ",", "3"}], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["2", "3"], ",", "3"}], "}"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["2", "1"], ",", "3"}], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["2", "2"], ",", "3"}], "}"}]], ",", 
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["2", "3"], ",", "3"}], "}"}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.918576736140956*^9, 3.9186120082917747`*^9, {3.919139856189328*^9, 
   3.919139882899765*^9}},
 CellLabel->
  "Out[117]=",ExpressionUUID->"224fcb3e-6841-4fff-b017-e836c1bb3e4b"]
}, Open  ]],

Cell["The expression for all f are given by", "Text",
 CellChangeTimes->{{3.9185764028264217`*^9, 
  3.918576416646823*^9}},ExpressionUUID->"4207f181-6994-429f-aff2-\
f8bafb3ae8a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"evalfRule", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["f", 
          RowBox[{"{", "}"}]], "->", "\[Psi]"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Rule", "[", 
          RowBox[{
           SubscriptBox["f", 
            RowBox[{
             RowBox[{"nn", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}]], ",", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["F", 
              RowBox[{
               RowBox[{"nn", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]], "=", 
             RowBox[{"\[Psi]", "//", 
              RowBox[{"rr", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"nn", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ")"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "@", 
            RowBox[{"nn", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Rule", "[", 
          RowBox[{
           SubscriptBox["f", 
            RowBox[{
             RowBox[{"nn", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}]], ",", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["F", 
              RowBox[{
               RowBox[{"nn", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]], "=", 
             RowBox[{
              RowBox[{"\[Psi]", "//", 
               RowBox[{"rr", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nn", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "//", 
              RowBox[{"rr", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"nn", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ")"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "@", 
            RowBox[{"nn", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Rule", "[", 
          RowBox[{
           SubscriptBox["f", 
            RowBox[{
             RowBox[{"nn", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}]], ",", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["F", 
              RowBox[{
               RowBox[{"nn", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Psi]", "//", 
                RowBox[{"rr", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"nn", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "//", 
               RowBox[{"rr", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nn", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "//", 
              RowBox[{"rr", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"nn", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ")"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "@", 
            RowBox[{"nn", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], "]"}]}], "]"}]}], 
    ")"}], "//", "Short"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.918576423763475*^9, 3.918576538378697*^9}, {
  3.918577024203959*^9, 3.9185770375707808`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"445c0c35-5530-446f-9c5b-15045dac20db"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", 
      RowBox[{"{", "}"}]], "\[Rule]", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}], "-", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "2", ",", "6"}], "\[RightAngleBracket]"}], "-", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3", ",", "4"}], "\[RightAngleBracket]"}], "+", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "+", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "3", ",", "6"}], "\[RightAngleBracket]"}], "-", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"1", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "-", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "3", ",", "5"}], "\[RightAngleBracket]"}], "+", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "4", ",", "5"}], "\[RightAngleBracket]"}], "-", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"2", ",", "4", ",", "6"}], "\[RightAngleBracket]"}], "+", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"3", ",", "4", ",", "6"}], "\[RightAngleBracket]"}]}]}], ",", 
    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], ",", 
    RowBox[{
     SubscriptBox["f", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["2", "3"], ",", "3"}], "}"}]], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"4", ",", "6", ",", "8"}], "\[RightAngleBracket]"}]}], "+", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"4", ",", "6", ",", "9"}], "\[RightAngleBracket]"}], "-", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"4", ",", "8", ",", "9"}], "\[RightAngleBracket]"}], "-", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"6", ",", "7", ",", "8"}], "\[RightAngleBracket]"}], "+", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"6", ",", "7", ",", "9"}], "\[RightAngleBracket]"}], "+", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"7", ",", "8", ",", "9"}], "\[RightAngleBracket]"}]}]}]}], 
   "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.918576508123728*^9, 3.918576538897072*^9}, 
   3.918577037913755*^9, 3.9186120084034853`*^9, {3.919139856217827*^9, 
   3.9191398830589037`*^9}},
 CellLabel->
  "Out[118]//Short=",ExpressionUUID->"bd0219f4-52df-4e28-867d-18ada956ff64"]
}, Open  ]],

Cell[TextData[{
 "Each bracket represent the canonical form of a simplex. Which in standard \
coordinates id given by the function ",
 StyleBox["simplex.  ",
  FontWeight->"Bold"],
 "To write an explicit expression we introduce and arbitrary hyperplane"
}], "Text",
 CellChangeTimes->{{3.918576753788813*^9, 3.918576790188595*^9}, {
  3.918611852273534*^9, 
  3.918611873378038*^9}},ExpressionUUID->"3056c578-326a-4775-bcff-\
5380a96b3039"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "0", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9186119494265003`*^9, 3.918611963083321*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"85bd8e35-628a-4742-a565-af280d15fd56"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "simplex", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simplex", "[", "I__", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Det", "[", 
    RowBox[{"P", "/@", 
     RowBox[{"{", 
      RowBox[{"I", ",", "0"}], "}"}]}], "]"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"L", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"{", "I", "}"}]}], "}"}]}], " ", "]"}], 
     RowBox[{"L", "[", "0", "]"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.9185761480658083`*^9, 3.918576184500575*^9}, {
  3.918576251146511*^9, 3.918576269472024*^9}, {3.9185768222905293`*^9, 
  3.918576852967259*^9}, {3.918576940803419*^9, 3.91857697687085*^9}, {
  3.918611971187283*^9, 3.9186119878432827`*^9}, {3.918612023356062*^9, 
  3.9186120459748383`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"e0c605b1-1b13-4f46-a21b-0feb2557c52f"],

Cell["For example", "Text",
 CellChangeTimes->{{3.918576954039319*^9, 
  3.9185769557098103`*^9}},ExpressionUUID->"b112b196-dc10-40fa-b53e-\
77ab62af8264"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simplex", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.918576956635151*^9, 3.9185769601418123`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"6178238d-61ad-4dde-aba4-384fd5f0530f"],

Cell[BoxData[
 FractionBox[
  RowBox[{"d", "-", 
   RowBox[{"a", " ", "X1"}], "-", 
   RowBox[{"b", " ", "X2"}], "-", 
   RowBox[{"c", " ", "X3"}], "-", 
   RowBox[{"a", " ", "Y12"}], "-", 
   RowBox[{"b", " ", "Y12"}], "-", 
   RowBox[{"b", " ", "Y23"}], "-", 
   RowBox[{"c", " ", "Y23"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"d", "+", 
     RowBox[{"a", " ", "x1"}], "+", 
     RowBox[{"b", " ", "x2"}], "+", 
     RowBox[{"c", " ", "x3"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x2", "+", "X2", "+", "Y12", "+", "Y23"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.9185769604101686`*^9, 3.918576978901017*^9}, {
  3.9186119904355907`*^9, 3.9186120489361353`*^9}, {3.919139856277153*^9, 
  3.919139883136291*^9}},
 CellLabel->
  "Out[122]=",ExpressionUUID->"106acc82-7a47-46f3-99c7-88ea349d50cb"]
}, Open  ]],

Cell["Therefore we can evaluate f using", "Text",
 CellChangeTimes->{{3.918576884320888*^9, 
  3.918576897058226*^9}},ExpressionUUID->"0adaf5ca-647f-41f5-ab5f-\
dd5534b296fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"evalf", "[", "exp_", "]"}], ":=", 
  RowBox[{
   RowBox[{"exp", "/.", " ", "evalfRule"}], "/.", " ", 
   RowBox[{"AngleBracket", "->", " ", "simplex"}]}]}]], "Input",
 CellChangeTimes->{{3.918576898082509*^9, 3.9185769330323067`*^9}, {
  3.918576984661972*^9, 3.918576984824286*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"e940ef7d-3697-4bc3-abac-9f57afe16bb2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"evalf", "[", 
   SubscriptBox["f", 
    RowBox[{"{", "}"}]], "]"}], "//", "Factor"}]], "Input",
 CellChangeTimes->{{3.9185769877611723`*^9, 3.9185770015167017`*^9}, {
  3.918612056790352*^9, 3.9186120575765657`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"f8b23372-a9d5-43b8-b570-9aecda6f6c59"],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "Y12", " ", "Y23", " ", 
   RowBox[{"(", 
    RowBox[{"x1", "+", "X1", "+", 
     RowBox[{"2", " ", "x2"}], "+", 
     RowBox[{"2", " ", "X2"}], "+", "x3", "+", "X3", "+", "Y12", "+", "Y23"}],
     ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], 
    ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"x2", "+", "X2", "+", "Y12", "+", "Y23"}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.9185770022750397`*^9, 3.918577042695847*^9, 3.918612008549189*^9, {
   3.9186120537319393`*^9, 3.918612057832913*^9}, {3.919139856340743*^9, 
   3.919139883222249*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"a324ece2-a662-4f30-b346-cf2f4136a7d4"]
}, Open  ]],

Cell["Notice that the forms are independent of P[0]", "Text",
 CellChangeTimes->{{3.918612089074382*^9, 
  3.918612104005158*^9}},ExpressionUUID->"44e130a1-ae97-460c-8df2-\
2b0fe37ce5d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evalf", "[", 
  SubscriptBox["f", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["2", "2"], ",", "3"}], "}"}]], "]"}]], "Input",
 CellChangeTimes->{{3.9185771480863256`*^9, 3.918577154319075*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"feb4d75c-0074-45c3-ae7f-7e6ca39362d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["d", 
    RowBox[{"x1", " ", "x2", " ", "x3", " ", 
     RowBox[{"(", 
      RowBox[{"d", "+", 
       RowBox[{"a", " ", "x1"}], "+", 
       RowBox[{"b", " ", "x2"}], "+", 
       RowBox[{"c", " ", "x3"}]}], ")"}]}]]}], "+", 
  FractionBox[
   RowBox[{"d", "-", 
    RowBox[{"a", " ", "X1"}], "-", 
    RowBox[{"a", " ", "X2"}], "-", 
    RowBox[{"a", " ", "X3"}]}], 
   RowBox[{"x2", " ", "x3", " ", 
    RowBox[{"(", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", "x1"}], "+", 
      RowBox[{"b", " ", "x2"}], "+", 
      RowBox[{"c", " ", "x3"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], 
     ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "d"}], "+", 
    RowBox[{"b", " ", "X1"}], "+", 
    RowBox[{"b", " ", "X2"}], "+", 
    RowBox[{"b", " ", "X3"}]}], 
   RowBox[{"x1", " ", "x3", " ", 
    RowBox[{"(", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", "x1"}], "+", 
      RowBox[{"b", " ", "x2"}], "+", 
      RowBox[{"c", " ", "x3"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], 
     ")"}]}]], "+", 
  FractionBox[
   RowBox[{"d", "-", 
    RowBox[{"c", " ", "X1"}], "-", 
    RowBox[{"c", " ", "X2"}], "-", 
    RowBox[{"c", " ", "X3"}]}], 
   RowBox[{"x1", " ", "x2", " ", 
    RowBox[{"(", 
     RowBox[{"d", "+", 
      RowBox[{"a", " ", "x1"}], "+", 
      RowBox[{"b", " ", "x2"}], "+", 
      RowBox[{"c", " ", "x3"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.918577154586626*^9, 3.918612008624091*^9, 3.918612071231374*^9, {
   3.919139856369186*^9, 3.919139883261496*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"6c9cf5f5-f8a8-4b63-b8c2-f7807a139313"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"evalf", "[", "allf", "]"}], "//", "Factor"}]], "Input",
 CellChangeTimes->{{3.919139931983799*^9, 3.919139933651169*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"58d8117e-d5fe-42de-bee3-ac7f6f39709c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"4", " ", "Y12", " ", "Y23", " ", 
     RowBox[{"(", 
      RowBox[{"x1", "+", "X1", "+", 
       RowBox[{"2", " ", "x2"}], "+", 
       RowBox[{"2", " ", "X2"}], "+", "x3", "+", "X3", "+", "Y12", "+", 
       "Y23"}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], 
      ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"x2", "+", "X2", "+", "Y12", "+", "Y23"}], ")"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "X1"}], "+", "Y12"}], ")"}], " ", "Y23", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", 
         RowBox[{"2", " ", "x2"}], "+", 
         RowBox[{"2", " ", "X2"}], "+", "x3", "+", "X3", "+", "Y12", "+", 
         "Y23"}], ")"}]}], 
      RowBox[{"x1", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}],
         ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "Y12", "+", "Y23"}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "Y12", " ", 
        RowBox[{"(", 
         RowBox[{"X3", "-", "Y23"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "X1", "+", 
          RowBox[{"2", " ", "x2"}], "+", 
          RowBox[{"2", " ", "X2"}], "+", "x3", "+", "X3", "+", "Y12", "+", 
          "Y23"}], ")"}]}], 
       RowBox[{"x3", " ", 
        RowBox[{"(", 
         RowBox[{
         "x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"x2", "+", "X2", "+", "Y12", "+", "Y23"}], ")"}]}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "-", "Y23"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"X2", "-", "Y12", "+", "Y23"}], ")"}]}], 
      RowBox[{"x2", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}],
         ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"X2", "-", "Y12", "-", "Y23"}], 
       RowBox[{"x2", " ", 
        RowBox[{"(", 
         RowBox[{
         "x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}]}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "-", "Y12"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"X2", "+", "Y12", "-", "Y23"}], ")"}]}], 
      RowBox[{"x2", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}],
         ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X1", "-", "Y12"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"X3", "-", "Y23"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", 
         RowBox[{"2", " ", "x2"}], "+", 
         RowBox[{"2", " ", "X2"}], "+", "x3", "+", "X3", "+", "Y12", "+", 
         "Y23"}], ")"}]}], 
      RowBox[{"x1", " ", "x3", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}],
         ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "Y12", "+", "Y23"}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "-", "Y23"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"X1", "+", "X2", "+", "Y23"}], ")"}]}], 
      RowBox[{"x1", " ", "x2", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}],
         ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"X1", "+", "X2", "-", "Y23"}], 
       RowBox[{"x1", " ", "x2", " ", 
        RowBox[{"(", 
         RowBox[{
         "x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}]}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"X2", "+", "Y12", "-", "Y23"}], ")"}]}], 
      RowBox[{"x1", " ", "x2", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}],
         ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"x3", "+", "X3", "+", "Y23"}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "X3"}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "X2"}], "+", "Y12", "-", "Y23"}], ")"}]}], 
       RowBox[{"x2", " ", "x3", " ", 
        RowBox[{"(", 
         RowBox[{
         "x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], 
         ")"}]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"X2", "+", "X3", "-", "Y12"}], 
       RowBox[{"x2", " ", "x3", " ", 
        RowBox[{"(", 
         RowBox[{
         "x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}]}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "-", "Y12"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"X2", "+", "X3", "+", "Y12"}], ")"}]}], 
      RowBox[{"x2", " ", "x3", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}],
         ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "Y12"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], 
        ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "X3"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"X1", "+", "X2", "+", "Y23"}], ")"}]}], 
      RowBox[{"x1", " ", "x2", " ", "x3", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}],
         ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "Y23"}], ")"}]}]],
      ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"X1", "+", "X2", "+", "X3"}], 
       RowBox[{"x1", " ", "x2", " ", "x3", " ", 
        RowBox[{"(", 
         RowBox[{
         "x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], 
         ")"}]}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"X2", "+", "X3", "+", "Y12"}], ")"}]}], 
      RowBox[{"x1", " ", "x2", " ", "x3", " ", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "X1", "+", "x2", "+", "X2", "+", "x3", "+", "X3"}],
         ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"x2", "+", "X2", "+", "x3", "+", "X3", "+", "Y12"}], 
        ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.919139934382843*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"288d8d58-eacb-42d8-9bf7-d59af3aa3fb1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differential equations", "Subsection",
 CellChangeTimes->{{3.896913365659911*^9, 3.8969133664460373`*^9}, {
  3.906563209105784*^9, 
  3.906563211243841*^9}},ExpressionUUID->"427aec1d-883b-4423-9c96-\
dd4afcd43ce6"],

Cell[BoxData[{
 RowBox[{"solveCoeff", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fsub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "}"}]], "->", "\"\<\[Psi]\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "1", "}"}]], "->", "\"\<F\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        SubscriptBox["2", "1"], "}"}]], "->", 
      "\"\<\!\(\*SubscriptBox[\(Q\), \(1\)]\)\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        SubscriptBox["2", "2"], "}"}]], "->", 
      "\"\<\!\(\*SubscriptBox[\(Q\), \(2\)]\)\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        SubscriptBox["2", "3"], "}"}]], "->", 
      "\"\<\!\(\*SubscriptBox[\(Q\), \(3\)]\)\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", "3", "}"}]], "->", 
      "\"\<\!\(\*OverscriptBox[\(F\), \(~\)]\)\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         SubscriptBox["2", "1"]}], "}"}]], "->", 
      "\"\<\!\(\*SubscriptBox[\(q\), \(1\)]\)\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         SubscriptBox["2", "2"]}], "}"}]], "->", 
      "\"\<\!\(\*SubscriptBox[\(q\), \(2\)]\)\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         SubscriptBox["2", "3"]}], "}"}]], "->", 
      "\"\<\!\(\*SubscriptBox[\(q\), \(3\)]\)\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]], "->", "\"\<f\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["2", "1"], ",", "3"}], "}"}]], "->", 
      "\"\<\!\(\*SubscriptBox[OverscriptBox[\(q\), \(~\)], \(3\)]\)\>\""}], 
     ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["2", "2"], ",", "3"}], "}"}]], "->", 
      "\"\<\!\(\*SubscriptBox[OverscriptBox[\(q\), \(~\)], \(2\)]\)\>\""}], 
     ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["2", "3"], ",", "3"}], "}"}]], "->", 
      "\"\<\!\(\*SubscriptBox[OverscriptBox[\(q\), \(~\)], \(1\)]\)\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         SubscriptBox["2", "1"], ",", "3"}], "}"}]], "->", "\"\<g\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         SubscriptBox["2", "2"], ",", "3"}], "}"}]], "->", "\"\<Z\>\""}], ",", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         SubscriptBox["2", "3"], ",", "3"}], "}"}]], "->", 
      "\"\<\!\(\*OverscriptBox[\(g\), \(~\)]\)\>\""}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.90656303235634*^9, 3.906563056307406*^9}, {
   3.906564435834671*^9, 3.9065644362786417`*^9}, {3.9065645805554867`*^9, 
   3.9065645806569366`*^9}, {3.906565853503125*^9, 3.906565866760597*^9}, 
   3.906566030265823*^9, {3.906566173841275*^9, 3.906566178437113*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"025954c1-886e-40e2-bad1-6302315c1090"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dfeq", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eqlvl", "[", "l", "]"}], "[", 
       RowBox[{"[", "m", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"nn", "[", 
          RowBox[{"[", "l", "]"}], "]"}]}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dfeq", "/.", "fsub"}], "//", "Column"}]}], "Input",
 CellChangeTimes->{3.909505918504034*^9},
 CellLabel->
  "In[128]:=",ExpressionUUID->"bacb405e-8e42-4233-a527-4832e6774d6f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{"d", "[", "\<\"\[Psi]\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"F\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"F\"\>"}], "+", "\<\"\[Psi]\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "-", "Y12", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(3\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y12", "-", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "-", "\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>"}], 
          "+", "\<\"\[Psi]\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "+", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(1\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "-", "Y12", "+", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(1\\)]\\)\"\>"}],
           "-", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"\>", 
          "-", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(3\\)]\\)\"\>", 
          "+", "\<\"\[Psi]\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{"d", "[", "\<\"F\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"F\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y12"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"f\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(3\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y12", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"f\"\>"}], "+", "\<\"F\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "+", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"F\"\>", 
          "-", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>", 
          "-", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", 
          "-", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(3\\)]\\)\"\>"}], ")"}], 
        " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"f\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y12"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "-", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"f\"\>"}], 
          "+", "\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>"}], ")"}],
         " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "+", "Y12"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(3\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "-", "Y12", "+", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", 
          "-", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>", 
          "-", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", 
          "-", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(3\\)]\\)\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(1\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{
        "-", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \\(2\
\\)]\\)\"\>"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "-", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>"}],
           "+", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(1\\)]\\)\"\>"}], ")"}],
         " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", 
          "+", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(3\\)]\\)\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "-", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(3\\)]\\)\"\>"}], 
          "+", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(1\\)]\\)\"\>"}], ")"}], 
        " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "+", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(1\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "-", "Y12", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "-", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>"}],
           "+", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"\>"}], ")"}],
         " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "-", "Y12", "-", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "-", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>"}], 
          "+", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"\>"}], ")"}], 
        " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(3\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", 
          "+", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(3\\)]\\)\"\>"}], ")"}], 
        " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(3\\)]\\)\"\>"}],
           "+", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(3\\)]\\)\"\>"}], ")"}],
         " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "+", "Y12"}]]}], "-", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(3\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y12", "-", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "-", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>"}], 
          "+", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(3\\)]\\)\"\>"}], ")"}], 
        " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{"d", "[", "\<\"f\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       RowBox[{"\<\"f\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y12"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "+", "Y12"}]]}], "+", 
       RowBox[{"\<\"f\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"g\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"f\"\>", "-", "\<\"g\"\>", 
          "-", "\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", 
          "-", "\<\"Z\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\<\"Z\"\>"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"g\"\>", "+", "\<\"Z\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "-", "Y23"}]]}], "+", 
       RowBox[{
       "2", " ", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"g\"\>"}], 
          "+", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>"}], ")"}], 
        " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       RowBox[{
       "2", " ", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "-", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", 
          "-", "\<\"Z\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(3\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", 
          "+", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(3\\)]\\)\"\>"}], ")"}], 
        " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y12"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "+", "Y12"}]]}], "-", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(3\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "Y12", "-", "Y23"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "-", "\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>"}], 
          "+", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(3\\)]\\)\"\>"}], ")"}], 
        " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(3\\)]\\)\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{
        "-", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \\(2\
\\)]\\)\"\>"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "-", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\<\"g\"\>"}], 
          "+", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(3\\)]\\)\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", 
          "+", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(3\\)]\\)\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "-", "Y23"}]]}], "+", 
       RowBox[{"\<\"g\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "Y23"}]]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(3\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "-", "Y12", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       RowBox[{
       "2", " ", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "-", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", "-", "\<\"Z\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\<\"Z\"\>"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", 
          "+", "\<\"Z\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y12"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "-", "\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>"}], 
          "+", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       RowBox[{
       "2", " ", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "+", "Y12"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{"d", "[", "\<\"g\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\<\"Z\"\>"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"g\"\>", "+", "\<\"Z\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X3", "-", "Y23"}]]}], "+", 
       RowBox[{"2", " ", "\<\"g\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "Y23"}]]}]}]}]},
    {
     RowBox[{
      RowBox[{"d", "[", "\<\"Z\"\>", "]"}], "\[Equal]", 
      RowBox[{"3", " ", "\<\"Z\"\>", " ", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "+", "X3"}]]}]}]},
    {
     RowBox[{
      RowBox[{
      "d", "[", "\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\<\"Z\"\>"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", 
          "+", "\<\"Z\"\>"}], ")"}], " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "-", "Y12"}]]}], "+", 
       RowBox[{
       "2", " ", "\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "+", "Y12"}]]}]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.909505563849538*^9, 3.909505591461598*^9}, 
   3.909505651194744*^9, 3.90950581494352*^9, {3.909505919413353*^9, 
   3.90950592205031*^9}, 3.909531561811471*^9, 3.909539918806773*^9, 
   3.909541001200611*^9, 3.910994590449033*^9, 3.910994636613554*^9, 
   3.918572803251854*^9, {3.919139856503025*^9, 3.919139884487163*^9}},
 CellLabel->
  "Out[129]=",ExpressionUUID->"d0386340-93e4-4f5a-b6c0-d0c5321e5fb5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["A matrix", "Subsection",
 CellChangeTimes->{{3.906561448254573*^9, 3.90656144881246*^9}, {
   3.906561633282823*^9, 3.906561635913178*^9}, 
   3.906653100456587*^9},ExpressionUUID->"cf5afe58-343a-47ae-ad5a-\
7f51e1348b19"],

Cell[BoxData[
 RowBox[{
  RowBox[{"flist", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         RowBox[{"nn", "[", 
          RowBox[{"[", "l", "]"}], "]"}], "[", 
         RowBox[{"[", "m", "]"}], "]"}]], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", 
         RowBox[{"nsite", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "l", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.904291899239594*^9, 3.904291900175728*^9}, {
   3.9050037844377327`*^9, 3.905003793120101*^9}, {3.905004012892078*^9, 
   3.9050040308759727`*^9}, 3.905004136265205*^9, {3.905004181958345*^9, 
   3.905004220022098*^9}, 3.905004270208178*^9, {3.906561431697302*^9, 
   3.9065614586806*^9}, {3.906566139500236*^9, 3.906566155976248*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"31b34f41-2f02-4823-a2a9-7481a4e1f62c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eqlvl", "[", "i", "]"}], "[", 
        RowBox[{"[", "m", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"nsite", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"eqlvl", "[", "i", "]"}]}]}], "}"}]}], "]"}], ",", "1"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Amtx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "flist"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       SuperscriptBox["4", 
        RowBox[{"nsite", "-", "1"}]]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.905003833008774*^9, 3.9050038718871393`*^9}, {
   3.9050040220472183`*^9, 3.905004025577086*^9}, {3.905004116493823*^9, 
   3.905004155472126*^9}, 3.905004222540668*^9, {3.905004255549251*^9, 
   3.905004258941999*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"0d842a80-d74b-4942-a624-7f1f7a22a23e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Amtx", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.906561413560671*^9, 3.906561414261554*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"fdc8155d-98f0-498d-9b38-1c68a36febfc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "-", "Y12", "+", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "-", "Y12", "-", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "-", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "+", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "-", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "-", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]]}], "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "-", "Y12", "+", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "X3", "-", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "X3", "+", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "-", "Y12", "+", "Y23"}]]}], "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "+", "Y23"}]]}], "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "-", "Y12"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]]}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "-", "Y12", "-", "Y23"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "-", "Y23"}]]}], "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "X3", "-", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "-", "Y23"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "-", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]]}], "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "X3", "+", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], "0", "0", "0", "0", "0", 
      "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "+", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "+", "X3"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "X3", "+", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "+", "Y23"}]]}]},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "Y23"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], "0", "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "-", "Y23"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], "0", "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "+", "X3"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "-", "Y23"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "Y12", "-", "Y23"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}], "0", "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X2", "+", "X3", "+", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X3", "+", "Y23"}]]}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]], "+", 
       SubscriptBox["dL", 
        RowBox[{"X2", "-", "Y12", "+", "Y23"}]]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "-", "Y12"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]]}], "0", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "Y12"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "+", "Y23"}]]}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "-", "Y12"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]]}], "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "+", "X3"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "+", "Y12"}]]}]}], "0", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "-", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "Y12"}]]}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "Y23"}]]}]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X3", "-", "Y23"}]]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"3", " ", 
       SubscriptBox["dL", 
        RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["dL", 
         RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "+", 
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]]}], 
      RowBox[{
       SubscriptBox["dL", 
        RowBox[{"X1", "-", "Y12"}]], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["dL", 
         RowBox[{"X2", "+", "X3", "+", "Y12"}]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.905270023915971*^9, 3.905270109734646*^9}, {
   3.9052702324635572`*^9, 3.90527025698587*^9}, 3.906559666728648*^9, {
   3.906561414822132*^9, 3.9065614614816837`*^9}, 3.9065631206889887`*^9, 
   3.906563772216906*^9, 3.906565323091508*^9, 3.906565882616523*^9, {
   3.906566099601232*^9, 3.906566108347808*^9}, {3.906566141363935*^9, 
   3.9065661589852953`*^9}, {3.906566227532075*^9, 3.9065662480417633`*^9}, 
   3.906566366035219*^9, 3.906566400071418*^9, {3.906566431239423*^9, 
   3.906566496457507*^9}, 3.906568147764078*^9, 3.908978587309328*^9, {
   3.90954098768397*^9, 3.909541001261429*^9}, 3.910994590508019*^9, 
   3.9109946366704493`*^9, 3.918572803458096*^9, {3.919139856635126*^9, 
   3.919139884712885*^9}},
 CellLabel->
  "Out[133]//MatrixForm=",ExpressionUUID->"1c38a2b0-0460-453d-86d1-\
8d74249f6a38"]
}, Open  ]],

Cell["Check flatness:", "Text",
 CellChangeTimes->{{3.9065616055909357`*^9, 3.9065616265415173`*^9}, {
  3.9065661420863733`*^9, 
  3.906566160574573*^9}},ExpressionUUID->"d630b06e-0ec1-494a-8e11-\
471d49698959"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Amtx", "/.", 
    RowBox[{
     SubscriptBox["dL", "a_"], ":>", 
     RowBox[{"Dt", "@", 
      RowBox[{"Log", "[", "a", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"{", 
    RowBox[{"X1", ",", "X2", ",", "X3", ",", "Y12", ",", "Y23"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DeleteDuplicates", "@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"A", ",", 
          RowBox[{"Dt", "[", 
           RowBox[{"vars", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ".", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"A", ",", 
          RowBox[{"Dt", "[", 
           RowBox[{"vars", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Coefficient", "[", 
         RowBox[{"A", ",", 
          RowBox[{"Dt", "[", 
           RowBox[{"vars", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}], ".", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"A", ",", 
          RowBox[{"Dt", "[", 
           RowBox[{"vars", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}]}], "//", 
      "Simplify"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "vars"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "@", "vars"}]}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.906563156738124*^9, 3.906563183399865*^9}, {
  3.906566130982445*^9, 3.906566133495078*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"0080a304-e30f-470a-9bde-1189a3e9f40c"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{{3.906563170270688*^9, 3.906563183914638*^9}, 
   3.906563772229122*^9, 3.906565323101242*^9, 3.9065658826929417`*^9, {
   3.9065660996797743`*^9, 3.906566143797529*^9}, {3.906566227642706*^9, 
   3.90656624824325*^9}, 3.906566366252022*^9, 3.906566400319639*^9, {
   3.906566431352023*^9, 3.906566496565229*^9}, 3.906568147872995*^9, 
   3.90897858751757*^9, {3.9095409878893633`*^9, 3.909541001366166*^9}, 
   3.910994590711811*^9, 3.910994636777131*^9, 3.918572803986637*^9, {
   3.919139856674026*^9, 3.919139885168191*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"d36260e4-db5b-4d08-be09-e304be3c1d1b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["d", "2"], "=", "0"}], 
  TraditionalForm]],ExpressionUUID->"f40ea7ae-c1ec-4175-8952-29995e5ef8ba"]], \
"Subsection",
 CellChangeTimes->{{3.896191997952063*^9, 3.8961920021022*^9}, 
   3.896204903882482*^9},ExpressionUUID->"428182c5-1166-4da2-91ca-\
08334e9850b7"],

Cell["List of letters:", "Text",
 CellChangeTimes->{{3.9095409083306427`*^9, 
  3.909540921417824*^9}},ExpressionUUID->"53818a1c-b474-4abd-9bf0-\
168bb5181594"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Bsub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"X1", "+", "Y12"}], "->", 
      RowBox[{"B", "[", "1", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X2", "+", "Y12", "+", "Y23"}], "->", 
      RowBox[{"B", "[", "2", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X3", "+", "Y23"}], "->", 
      RowBox[{"B", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X1", "+", "X2", "+", "X3"}], "->", 
      RowBox[{"B", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X1", "+", "X2", "+", "Y23"}], "->", 
      RowBox[{"B", "[", "5", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X2", "+", "X3", "+", "Y12"}], "->", 
      RowBox[{"B", "[", "6", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X1", "-", "Y12"}], "->", 
      RowBox[{"B", "[", "7", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X2", "-", "Y12", "+", "Y23"}], "->", 
      RowBox[{"B", "[", "8", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X2", "+", "Y12", "-", "Y23"}], "->", 
      RowBox[{"B", "[", "9", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X2", "-", "Y12", "-", "Y23"}], "->", 
      RowBox[{"B", "[", "10", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X3", "-", "Y23"}], "->", 
      RowBox[{"B", "[", "11", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X1", "+", "X2", "-", "Y23"}], "->", 
      RowBox[{"B", "[", "12", "]"}]}], ",", 
     RowBox[{
      RowBox[{"X2", "+", "X3", "-", "Y12"}], "->", 
      RowBox[{"B", "[", "13", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Blist", "=", 
  RowBox[{"Bsub", "[", 
   RowBox[{"[", 
    RowBox[{";;", ",", "1"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.909532788505144*^9, 3.9095328440537043`*^9}, {
  3.909532894454124*^9, 3.9095330098125677`*^9}, {3.909533826115224*^9, 
  3.909533855379304*^9}, {3.9095400045996532`*^9, 3.909540029610935*^9}, {
  3.909540780809555*^9, 3.9095407973148117`*^9}, {3.9095413591536217`*^9, 
  3.9095413768990602`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"36666c9a-62d7-4869-ad14-fac34126087f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"X1", "+", "Y12"}], ",", 
   RowBox[{"X2", "+", "Y12", "+", "Y23"}], ",", 
   RowBox[{"X3", "+", "Y23"}], ",", 
   RowBox[{"X1", "+", "X2", "+", "X3"}], ",", 
   RowBox[{"X1", "+", "X2", "+", "Y23"}], ",", 
   RowBox[{"X2", "+", "X3", "+", "Y12"}], ",", 
   RowBox[{"X1", "-", "Y12"}], ",", 
   RowBox[{"X2", "-", "Y12", "+", "Y23"}], ",", 
   RowBox[{"X2", "+", "Y12", "-", "Y23"}], ",", 
   RowBox[{"X2", "-", "Y12", "-", "Y23"}], ",", 
   RowBox[{"X3", "-", "Y23"}], ",", 
   RowBox[{"X1", "+", "X2", "-", "Y23"}], ",", 
   RowBox[{"X2", "+", "X3", "-", "Y12"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9095407815752697`*^9, 3.909540797622554*^9}, {
   3.9095409879657183`*^9, 3.9095410013686237`*^9}, {3.909541359713238*^9, 
   3.909541377669732*^9}, 3.9109945907682333`*^9, 3.910994636779243*^9, 
   3.9185728040238943`*^9, {3.919139856695547*^9, 3.919139885195725*^9}},
 CellLabel->
  "Out[138]=",ExpressionUUID->"0e931ccf-b57f-4057-816f-6b9528b60bc7"]
}, Open  ]],

Cell["Three-letter relations:", "Text",
 CellChangeTimes->{{3.909268304092073*^9, 3.9092683094050903`*^9}, {
  3.9095409287365923`*^9, 
  3.90954093292906*^9}},ExpressionUUID->"57e23d26-3582-4e3a-9cec-\
699774aff62a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rlist", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "9", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "11", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "10", ",", "13"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dLsub", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["dL", 
          RowBox[{"Blist", "[", 
           RowBox[{"[", 
            RowBox[{"Rlist", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}]], 
         "\[Wedge]", 
         SubscriptBox["dL", 
          RowBox[{"Blist", "[", 
           RowBox[{"[", 
            RowBox[{"Rlist", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "]"}]]}], "->", 
        RowBox[{
         SubscriptBox["R", "i"], "-", 
         RowBox[{
          SubscriptBox["dL", 
           RowBox[{"Blist", "[", 
            RowBox[{"[", 
             RowBox[{"Rlist", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "]"}]], 
          "\[Wedge]", 
          SubscriptBox["dL", 
           RowBox[{"Blist", "[", 
            RowBox[{"[", 
             RowBox[{"Rlist", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], "]"}]]}], "-", 
         RowBox[{
          SubscriptBox["dL", 
           RowBox[{"Blist", "[", 
            RowBox[{"[", 
             RowBox[{"Rlist", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], "]"}]], 
          "\[Wedge]", 
          SubscriptBox["dL", 
           RowBox[{"Blist", "[", 
            RowBox[{"[", 
             RowBox[{"Rlist", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}]]}]}]}], "/.",
        "Bsub"}], "//", "dLsimp"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "Rlist"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.909539749150128*^9, 3.909539829064178*^9}, 
   3.909540073484432*^9, {3.909540806062566*^9, 3.9095408109978523`*^9}, 
   3.909540859417101*^9, {3.909541639503501*^9, 3.9095416517854967`*^9}, {
   3.910994634185349*^9, 3.910994634705346*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"379282da-9996-4888-bf67-41a148864645"],

Cell[TextData[{
 "Taking ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["d", "2"], TraditionalForm]],ExpressionUUID->
  "cc91cf7e-6d8e-4c9a-9d7d-1f49fd192035"],
 ":"
}], "Text",
 CellChangeTimes->{{3.909268801053568*^9, 
  3.909268815743663*^9}},ExpressionUUID->"1e23229e-36ea-422d-a0a4-\
55d65f8c6dbc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dfsub", "=", 
   RowBox[{
    RowBox[{"dfeq", "/.", 
     RowBox[{
      RowBox[{"a_", "==", "b_"}], ":>", 
      RowBox[{"a", "->", "b"}]}]}], "/.", "Bsub"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddeq", "=", 
   RowBox[{
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"d", "[", 
        SubscriptBox["f", 
         RowBox[{
          RowBox[{"nn", "[", 
           RowBox[{"[", "l", "]"}], "]"}], "[", 
          RowBox[{"[", "m", "]"}], "]"}]], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"nn", "[", 
           RowBox[{"[", "l", "]"}], "]"}]}]}], "}"}]}], "]"}]}], "/.", 
    RowBox[{
     RowBox[{"d", "[", "f_", "]"}], ":>", 
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "f", "]"}], "==", 
      RowBox[{"dd", "[", "f", "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.9095055050004463`*^9, 3.909505576546526*^9, {3.90953594278189*^9, 
   3.909535945106882*^9}, {3.9095395288973017`*^9, 3.909539561421508*^9}, 
   3.909540099903453*^9, 3.909541672481244*^9},
 CellLabel->
  "In[141]:=",ExpressionUUID->"1ec76cb4-ab54-4999-94f8-9cb8232b5e2d"],

Cell["Substituting the three-letter relations:", "Text",
 CellChangeTimes->{{3.896204986768929*^9, 3.896204993841345*^9}, {
  3.896205058505052*^9, 3.8962050591540956`*^9}, {3.896205090628489*^9, 
  3.896205091329484*^9}, {3.8962053105657663`*^9, 3.896205311226162*^9}, {
  3.909268431723091*^9, 3.909268455604525*^9}, {3.909268819328106*^9, 
  3.909268822525887*^9}, {3.909540937331767*^9, 
  3.909540937610239*^9}},ExpressionUUID->"923f3398-03b2-49a5-a88d-\
d6d029ed132b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ddeq", "/.", "fsub"}], "/.", "dLsub"}], "//", "Column"}]], "Input",\

 CellChangeTimes->{{3.8962049808385973`*^9, 3.896204981837256*^9}, 
   3.8962050722775784`*^9, {3.896211027592043*^9, 3.896211029254698*^9}, {
   3.896913549470702*^9, 3.8969135651677313`*^9}, 3.90950551967117*^9, 
   3.9095055891314573`*^9, 3.909541678161273*^9},
 CellLabel->
  "In[143]:=",ExpressionUUID->"35035224-3284-4576-8098-d51d5f0397d6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "\<\"\[Psi]\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["R", "5"], "+", 
          SubscriptBox["R", "6"]}], ")"}]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["R", "7"], "-", 
          SubscriptBox["R", "8"]}], ")"}]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["R", "9"], "+", 
          SubscriptBox["R", "10"]}], ")"}]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["R", "11"]}], "-", 
          SubscriptBox["R", "12"]}], ")"}]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "\<\"F\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["R", "1"]}], "+", 
          SubscriptBox["R", "2"]}], ")"}]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>", " ", 
        SubscriptBox["R", "5"]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["R", "7"]}], "+", 
       RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["R", "9"], "+", 
          SubscriptBox["R", "10"]}], ")"}]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*OverscriptBox[\\(F\\), \\(~\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["R", "3"]}], "+", 
          SubscriptBox["R", "4"]}], ")"}]}], "+", 
       RowBox[{"\<\"g\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["R", "5"], "+", 
          SubscriptBox["R", "6"]}], ")"}]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>", " ", 
        SubscriptBox["R", "9"]}], "-", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", " ", 
        SubscriptBox["R", "11"]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(1\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["R", "1"]}], "-", 
          SubscriptBox["R", "4"]}], ")"}]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>", " ", 
        SubscriptBox["R", "6"]}], "-", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", " ", 
        SubscriptBox["R", "11"]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["R", "2"], "+", 
          SubscriptBox["R", "4"]}], ")"}]}], "-", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["R", "8"]}], "-", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", " ", 
        SubscriptBox["R", "12"]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(3\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["R", "2"]}], "-", 
          SubscriptBox["R", "3"]}], ")"}]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["R", "7"]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>", " ", 
        SubscriptBox["R", "10"]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "\<\"f\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["R", "1"]}], "-", 
          SubscriptBox["R", "3"]}], ")"}]}], "+", 
       RowBox[{"\<\"g\"\>", " ", 
        SubscriptBox["R", "5"]}], "+", 
       RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", " ", 
        SubscriptBox["R", "9"]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\<\"Z\"\>", " ", 
       SubscriptBox["R", "1"]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{"2", " ", "\<\"Z\"\>", " ", 
       SubscriptBox["R", "2"]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(3\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["R", "2"]}], "-", 
          SubscriptBox["R", "3"]}], ")"}]}], "+", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)\"\>", " ", 
        SubscriptBox["R", "7"]}], "+", 
       RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", " ", 
        SubscriptBox["R", "10"]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(3\\)]\\)\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"\<\"Z\"\>", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["R", "1"]}], "-", 
          SubscriptBox["R", "4"]}], ")"}]}], "+", 
       RowBox[{"\<\"g\"\>", " ", 
        SubscriptBox["R", "6"]}], "-", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", " ", 
        SubscriptBox["R", "11"]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(2\\)]\\)\"\>", "]"}], "\[Equal]", 
      RowBox[{"2", " ", "\<\"Z\"\>", " ", 
       SubscriptBox["R", "4"]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(q\\), \\(~\\)], \
\\(1\\)]\\)\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\<\"Z\"\>", " ", 
       SubscriptBox["R", "3"]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "\<\"g\"\>", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\<\"Z\"\>", " ", 
       SubscriptBox["R", "1"]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], "[", "\<\"Z\"\>", "]"}], "\[Equal]", "0"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       "[", "\<\"\\!\\(\\*OverscriptBox[\\(g\\), \\(~\\)]\\)\"\>", "]"}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\<\"Z\"\>", " ", 
       SubscriptBox["R", "3"]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.8962049820198517`*^9, {3.896205059893553*^9, 3.896205092932783*^9}, 
   3.896205312443021*^9, 3.8962096521970463`*^9, 3.8962104555092688`*^9, 
   3.896210894006268*^9, {3.896211003555757*^9, 3.896211029435384*^9}, 
   3.8962111702554617`*^9, 3.896217507724997*^9, 3.896233702874847*^9, {
   3.896913558913859*^9, 3.89691356538304*^9}, 3.905003987994032*^9, 
   3.905004104969151*^9, 3.905004201505341*^9, 3.905270033234776*^9, 
   3.9052701913932657`*^9, 3.905270243563046*^9, 3.905270309817803*^9, 
   3.905434737366107*^9, 3.9056831351529493`*^9, 3.905870518613737*^9, 
   3.905885872086441*^9, 3.905886097176034*^9, 3.9058862135967817`*^9, 
   3.905958683305436*^9, 3.908978611191774*^9, {3.9095055363067303`*^9, 
   3.90950554654587*^9}, {3.909505578125959*^9, 3.909505594640564*^9}, 
   3.909505655039954*^9, 3.909505936689144*^9, 3.9095315654560633`*^9, 
   3.909531661643173*^9, 3.909535952189604*^9, 3.9095395762118053`*^9, 
   3.909539924262245*^9, 3.909540107303485*^9, {3.9095408525435743`*^9, 
   3.909540862406912*^9}, {3.909540988028349*^9, 3.909541001440193*^9}, 
   3.909541681626947*^9, 3.910994590833146*^9, 3.910994636849765*^9, 
   3.918572804232678*^9, {3.919139856872385*^9, 3.9191398853487864`*^9}},
 CellLabel->
  "Out[143]=",ExpressionUUID->"020c0919-6f89-4fae-a033-6502adb253ce"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symbol", "Subsection",
 CellChangeTimes->{{3.905885889127222*^9, 3.905885899669959*^9}, 
   3.9095072995480127`*^9, 
   3.909541818508711*^9},ExpressionUUID->"1e8faa0b-d507-467a-bb5b-\
eac09a2659ba"],

Cell["A matrix in the dS limit:", "Text",
 CellChangeTimes->{{3.909541776822009*^9, 
  3.9095417864891787`*^9}},ExpressionUUID->"0c5d1308-6e58-43e5-b916-\
d74c7fe75052"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"flist2", "=", 
   RowBox[{"flist", "/.", 
    RowBox[{
     SubscriptBox["f", "a_"], ":>", 
     RowBox[{
      SuperscriptBox["\[Epsilon]", 
       RowBox[{"-", 
        RowBox[{"Length", "@", "a"}]}]], 
      SubscriptBox["f", "a"]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", 
      FractionBox[
       RowBox[{"Amtx", ".", "flist2"}], 
       RowBox[{"flist2", "/.", 
        RowBox[{
         SubscriptBox["f", "__"], "->", "1"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], "//", 
   "Normal"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Amtxeps0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "flist"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       SuperscriptBox["4", 
        RowBox[{"nsite", "-", "1"}]]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.905003875862096*^9, 3.905003934439176*^9}, {
  3.905004028898918*^9, 3.905004043880624*^9}, {3.905004151604141*^9, 
  3.905004160963085*^9}, {3.9050042308008213`*^9, 3.9050042689740753`*^9}, {
  3.910105306588333*^9, 3.910105306992681*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"1313a47e-1dcf-4a99-bab1-fcb183d63533"],

Cell["Symbol from differential equations:", "Text",
 CellChangeTimes->{{3.909541794121478*^9, 
  3.909541800896603*^9}},ExpressionUUID->"4db49810-17d8-42d2-9229-\
de5ae1e91d4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPhi]sub", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"letters", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", 
      RowBox[{"\[CapitalPhi]", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "letters"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sym3", "=", 
   RowBox[{"S", "/@", "flist"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.905885926820002*^9, 3.90588593511747*^9}, {
  3.905886198362693*^9, 3.905886198639283*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"dde25382-682c-4091-8e78-0fd3e0ab521f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Amtxeps0", ".", "flist"}], "/.", "\[CapitalPhi]sub"}], "/.", 
     RowBox[{
      SubscriptBox["dL", "a_"], ":>", 
      RowBox[{"dLog", "[", "a", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{
      RowBox[{"dLog", "[", "a_", "]"}], "-", 
      RowBox[{"dLog", "[", "b_", "]"}]}], ":>", 
     RowBox[{"dLog", "[", 
      RowBox[{"a", "/", "b"}], "]"}]}]}], "/.", 
   RowBox[{
    SubscriptBox["f", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       SubscriptBox["2", "n_"], ",", "3"}], "}"}]], ":>", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "n"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A3eq", "=", 
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{
      RowBox[{
       SubscriptBox["f", "a_"], 
       RowBox[{"dLog", "[", "x_", "]"}]}], ":>", 
      RowBox[{
       RowBox[{"S", "[", 
        SubscriptBox["f", "a"], "]"}], "\[CircleTimes]", "x"}]}]}], "/.", " ", 
    RowBox[{
     RowBox[{"dLog", "[", "x_", "]"}], ":>", "x"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Symrule", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sym3", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", 
      RowBox[{"%", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "16"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.905885999577129*^9, 3.905886053730645*^9}, {
   3.905886105416738*^9, 3.905886126274975*^9}, {3.909507849198357*^9, 
   3.909507856505982*^9}, 3.909516462610209*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"e6f06f48-db89-4fb6-9041-0ce7400d3230"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sdiff", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"A3eq", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "//.", "Symrule"}], "//", 
   "TensorSimp"}]}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.905886038637837*^9, 3.905886080482541*^9}, {
  3.905886112345737*^9, 3.9058861326367493`*^9}, {3.909507867761402*^9, 
  3.909507910850814*^9}, {3.909516467460025*^9, 3.909516471483156*^9}, {
  3.909541743524955*^9, 3.909541744054613*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"b23dafce-0ae9-4216-865c-ae3b563d07e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.905886039274074*^9, 3.9058861330488*^9}, 
   3.905886213936308*^9, 3.9095058652615957`*^9, 3.909507303997395*^9, {
   3.909507865747232*^9, 3.909507911092058*^9}, 3.909508673167213*^9, {
   3.9095088537814302`*^9, 3.909508883699882*^9}, 3.909509164321583*^9, {
   3.909516460943915*^9, 3.9095164717142677`*^9}, 3.909531565555089*^9, 
   3.909539924301042*^9, 3.9095408886103497`*^9, {3.909541721269147*^9, 
   3.90954174423764*^9}, 3.910994590880336*^9, 3.910994636885997*^9, 
   3.918572804355673*^9, {3.919139856945778*^9, 3.919139885441392*^9}},
 CellLabel->
  "Out[152]=",ExpressionUUID->"e1d03b08-e8d1-4e90-9119-9f8e1dc4726f"],

Cell[BoxData["104"], "Output",
 CellChangeTimes->{{3.905886039274074*^9, 3.9058861330488*^9}, 
   3.905886213936308*^9, 3.9095058652615957`*^9, 3.909507303997395*^9, {
   3.909507865747232*^9, 3.909507911092058*^9}, 3.909508673167213*^9, {
   3.9095088537814302`*^9, 3.909508883699882*^9}, 3.909509164321583*^9, {
   3.909516460943915*^9, 3.9095164717142677`*^9}, 3.909531565555089*^9, 
   3.909539924301042*^9, 3.9095408886103497`*^9, {3.909541721269147*^9, 
   3.90954174423764*^9}, 3.910994590880336*^9, 3.910994636885997*^9, 
   3.918572804355673*^9, {3.919139856945778*^9, 3.919139885446197*^9}},
 CellLabel->
  "Out[153]=",ExpressionUUID->"c8cf0e08-7391-426e-a09e-5798bd716086"]
}, Open  ]],

Cell["Symbol from discontinuity:", "Text",
 CellChangeTimes->{{3.905886142578829*^9, 3.9058861681778708`*^9}, {
  3.9095073054390574`*^9, 3.909507306383823*^9}, {3.909541726935986*^9, 
  3.909541730482288*^9}},ExpressionUUID->"e371a151-6246-4e62-85ae-\
f693f609bb35"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sym", "[", "1", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"X1", "+", "Y1"}], 
        RowBox[{"X1", "+", "X2", "+", "X3"}]], ")"}], "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"X3", "+", "Y2"}], 
          RowBox[{"X3", "+", "X2", "-", "Y1"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X2", "-", "Y1", "-", "Y2"}], 
          RowBox[{"X2", "-", "Y1", "+", "Y2"}]]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"X2", "-", "Y1", "+", "Y2"}], 
          RowBox[{"X3", "+", "X2", "-", "Y1"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X3", "-", "Y2"}], 
          RowBox[{"X3", "+", "Y2"}]]}], "-", 
        RowBox[{
         FractionBox[
          RowBox[{"X3", "+", "Y2"}], 
          RowBox[{"X3", "+", "X2", "+", "Y1"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X2", "+", "Y1", "-", "Y2"}], 
          RowBox[{"X2", "+", "Y1", "+", "Y2"}]]}], "-", 
        RowBox[{
         FractionBox[
          RowBox[{"X2", "+", "Y1", "+", "Y2"}], 
          RowBox[{"X3", "+", "X2", "+", "Y1"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X3", "-", "Y2"}], 
          RowBox[{"X3", "+", "Y2"}]]}]}], ")"}]}], "/.", 
     RowBox[{"Y1", "->", "Y12"}]}], "/.", 
    RowBox[{"Y2", "->", "Y23"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sym", "[", "2", "]"}], "=", 
   RowBox[{
    RowBox[{"sym", "[", "1", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X1", "->", "X3"}], ",", 
      RowBox[{"X3", "->", "X1"}], ",", 
      RowBox[{"Y12", "->", "Y23"}], ",", 
      RowBox[{"Y23", "->", "Y12"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sym", "[", "3", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"X1", "+", "X2", "+", "Y2"}], 
        RowBox[{"X1", "+", "X2", "+", "X3"}]]}], "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"X1", "-", "Y1"}], 
          RowBox[{"X1", "+", "Y1"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X3", "-", "Y2"}], 
          RowBox[{"X3", "+", "Y2"}]]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"X3", "-", "Y2"}], 
          RowBox[{"X3", "+", "Y2"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X1", "-", "Y1"}], 
          RowBox[{"X1", "+", "Y1"}]]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"X2", "+", "Y2", "-", "Y1"}], 
          RowBox[{"X2", "+", "Y2", "+", "Y1"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X3", "-", "Y2"}], 
          RowBox[{"X3", "+", "Y2"}]]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"X3", "-", "Y2"}], 
          RowBox[{"X3", "+", "Y2"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X2", "+", "Y2", "-", "Y1"}], 
          RowBox[{"X2", "+", "Y2", "+", "Y1"}]]}]}], ")"}]}], "/.", 
     RowBox[{"Y1", "->", "Y12"}]}], "/.", 
    RowBox[{"Y2", "->", "Y23"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sym", "[", "4", "]"}], "=", 
   RowBox[{
    RowBox[{"sym", "[", "3", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X1", "->", "X3"}], ",", 
      RowBox[{"X3", "->", "X1"}], ",", 
      RowBox[{"Y12", "->", "Y23"}], ",", 
      RowBox[{"Y23", "->", "Y12"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sym", "[", "5", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"X2", "+", "Y1", "+", "Y2"}], 
       RowBox[{"X1", "+", "X2", "+", "X3"}]], "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"X1", "-", "Y1"}], 
          RowBox[{"X1", "+", "Y1"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X3", "-", "Y2"}], 
          RowBox[{"X3", "+", "Y2"}]]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"X3", "-", "Y2"}], 
          RowBox[{"X3", "+", "Y2"}]], "\[CircleTimes]", 
         FractionBox[
          RowBox[{"X1", "-", "Y1"}], 
          RowBox[{"X1", "+", "Y1"}]]}]}], ")"}]}], "/.", 
     RowBox[{"Y1", "->", "Y12"}]}], "/.", 
    RowBox[{"Y2", "->", "Y23"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9058827409062433`*^9, 3.905882925679015*^9}, {
   3.905882971580348*^9, 3.905883119935144*^9}, {3.9058836444518433`*^9, 
   3.90588372773728*^9}, {3.9058838626527367`*^9, 3.9058838675348473`*^9}, {
   3.9058840659734697`*^9, 3.905884094569964*^9}, 3.905884181655539*^9, {
   3.905885838840714*^9, 3.905885841725309*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"8f4a1ea9-f82b-43d8-a391-1f721633725c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sdisc", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"sym", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "5"}], "}"}]}], "]"}], "/.", "\[CapitalPhi]sub"}], "//",
    "TensorSimp"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.909508567313888*^9, 3.9095085716660852`*^9}, 
   3.909508634908895*^9, {3.909508726134136*^9, 3.9095087272077837`*^9}, {
   3.9095417343580103`*^9, 3.909541735331378*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"cc0b4960-8c4b-479c-a093-2283d938eca4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "3", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "5", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "8", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "6", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "9", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "12", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "10", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "7", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}], "-", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "13", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "11", "]"}], "\[CircleTimes]", 
   RowBox[{"\[CapitalPhi]", "[", "4", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.909508566297647*^9, 3.9095085780907373`*^9}, 
   3.909508641364149*^9, {3.909508676098411*^9, 3.90950872743919*^9}, {
   3.9095088642836227`*^9, 3.90950888556841*^9}, 3.90950916656777*^9, 
   3.909531565628869*^9, 3.909539924324223*^9, 3.90954089197923*^9, {
   3.9095417368162403`*^9, 3.909541738461997*^9}, 3.910994590898473*^9, 
   3.910994636891809*^9, 3.918572804438854*^9, {3.919139856981353*^9, 
   3.919139885489587*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"ca1788f9-32b7-4c6f-ac51-016528436871"],

Cell[BoxData["104"], "Output",
 CellChangeTimes->{{3.909508566297647*^9, 3.9095085780907373`*^9}, 
   3.909508641364149*^9, {3.909508676098411*^9, 3.90950872743919*^9}, {
   3.9095088642836227`*^9, 3.90950888556841*^9}, 3.90950916656777*^9, 
   3.909531565628869*^9, 3.909539924324223*^9, 3.90954089197923*^9, {
   3.9095417368162403`*^9, 3.909541738461997*^9}, 3.910994590898473*^9, 
   3.910994636891809*^9, 3.918572804438854*^9, {3.919139856981353*^9, 
   3.919139885494935*^9}},
 CellLabel->
  "Out[160]=",ExpressionUUID->"748dd81a-03ae-4306-8d83-3fbdb21763fd"]
}, Open  ]],

Cell["We get the same symbols:", "Text",
 CellChangeTimes->{{3.9058861802099743`*^9, 3.90588618293414*^9}, {
  3.905886227074047*^9, 3.905886238770105*^9}, {3.909507309400366*^9, 
  3.909507309940913*^9}},ExpressionUUID->"ad3cfcbf-e06c-4434-93bc-\
0ca3c578ee5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sdiff", "-", "Sdisc"}]], "Input",
 CellLabel->
  "In[161]:=",ExpressionUUID->"7ac6a7ca-e10a-4dd4-984f-71f23b86fc85"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.9095417535849648`*^9, 3.910994590909449*^9, 3.910994636893922*^9, 
   3.9185728044750357`*^9, {3.919139857006247*^9, 3.919139885526607*^9}},
 CellLabel->
  "Out[161]=",ExpressionUUID->"49a74958-c5c3-46b0-be74-d410962c33eb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1378.5, 762.},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
SpellingDictionaries->{"CorrectWords"->{
 "Correlators", "correlator", "Guilherme", "Pimentel", "Arkani"}},
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6f5e7e29-f0fb-4be3-ba35-9b8a525f5645"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 205, 2, 87, "Title",ExpressionUUID->"b78a374b-eb1b-41cf-9d61-8de124bf5707"],
Cell[788, 26, 545, 8, 43, "Subtitle",ExpressionUUID->"1292d6b1-8c4c-4cbe-9471-9a952df4bdc8"],
Cell[1336, 36, 459, 9, 51, "Input",ExpressionUUID->"4d2088c1-a9d9-4c01-9d2a-dd1568eff458"],
Cell[1798, 47, 1732, 44, 96, "Input",ExpressionUUID->"74e43459-c939-44bc-b8b5-10ac5c6435b1"],
Cell[CellGroupData[{
Cell[3555, 95, 159, 3, 68, "Section",ExpressionUUID->"7f7450c7-ec94-420c-9129-a4f05660e373"],
Cell[CellGroupData[{
Cell[3739, 102, 159, 3, 54, "Subsection",ExpressionUUID->"cbcb5a31-a2e3-4f45-b036-d04313868401"],
Cell[3901, 107, 149, 3, 29, "Input",ExpressionUUID->"890e176f-26a6-4ae7-8bf4-34ae7716bcba"],
Cell[4053, 112, 164, 3, 35, "Text",ExpressionUUID->"2235ab6f-b50f-450f-9f18-74ee8dfeeab5"],
Cell[CellGroupData[{
Cell[4242, 119, 2807, 71, 216, "Input",ExpressionUUID->"f96f4e5a-c750-4c63-895a-a8e92ee0769f"],
Cell[7052, 192, 2117, 33, 33, "Output",ExpressionUUID->"801ceb73-5bee-43e6-a488-e3a2909217ee"]
}, Open  ]],
Cell[9184, 228, 159, 3, 35, "Text",ExpressionUUID->"033ebfaf-31af-4c76-ab2a-96cb0903f3ab"],
Cell[CellGroupData[{
Cell[9368, 235, 1787, 56, 113, "Input",ExpressionUUID->"f6ab3584-0915-4c87-a212-177007f0ef75"],
Cell[11158, 293, 815, 16, 33, "Output",ExpressionUUID->"27e1a33a-64d3-40ba-abca-2acd8c6f94b3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12022, 315, 264, 4, 54, "Subsection",ExpressionUUID->"c8584851-8ea1-432c-ade7-e9e30270c5d1"],
Cell[CellGroupData[{
Cell[12311, 323, 288, 5, 45, "Subsubsection",ExpressionUUID->"391b7521-0f68-4c76-bc34-69e45e2e3c57"],
Cell[12602, 330, 158, 3, 35, "Text",ExpressionUUID->"30b4ef61-ccea-410b-abcf-0af810ea12da"],
Cell[CellGroupData[{
Cell[12785, 337, 1000, 29, 51, "Input",ExpressionUUID->"3e03a8c7-8ec3-4d42-acbf-66ec762b2a72"],
Cell[13788, 368, 793, 16, 70, "Output",ExpressionUUID->"712c517f-eb25-47a6-b970-5675453dd4e8"]
}, Open  ]],
Cell[14596, 387, 212, 5, 35, "Text",ExpressionUUID->"087f09a7-f701-40a8-8e91-9c7fb437bc3e"],
Cell[CellGroupData[{
Cell[14833, 396, 203, 3, 29, "Input",ExpressionUUID->"fe73fc92-e5b6-462f-8ef7-7ffe7ab0f340"],
Cell[15039, 401, 2324, 57, 70, "Print",ExpressionUUID->"50bca968-5084-4e46-8a8a-c088322af549"],
Cell[17366, 460, 868, 17, 70, "Output",ExpressionUUID->"4db7f0c0-ee2b-4924-acd4-b0b6fed38a0c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[18283, 483, 194, 3, 37, "Subsubsection",ExpressionUUID->"de5f8129-1e28-4033-88e7-06d696744e97"],
Cell[18480, 488, 179, 3, 35, "Text",ExpressionUUID->"be6221b7-9e35-462a-80cf-e7c04f5b31e0"],
Cell[18662, 493, 583, 15, 51, "Input",ExpressionUUID->"4152b70c-ced0-44cb-9276-980730ead6a9"],
Cell[19248, 510, 155, 3, 35, "Text",ExpressionUUID->"25e03673-27c8-491b-a29d-22c300fc8b78"],
Cell[19406, 515, 737, 15, 45, "Input",ExpressionUUID->"9f78cec4-a6cd-413b-be91-e455fcdda3c9"],
Cell[20146, 532, 220, 4, 35, "Text",ExpressionUUID->"6da4caaa-6db9-4a88-ab6f-2b2285d4653e"],
Cell[CellGroupData[{
Cell[20391, 540, 2561, 80, 114, "Input",ExpressionUUID->"5e1d7a13-7e07-49d7-919e-7cc4577f4361"],
Cell[22955, 622, 1461, 25, 70, "Output",ExpressionUUID->"ec77c701-9711-4d3d-9e46-85790af8bc78"],
Cell[24419, 649, 2144, 44, 70, "Output",ExpressionUUID->"10557a3e-dca7-4ea4-a068-a5fc2d5fce09"],
Cell[26566, 695, 1733, 33, 70, "Output",ExpressionUUID->"e9a633da-8aaf-4bc4-aed7-eed0a82f734e"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[28360, 735, 354, 9, 39, "Subsection",ExpressionUUID->"29d52697-9a80-41da-858f-34a1328e0343"],
Cell[28717, 746, 249, 4, 35, "Text",ExpressionUUID->"e8ce7204-b085-4549-8d17-e703ed7d8e3b"],
Cell[CellGroupData[{
Cell[28991, 754, 1231, 36, 72, "Input",ExpressionUUID->"30bffaff-d7b3-40e5-b80b-72b937cc92cf"],
Cell[30225, 792, 654, 19, 34, "Output",ExpressionUUID->"779b60e3-3977-4204-9761-1ce77d214917"]
}, Open  ]],
Cell[30894, 814, 181, 3, 35, "Text",ExpressionUUID->"495be4b5-98e1-44c8-bbcc-0fdeb704c9b9"],
Cell[CellGroupData[{
Cell[31100, 821, 2847, 81, 72, "Input",ExpressionUUID->"7902f8b7-db81-4dc7-937e-5993530dad4e"],
Cell[33950, 904, 1903, 49, 34, "Output",ExpressionUUID->"384430bd-e16f-40b6-8073-5986349d47f8"]
}, Open  ]],
Cell[35868, 956, 314, 8, 35, "Text",ExpressionUUID->"b961333c-ac52-4943-bef4-9c4d03cef19c"],
Cell[36185, 966, 896, 22, 52, "Input",ExpressionUUID->"128d144a-958a-449f-a256-d65b64296eae"],
Cell[37084, 990, 155, 3, 35, "Text",ExpressionUUID->"f0201269-962a-4945-a866-e4abc3e5e3e1"],
Cell[CellGroupData[{
Cell[37264, 997, 278, 5, 29, "Input",ExpressionUUID->"9373d21b-9698-4b5f-b419-489b4a1d21c4"],
Cell[37545, 1004, 511, 11, 54, "Output",ExpressionUUID->"caee8f7b-fbba-4f6b-9b33-cecd19f102de"]
}, Open  ]],
Cell[38071, 1018, 175, 3, 35, "Text",ExpressionUUID->"b47117cb-ba62-4318-ad5a-9d14bb058175"],
Cell[38249, 1023, 397, 8, 32, "Input",ExpressionUUID->"3ea9d14b-58cd-4716-a62c-5c6d95fd5fab"],
Cell[CellGroupData[{
Cell[38671, 1035, 359, 7, 51, "Input",ExpressionUUID->"dcdccc53-43dc-4071-a705-95429c560d5b"],
Cell[39033, 1044, 941, 25, 54, "Output",ExpressionUUID->"30882f6d-afbf-4533-aed6-59b6c9f2f736"],
Cell[39977, 1071, 647, 15, 60, "Output",ExpressionUUID->"2d1cae61-60d4-48ef-b173-5bfd8b4e41f4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40673, 1092, 221, 4, 54, "Subsection",ExpressionUUID->"3b634764-f383-43d8-8dc4-f27f0349ea23"],
Cell[40897, 1098, 872, 24, 54, "Input",ExpressionUUID->"dbef8c0c-b3f4-4029-b5b1-9544c7cab512"],
Cell[CellGroupData[{
Cell[41794, 1126, 716, 20, 52, "Input",ExpressionUUID->"4a028c51-4242-4160-b17c-639ae75b7fc3"],
Cell[42513, 1148, 2665, 74, 70, "Output",ExpressionUUID->"db75c33c-75c8-44d9-8bec-952c1687c3a8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[45227, 1228, 204, 4, 38, "Subsection",ExpressionUUID->"e3d0f411-4b65-434a-b724-b609c8708f79"],
Cell[45434, 1234, 1083, 28, 54, "Input",ExpressionUUID->"1448e7ed-360c-40b0-b8b2-a93d5fb4a442"],
Cell[46520, 1264, 1263, 35, 54, "Input",ExpressionUUID->"5e7b6d15-2cbb-41ef-92cf-b4ac7e9c2884"],
Cell[CellGroupData[{
Cell[47808, 1303, 207, 3, 30, "Input",ExpressionUUID->"45920ad0-17d9-4910-9553-97f3de289b45"],
Cell[48018, 1308, 2339, 67, 70, "Output",ExpressionUUID->"5362f04b-9da4-489b-8ba3-5bfe9c02380b"]
}, Open  ]],
Cell[50372, 1378, 161, 3, 35, "Text",ExpressionUUID->"94541ef6-0478-49be-b759-5462e08a5dbe"],
Cell[CellGroupData[{
Cell[50558, 1385, 1691, 49, 117, "Input",ExpressionUUID->"2ffd1205-9fd6-47db-8d45-d638f3467604"],
Cell[52252, 1436, 588, 9, 70, "Output",ExpressionUUID->"19b97fb3-485d-46d9-bfcb-593fabef589d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[52889, 1451, 331, 8, 37, "Subsection",ExpressionUUID->"a1e27523-f08b-4e1c-ba2e-76780da8707f"],
Cell[53223, 1461, 172, 3, 35, "Text",ExpressionUUID->"78076a22-5ef0-4271-a5f6-0177368e627b"],
Cell[53398, 1466, 4897, 113, 146, "Input",ExpressionUUID->"b757a75d-7e39-43c3-a632-d613b4fef752"],
Cell[58298, 1581, 215, 4, 35, "Text",ExpressionUUID->"b191f63f-7a00-472b-8438-41098ce44ee4"],
Cell[CellGroupData[{
Cell[58538, 1589, 2915, 80, 94, "Input",ExpressionUUID->"e63a62e0-de86-4edf-93a0-11e7ed6c1d8b"],
Cell[61456, 1671, 2822, 60, 70, "Output",ExpressionUUID->"93b8b317-f302-428f-b20f-4748cc5a32a2"],
Cell[64281, 1733, 1864, 26, 70, "Output",ExpressionUUID->"18485ba3-dbdf-4654-b942-443ccbe1fd49"]
}, Open  ]],
Cell[66160, 1762, 334, 11, 35, "Text",ExpressionUUID->"e4b24a7c-7eba-4fd2-9b3d-f902394991b1"],
Cell[66497, 1775, 1540, 39, 54, "Input",ExpressionUUID->"7d199948-2f69-4aed-92d6-628ce86e40b1"],
Cell[68040, 1816, 421, 6, 35, "Text",ExpressionUUID->"b9021069-d4f8-4f36-bd74-3ac7e7956cbc"],
Cell[CellGroupData[{
Cell[68486, 1826, 565, 11, 30, "Input",ExpressionUUID->"36909dde-6986-4403-9532-94a1143bdfb1"],
Cell[69054, 1839, 2344, 52, 70, "Output",ExpressionUUID->"ab0a043e-4e65-49ee-8067-5d6be59b7cdc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[71447, 1897, 205, 4, 38, "Subsection",ExpressionUUID->"472be9a9-c177-4600-a911-42d8a00d6336"],
Cell[71655, 1903, 169, 3, 35, "Text",ExpressionUUID->"9bf1b276-04de-4cd1-aec4-7a102700d74b"],
Cell[CellGroupData[{
Cell[71849, 1910, 1568, 43, 119, "Input",ExpressionUUID->"9f4ec3f7-45aa-4497-8c6e-37c06c1a7428"],
Cell[73420, 1955, 1391, 43, 70, "Output",ExpressionUUID->"c164122a-3bc7-44c9-9fa3-413eb706af95"]
}, Open  ]],
Cell[74826, 2001, 177, 3, 35, "Text",ExpressionUUID->"7fdbe502-93ab-4b01-b1e2-a892d23746fd"],
Cell[75006, 2006, 1816, 53, 93, "Input",ExpressionUUID->"2e931894-255e-4f2d-b1b3-52ae7eb95501"],
Cell[CellGroupData[{
Cell[76847, 2063, 570, 12, 29, "Input",ExpressionUUID->"5710833f-769e-495a-b505-d611d8367aff"],
Cell[77420, 2077, 1196, 26, 70, "Output",ExpressionUUID->"6b434c5e-9c89-439c-be86-e70c5da324bb"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78677, 2110, 176, 3, 68, "Section",ExpressionUUID->"4475ec26-3232-47dc-a502-08633c458b73"],
Cell[CellGroupData[{
Cell[78878, 2117, 159, 3, 54, "Subsection",ExpressionUUID->"6bf76658-d716-4be9-ad44-06351ab4d375"],
Cell[79040, 2122, 150, 3, 29, "Input",ExpressionUUID->"a72c6f40-e52d-48ad-a4c0-ddf437eb5500"],
Cell[79193, 2127, 164, 3, 35, "Text",ExpressionUUID->"c3c2af8d-ad48-4401-8625-2fdc91255d9c"],
Cell[CellGroupData[{
Cell[79382, 2134, 2808, 71, 216, "Input",ExpressionUUID->"b59489a8-df7c-4219-b02b-dd4895995e77"],
Cell[82193, 2207, 2116, 33, 70, "Output",ExpressionUUID->"8727ce42-65b4-474c-9030-9059d48003c5"]
}, Open  ]],
Cell[84324, 2243, 159, 3, 35, "Text",ExpressionUUID->"f32a5788-8090-42a7-a518-9c5975acce9e"],
Cell[CellGroupData[{
Cell[84508, 2250, 1787, 56, 113, "Input",ExpressionUUID->"07a9d6e7-770e-41da-9298-0b37880b994f"],
Cell[86298, 2308, 815, 16, 70, "Output",ExpressionUUID->"f5a9785d-2eb2-4637-96a2-26411c0e2de6"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87174, 2331, 209, 4, 68, "Section",ExpressionUUID->"f8188e4c-3dca-4a03-843d-3c6abd335ca0"],
Cell[CellGroupData[{
Cell[87408, 2339, 159, 3, 54, "Subsection",ExpressionUUID->"0f47aeb6-1217-49b4-87f3-96b64a0b541d"],
Cell[87570, 2344, 192, 4, 29, "Input",ExpressionUUID->"8ce2dba1-ac5d-4644-8918-7a87b4d2b138"],
Cell[87765, 2350, 164, 3, 35, "Text",ExpressionUUID->"19b3652b-4add-484e-924e-fc1153f25757"],
Cell[CellGroupData[{
Cell[87954, 2357, 3738, 98, 298, "Input",ExpressionUUID->"e201c221-daf3-4934-9f78-7fbbbd7a23cc"],
Cell[91695, 2457, 2394, 37, 70, "Output",ExpressionUUID->"172f80f0-3d4c-40bd-991a-5263e3226310"]
}, Open  ]],
Cell[94104, 2497, 159, 3, 35, "Text",ExpressionUUID->"a294d02b-3728-4c50-9dd6-c96e73bb6c1d"],
Cell[CellGroupData[{
Cell[94288, 2504, 1919, 61, 92, "Input",ExpressionUUID->"4f466e70-0054-4acf-933b-ecd60bd6385d"],
Cell[96210, 2567, 1217, 24, 70, "Output",ExpressionUUID->"34b814da-eb4a-4632-8578-59553bf61eaa"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[97476, 2597, 264, 4, 38, "Subsection",ExpressionUUID->"67478b20-f404-4ea6-ad8d-cb55f710bdce"],
Cell[CellGroupData[{
Cell[97765, 2605, 288, 5, 45, "Subsubsection",ExpressionUUID->"14203a4b-8ade-4bbd-a97d-b547ca74c951"],
Cell[98056, 2612, 158, 3, 70, "Text",ExpressionUUID->"c0c5e260-cc1d-45b6-9cfc-45cf019df568"],
Cell[CellGroupData[{
Cell[98239, 2619, 1234, 38, 70, "Input",ExpressionUUID->"b01be6a3-5f53-40a4-aa97-b5e2ec418dc5"],
Cell[99476, 2659, 1805, 50, 70, "Output",ExpressionUUID->"cfeccb27-7d2a-439c-bd9f-7b0777ae8357"]
}, Open  ]],
Cell[101296, 2712, 212, 5, 70, "Text",ExpressionUUID->"85b3d322-9b30-4337-b58a-3f71480dc317"],
Cell[CellGroupData[{
Cell[101533, 2721, 207, 4, 70, "Input",ExpressionUUID->"14012c8c-fe0c-4611-a1ff-a7bea21bc961"],
Cell[101743, 2727, 7026, 180, 70, "Print",ExpressionUUID->"f5768565-7913-46ed-a9bf-d0a2c56a5ead"],
Cell[108772, 2909, 1000, 19, 70, "Output",ExpressionUUID->"2860428b-0187-4af8-908c-85ad9379698d"]
}, Open  ]],
Cell[109787, 2931, 404, 10, 70, "Text",ExpressionUUID->"e928b812-48af-40cc-9887-535ebe367cd6"],
Cell[CellGroupData[{
Cell[110216, 2945, 124731, 2052, 70, "Input",ExpressionUUID->"cf821fb8-ad1b-4300-9a07-808850ce1819"],
Cell[234950, 4999, 124840, 2054, 70, "Output",ExpressionUUID->"e7b0f25c-9389-4e46-8d3c-9f5bde681940"]
}, Open  ]],
Cell[359805, 7056, 772, 21, 70, "Text",ExpressionUUID->"21fecbc4-e33d-48d2-a8d1-c9601f738627"],
Cell[CellGroupData[{
Cell[360602, 7081, 41667, 690, 70, "Input",ExpressionUUID->"033e53a4-277d-48be-8a87-850c4eed2ee5"],
Cell[402272, 7773, 41784, 693, 70, "Output",ExpressionUUID->"0d120743-4ff7-4c2f-aa80-52ebefb6db2a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[444105, 8472, 222, 4, 37, "Subsubsection",ExpressionUUID->"8293d699-7321-4d90-901d-f5226746f7e1"],
Cell[444330, 8478, 203, 3, 35, "Text",ExpressionUUID->"86025a51-c447-4d03-a41d-24ad83e91afa"],
Cell[444536, 8483, 1802, 58, 113, "Input",ExpressionUUID->"489308c0-d888-46ad-8e0e-d5743aa5c7ad"],
Cell[446341, 8543, 155, 3, 35, "Text",ExpressionUUID->"55bef5b3-baeb-4abe-9094-fd02d80ced3b"],
Cell[446499, 8548, 1626, 32, 45, "Input",ExpressionUUID->"ada05b80-8cb8-4def-864a-1389747c6f2e"],
Cell[448128, 8582, 220, 4, 35, "Text",ExpressionUUID->"068f9205-88ba-4336-83d3-d1ecbf03d3ed"],
Cell[CellGroupData[{
Cell[448373, 8590, 4408, 133, 156, "Input",ExpressionUUID->"7cefebeb-2036-4fcc-9d72-a5e55c87c2cc"],
Cell[452784, 8725, 5201, 114, 70, "Output",ExpressionUUID->"4faa6bdd-a6a9-4519-9339-7597c1dcb14f"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[458046, 8846, 354, 9, 55, "Subsection",ExpressionUUID->"5369cde1-8b10-4a63-8ddf-2b6ba80d55b7"],
Cell[458403, 8857, 249, 4, 35, "Text",ExpressionUUID->"57a793a1-96e2-463e-8c7a-89dfd5368549"],
Cell[CellGroupData[{
Cell[458677, 8865, 1577, 48, 72, "Input",ExpressionUUID->"f49bcf22-389a-4685-b443-413554eac06a"],
Cell[460257, 8915, 2001, 68, 50, "Output",ExpressionUUID->"224fcb3e-6841-4fff-b017-e836c1bb3e4b"]
}, Open  ]],
Cell[462273, 8986, 181, 3, 35, "Text",ExpressionUUID->"4207f181-6994-429f-aff2-f8bafb3ae8a6"],
Cell[CellGroupData[{
Cell[462479, 8993, 4741, 129, 94, "Input",ExpressionUUID->"445c0c35-5530-446f-9c5b-15045dac20db"],
Cell[467223, 9124, 2476, 54, 73, "Output",ExpressionUUID->"bd0219f4-52df-4e28-867d-18ada956ff64"]
}, Open  ]],
Cell[469714, 9181, 440, 10, 35, "Text",ExpressionUUID->"3056c578-326a-4775-bcff-5380a96b3039"],
Cell[470157, 9193, 316, 8, 29, "Input",ExpressionUUID->"85bd8e35-628a-4742-a565-af280d15fd56"],
Cell[470476, 9203, 953, 24, 53, "Input",ExpressionUUID->"e0c605b1-1b13-4f46-a21b-0feb2557c52f"],
Cell[471432, 9229, 155, 3, 35, "Text",ExpressionUUID->"b112b196-dc10-40fa-b53e-77ab62af8264"],
Cell[CellGroupData[{
Cell[471612, 9236, 244, 5, 29, "Input",ExpressionUUID->"6178238d-61ad-4dde-aba4-384fd5f0530f"],
Cell[471859, 9243, 957, 26, 76, "Output",ExpressionUUID->"106acc82-7a47-46f3-99c7-88ea349d50cb"]
}, Open  ]],
Cell[472831, 9272, 175, 3, 35, "Text",ExpressionUUID->"0adaf5ca-647f-41f5-ab5f-dd5534b296fd"],
Cell[473009, 9277, 401, 9, 32, "Input",ExpressionUUID->"e940ef7d-3697-4bc3-abac-9f57afe16bb2"],
Cell[CellGroupData[{
Cell[473435, 9290, 334, 8, 30, "Input",ExpressionUUID->"f8b23372-a9d5-43b8-b570-9aecda6f6c59"],
Cell[473772, 9300, 1081, 27, 76, "Output",ExpressionUUID->"a324ece2-a662-4f30-b346-cf2f4136a7d4"]
}, Open  ]],
Cell[474868, 9330, 187, 3, 35, "Text",ExpressionUUID->"44e130a1-ae97-460c-8df2-2b0fe37ce5d1"],
Cell[CellGroupData[{
Cell[475080, 9337, 315, 8, 32, "Input",ExpressionUUID->"feb4d75c-0074-45c3-ae7f-7e6ca39362d5"],
Cell[475398, 9347, 1901, 57, 128, "Output",ExpressionUUID->"6c9cf5f5-f8a8-4b63-b8c2-f7807a139313"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477336, 9409, 239, 5, 29, "Input",ExpressionUUID->"58d8117e-d5fe-42de-bee3-ac7f6f39709c"],
Cell[477578, 9416, 9871, 275, 542, "Output",ExpressionUUID->"288d8d58-eacb-42d8-9bf7-d59af3aa3fb1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[487498, 9697, 221, 4, 54, "Subsection",ExpressionUUID->"427aec1d-883b-4423-9c96-dd4afcd43ce6"],
Cell[487722, 9703, 3386, 98, 70, "Input",ExpressionUUID->"025954c1-886e-40e2-bad1-6302315c1090"],
Cell[CellGroupData[{
Cell[491133, 9805, 694, 21, 70, "Input",ExpressionUUID->"bacb405e-8e42-4233-a527-4832e6774d6f"],
Cell[491830, 9828, 18293, 481, 70, "Output",ExpressionUUID->"d0386340-93e4-4f5a-b6c0-d0c5321e5fb5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[510172, 10315, 228, 4, 38, "Subsection",ExpressionUUID->"cf5afe58-343a-47ae-ad5a-7f51e1348b19"],
Cell[510403, 10321, 1059, 27, 70, "Input",ExpressionUUID->"31b34f41-2f02-4823-a2a9-7481a4e1f62c"],
Cell[511465, 10350, 1267, 36, 70, "Input",ExpressionUUID->"0d842a80-d74b-4942-a624-7f1f7a22a23e"],
Cell[CellGroupData[{
Cell[512757, 10390, 211, 4, 70, "Input",ExpressionUUID->"fdc8155d-98f0-498d-9b38-1c68a36febfc"],
Cell[512971, 10396, 11959, 337, 70, "Output",ExpressionUUID->"1c38a2b0-0460-453d-86d1-8d74249f6a38"]
}, Open  ]],
Cell[524945, 10736, 212, 4, 70, "Text",ExpressionUUID->"d630b06e-0ec1-494a-8e11-471d49698959"],
Cell[CellGroupData[{
Cell[525182, 10744, 1769, 51, 70, "Input",ExpressionUUID->"0080a304-e30f-470a-9bde-1189a3e9f40c"],
Cell[526954, 10797, 681, 11, 70, "Output",ExpressionUUID->"d36260e4-db5b-4d08-be09-e304be3c1d1b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[527684, 10814, 331, 8, 37, "Subsection",ExpressionUUID->"428182c5-1166-4da2-91ca-08334e9850b7"],
Cell[528018, 10824, 160, 3, 70, "Text",ExpressionUUID->"53818a1c-b474-4abd-9bf0-168bb5181594"],
Cell[CellGroupData[{
Cell[528203, 10831, 2058, 55, 70, "Input",ExpressionUUID->"36666c9a-62d7-4869-ad14-fac34126087f"],
Cell[530264, 10888, 1011, 21, 70, "Output",ExpressionUUID->"0e931ccf-b57f-4057-816f-6b9528b60bc7"]
}, Open  ]],
Cell[531290, 10912, 217, 4, 70, "Text",ExpressionUUID->"57e23d26-3582-4e3a-9cec-699774aff62a"],
Cell[531510, 10918, 3173, 91, 70, "Input",ExpressionUUID->"379282da-9996-4888-bf67-41a148864645"],
Cell[534686, 11011, 303, 10, 70, "Text",ExpressionUUID->"1e23229e-36ea-422d-a0a4-55d65f8c6dbc"],
Cell[534992, 11023, 1307, 39, 70, "Input",ExpressionUUID->"1ec76cb4-ab54-4999-94f8-9cb8232b5e2d"],
Cell[536302, 11064, 474, 7, 70, "Text",ExpressionUUID->"923f3398-03b2-49a5-a88d-d6d029ed132b"],
Cell[CellGroupData[{
Cell[536801, 11075, 464, 10, 70, "Input",ExpressionUUID->"35035224-3284-4576-8098-d51d5f0397d6"],
Cell[537268, 11087, 9328, 255, 70, "Output",ExpressionUUID->"020c0919-6f89-4fae-a033-6502adb253ce"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[546645, 11348, 205, 4, 38, "Subsection",ExpressionUUID->"1e8faa0b-d507-467a-bb5b-eac09a2659ba"],
Cell[546853, 11354, 169, 3, 35, "Text",ExpressionUUID->"0c5d1308-6e58-43e5-b916-d74c7fe75052"],
Cell[547025, 11359, 1423, 41, 98, "Input",ExpressionUUID->"1313a47e-1dcf-4a99-bab1-fcb183d63533"],
Cell[548451, 11402, 177, 3, 35, "Text",ExpressionUUID->"4db49810-17d8-42d2-9229-de5ae1e91d4e"],
Cell[548631, 11407, 671, 19, 51, "Input",ExpressionUUID->"dde25382-682c-4091-8e78-0fd3e0ab521f"],
Cell[549305, 11428, 1703, 53, 76, "Input",ExpressionUUID->"e6f06f48-db89-4fb6-9041-0ce7400d3230"],
Cell[CellGroupData[{
Cell[551033, 11485, 582, 13, 51, "Input",ExpressionUUID->"b23dafce-0ae9-4216-865c-ae3b563d07e5"],
Cell[551618, 11500, 20766, 427, 296, "Output",ExpressionUUID->"e1d03b08-e8d1-4e90-9119-9f8e1dc4726f"],
Cell[572387, 11929, 684, 10, 48, "Output",ExpressionUUID->"c8cf0e08-7391-426e-a09e-5798bd716086"]
}, Open  ]],
Cell[573086, 11942, 267, 4, 35, "Text",ExpressionUUID->"e371a151-6246-4e62-85ae-f693f609bb35"],
Cell[573356, 11948, 4897, 140, 165, "Input",ExpressionUUID->"8f4a1ea9-f82b-43d8-a391-1f721633725c"],
Cell[CellGroupData[{
Cell[578278, 12092, 612, 15, 51, "Input",ExpressionUUID->"cc0b4960-8c4b-479c-a093-2283d938eca4"],
Cell[578893, 12109, 20647, 426, 296, "Output",ExpressionUUID->"ca1788f9-32b7-4c6f-ac51-016528436871"],
Cell[599543, 12537, 565, 9, 48, "Output",ExpressionUUID->"748dd81a-03ae-4306-8d83-3fbdb21763fd"]
}, Open  ]],
Cell[600123, 12549, 262, 4, 35, "Text",ExpressionUUID->"ad3cfcbf-e06c-4434-93bc-0ca3c578ee5e"],
Cell[CellGroupData[{
Cell[600410, 12557, 140, 3, 29, "Input",ExpressionUUID->"7ac6a7ca-e10a-4dd4-984f-71f23b86fc85"],
Cell[600553, 12562, 276, 5, 48, "Output",ExpressionUUID->"49a74958-c5c3-46b0-be74-d410962c33eb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

